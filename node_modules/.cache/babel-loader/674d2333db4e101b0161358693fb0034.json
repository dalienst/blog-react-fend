{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageHelper } from '@aws-amplify/core';\n/**\n * Default cache config\n */\n\nexport var defaultConfig = {\n  keyPrefix: 'aws-amplify-cache',\n  capacityInBytes: 1048576,\n  itemMaxSize: 210000,\n  defaultTTL: 259200000,\n  defaultPriority: 5,\n  warningThreshold: 0.8,\n  // the storage helper will check if localStorage exists,\n  // if not, will use a in-memory object instead\n  storage: new StorageHelper().getStorage()\n};\n/**\n * return the byte size of the string\n * @param str\n */\n\nexport function getByteLength(str) {\n  var ret = 0;\n  ret = str.length;\n\n  for (var i = str.length; i >= 0; i -= 1) {\n    var charCode = str.charCodeAt(i);\n\n    if (charCode > 0x7f && charCode <= 0x7ff) {\n      ret += 1;\n    } else if (charCode > 0x7ff && charCode <= 0xffff) {\n      ret += 2;\n    } // trail surrogate\n\n\n    if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n      i -= 1;\n    }\n  }\n\n  return ret;\n}\n/**\n * get current time\n */\n\nexport function getCurrTime() {\n  var currTime = new Date();\n  return currTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\n\nexport function isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n\n  return _isInteger(value);\n}\n\nfunction _isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * provide an object as the in-memory cache\n */\n\n\nvar store = {};\n\nvar CacheObject =\n/** @class */\nfunction () {\n  function CacheObject() {}\n\n  CacheObject.clear = function () {\n    store = {};\n  };\n\n  CacheObject.getItem = function (key) {\n    return store[key] || null;\n  };\n\n  CacheObject.setItem = function (key, value) {\n    store[key] = value;\n  };\n\n  CacheObject.removeItem = function (key) {\n    delete store[key];\n  };\n\n  return CacheObject;\n}();\n\nexport { CacheObject };","map":{"version":3,"mappings":"AAAA;AACA;AAGA,SAASA,aAAT,QAA8B,mBAA9B;AACA;;;;AAGA,OAAO,IAAMC,aAAa,GAAgB;AACzCC,WAAS,EAAE,mBAD8B;AAEzCC,iBAAe,EAAE,OAFwB;AAGzCC,aAAW,EAAE,MAH4B;AAIzCC,YAAU,EAAE,SAJ6B;AAKzCC,iBAAe,EAAE,CALwB;AAMzCC,kBAAgB,EAAE,GANuB;AAOzC;AACA;AACAC,SAAO,EAAE,IAAIR,aAAJ,GAAoBS,UAApB;AATgC,CAAnC;AAYP;;;;;AAIA,OAAM,SAAUC,aAAV,CAAwBC,GAAxB,EAAmC;AACxC,MAAIC,GAAG,GAAW,CAAlB;AACAA,KAAG,GAAGD,GAAG,CAACE,MAAV;;AAEA,OAAK,IAAIC,CAAC,GAAGH,GAAG,CAACE,MAAjB,EAAyBC,CAAC,IAAI,CAA9B,EAAiCA,CAAC,IAAI,CAAtC,EAAyC;AACxC,QAAMC,QAAQ,GAAWJ,GAAG,CAACK,UAAJ,CAAeF,CAAf,CAAzB;;AACA,QAAIC,QAAQ,GAAG,IAAX,IAAmBA,QAAQ,IAAI,KAAnC,EAA0C;AACzCH,SAAG,IAAI,CAAP;AACA,KAFD,MAEO,IAAIG,QAAQ,GAAG,KAAX,IAAoBA,QAAQ,IAAI,MAApC,EAA4C;AAClDH,SAAG,IAAI,CAAP;AACA,KANuC,CAOxC;;;AACA,QAAIG,QAAQ,IAAI,MAAZ,IAAsBA,QAAQ,IAAI,MAAtC,EAA8C;AAC7CD,OAAC,IAAI,CAAL;AACA;AACD;;AAED,SAAOF,GAAP;AACA;AAED;;;;AAGA,OAAM,SAAUK,WAAV,GAAqB;AAC1B,MAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACA,SAAOD,QAAQ,CAACE,OAAT,EAAP;AACA;AAED;;;;AAGA,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAAyB;AAC9B,MAAIC,MAAM,CAACF,SAAX,EAAsB;AACrB,WAAOE,MAAM,CAACF,SAAP,CAAiBC,KAAjB,CAAP;AACA;;AAED,SAAOE,UAAU,CAACF,KAAD,CAAjB;AACA;;AAED,SAASE,UAAT,CAAoBF,KAApB,EAAyB;AACxB,SACC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BG,QAAQ,CAACH,KAAD,CAArC,IAAgDI,IAAI,CAACC,KAAL,CAAWL,KAAX,MAAsBA,KADvE;AAGA;AAED;;;;;AAGA,IAAIM,KAAK,GAAG,EAAZ;;AACA;AAAA;AAAA;AAAA,0BAgBC;;AAfOC,sBAAP;AACCD,SAAK,GAAG,EAAR;AACA,GAFM;;AAIAC,wBAAP,UAAeC,GAAf,EAA0B;AACzB,WAAOF,KAAK,CAACE,GAAD,CAAL,IAAc,IAArB;AACA,GAFM;;AAIAD,wBAAP,UAAeC,GAAf,EAA4BR,KAA5B,EAAyC;AACxCM,SAAK,CAACE,GAAD,CAAL,GAAaR,KAAb;AACA,GAFM;;AAIAO,2BAAP,UAAkBC,GAAlB,EAA6B;AAC5B,WAAOF,KAAK,CAACE,GAAD,CAAZ;AACA,GAFM;;AAGR;AAAC,CAhBD","names":["StorageHelper","defaultConfig","keyPrefix","capacityInBytes","itemMaxSize","defaultTTL","defaultPriority","warningThreshold","storage","getStorage","getByteLength","str","ret","length","i","charCode","charCodeAt","getCurrTime","currTime","Date","getTime","isInteger","value","Number","_isInteger","isFinite","Math","floor","store","CacheObject","key"],"sources":["/home/dalienst/node_modules/@aws-amplify/cache/src/Utils/CacheUtils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { CacheConfig, CacheItem, CacheItemOptions } from '../types';\r\nimport { StorageHelper } from '@aws-amplify/core';\r\n/**\r\n * Default cache config\r\n */\r\nexport const defaultConfig: CacheConfig = {\r\n\tkeyPrefix: 'aws-amplify-cache',\r\n\tcapacityInBytes: 1048576, // 1MB\r\n\titemMaxSize: 210000, // about 200kb\r\n\tdefaultTTL: 259200000, // about 3 days\r\n\tdefaultPriority: 5,\r\n\twarningThreshold: 0.8,\r\n\t// the storage helper will check if localStorage exists,\r\n\t// if not, will use a in-memory object instead\r\n\tstorage: new StorageHelper().getStorage(),\r\n};\r\n\r\n/**\r\n * return the byte size of the string\r\n * @param str\r\n */\r\nexport function getByteLength(str: string): number {\r\n\tlet ret: number = 0;\r\n\tret = str.length;\r\n\r\n\tfor (let i = str.length; i >= 0; i -= 1) {\r\n\t\tconst charCode: number = str.charCodeAt(i);\r\n\t\tif (charCode > 0x7f && charCode <= 0x7ff) {\r\n\t\t\tret += 1;\r\n\t\t} else if (charCode > 0x7ff && charCode <= 0xffff) {\r\n\t\t\tret += 2;\r\n\t\t}\r\n\t\t// trail surrogate\r\n\t\tif (charCode >= 0xdc00 && charCode <= 0xdfff) {\r\n\t\t\ti -= 1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n/**\r\n * get current time\r\n */\r\nexport function getCurrTime(): number {\r\n\tconst currTime = new Date();\r\n\treturn currTime.getTime();\r\n}\r\n\r\n/**\r\n * check if passed value is an integer\r\n */\r\nexport function isInteger(value): boolean {\r\n\tif (Number.isInteger) {\r\n\t\treturn Number.isInteger(value);\r\n\t}\r\n\r\n\treturn _isInteger(value);\r\n}\r\n\r\nfunction _isInteger(value): boolean {\r\n\treturn (\r\n\t\ttypeof value === 'number' && isFinite(value) && Math.floor(value) === value\r\n\t);\r\n}\r\n\r\n/**\r\n * provide an object as the in-memory cache\r\n */\r\nlet store = {};\r\nexport class CacheObject {\r\n\tstatic clear(): void {\r\n\t\tstore = {};\r\n\t}\r\n\r\n\tstatic getItem(key: string): string | null {\r\n\t\treturn store[key] || null;\r\n\t}\r\n\r\n\tstatic setItem(key: string, value: string): void {\r\n\t\tstore[key] = value;\r\n\t}\r\n\r\n\tstatic removeItem(key: string): void {\r\n\t\tdelete store[key];\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}