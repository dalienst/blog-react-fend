{"ast":null,"code":"import $73KQ4$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $73KQ4$forwardRef, createElement as $73KQ4$createElement, useCallback as $73KQ4$useCallback, useState as $73KQ4$useState, useRef as $73KQ4$useRef, useEffect as $73KQ4$useEffect } from \"react\";\nimport { composeEventHandlers as $73KQ4$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope as $73KQ4$createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState as $73KQ4$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect as $73KQ4$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs as $73KQ4$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive as $73KQ4$Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence as $73KQ4$Presence } from \"@radix-ui/react-presence\";\nimport { useId as $73KQ4$useId } from \"@radix-ui/react-id\";\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst $409067139f391064$var$COLLAPSIBLE_NAME = 'Collapsible';\nconst [$409067139f391064$var$createCollapsibleContext, $409067139f391064$export$952b32dcbe73087a] = $73KQ4$createContextScope($409067139f391064$var$COLLAPSIBLE_NAME);\nconst [$409067139f391064$var$CollapsibleProvider, $409067139f391064$var$useCollapsibleContext] = $409067139f391064$var$createCollapsibleContext($409067139f391064$var$COLLAPSIBLE_NAME);\nconst $409067139f391064$export$6eb0f7ddcda6131f = /*#__PURE__*/$73KQ4$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeCollapsible: __scopeCollapsible,\n    open: openProp,\n    defaultOpen: defaultOpen,\n    disabled: disabled,\n    onOpenChange: onOpenChange,\n    ...collapsibleProps\n  } = props;\n  const [open = false, setOpen] = $73KQ4$useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /*#__PURE__*/$73KQ4$createElement($409067139f391064$var$CollapsibleProvider, {\n    scope: __scopeCollapsible,\n    disabled: disabled,\n    contentId: $73KQ4$useId(),\n    open: open,\n    onOpenToggle: $73KQ4$useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen])\n  }, /*#__PURE__*/$73KQ4$createElement($73KQ4$Primitive.div, $73KQ4$babelruntimehelpersesmextends({\n    \"data-state\": $409067139f391064$var$getState(open),\n    \"data-disabled\": disabled ? '' : undefined\n  }, collapsibleProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($409067139f391064$export$6eb0f7ddcda6131f, {\n  displayName: $409067139f391064$var$COLLAPSIBLE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $409067139f391064$var$TRIGGER_NAME = 'CollapsibleTrigger';\nconst $409067139f391064$export$c135dce7b15bbbdc = /*#__PURE__*/$73KQ4$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeCollapsible: __scopeCollapsible,\n    ...triggerProps\n  } = props;\n  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$TRIGGER_NAME, __scopeCollapsible);\n  return /*#__PURE__*/$73KQ4$createElement($73KQ4$Primitive.button, $73KQ4$babelruntimehelpersesmextends({\n    type: \"button\",\n    \"aria-controls\": context.contentId,\n    \"aria-expanded\": context.open || false,\n    \"data-state\": $409067139f391064$var$getState(context.open),\n    \"data-disabled\": context.disabled ? '' : undefined,\n    disabled: context.disabled\n  }, triggerProps, {\n    ref: forwardedRef,\n    onClick: $73KQ4$composeEventHandlers(props.onClick, context.onOpenToggle)\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($409067139f391064$export$c135dce7b15bbbdc, {\n  displayName: $409067139f391064$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $409067139f391064$var$CONTENT_NAME = 'CollapsibleContent';\nconst $409067139f391064$export$aadde00976f34151 = /*#__PURE__*/$73KQ4$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...contentProps\n  } = props;\n  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, props.__scopeCollapsible);\n  return /*#__PURE__*/$73KQ4$createElement($73KQ4$Presence, {\n    present: forceMount || context.open\n  }, _ref => {\n    let {\n      present: present\n    } = _ref;\n    return /*#__PURE__*/$73KQ4$createElement($409067139f391064$var$CollapsibleContentImpl, $73KQ4$babelruntimehelpersesmextends({}, contentProps, {\n      ref: forwardedRef,\n      present: present\n    }));\n  });\n});\n/*#__PURE__*/\n\nObject.assign($409067139f391064$export$aadde00976f34151, {\n  displayName: $409067139f391064$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $409067139f391064$var$CollapsibleContentImpl = /*#__PURE__*/$73KQ4$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeCollapsible: __scopeCollapsible,\n    present: present,\n    children: children,\n    ...contentProps\n  } = props;\n  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = $73KQ4$useState(present);\n  const ref = $73KQ4$useRef(null);\n  const composedRefs = $73KQ4$useComposedRefs(forwardedRef, ref);\n  const heightRef = $73KQ4$useRef(0);\n  const height = heightRef.current;\n  const widthRef = $73KQ4$useRef(0);\n  const width = widthRef.current; // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = $73KQ4$useRef(isOpen);\n  const originalStylesRef = $73KQ4$useRef();\n  $73KQ4$useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  $73KQ4$useLayoutEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationDuration: node.style.animationDuration,\n        animationFillMode: node.style.animationFillMode\n      }; // block any animations/transitions so the element renders at its full dimensions\n\n      node.style.transitionDuration = '0s';\n      node.style.animationDuration = '0s';\n      node.style.animationFillMode = 'none'; // get width and height from full dimensions\n\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width; // kick off any animations/transitions that were originally set up if it isn't the initial mount\n\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationDuration = originalStylesRef.current.animationDuration;\n        node.style.animationFillMode = originalStylesRef.current.animationFillMode;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n\n  }, [context.open, present]);\n  return /*#__PURE__*/$73KQ4$createElement($73KQ4$Primitive.div, $73KQ4$babelruntimehelpersesmextends({\n    \"data-state\": $409067139f391064$var$getState(context.open),\n    \"data-disabled\": context.disabled ? '' : undefined,\n    id: context.contentId,\n    hidden: !isOpen\n  }, contentProps, {\n    ref: composedRefs,\n    style: {\n      [`--radix-collapsible-content-height`]: height ? `${height}px` : undefined,\n      [`--radix-collapsible-content-width`]: width ? `${width}px` : undefined,\n      ...props.style\n    }\n  }), isOpen && children);\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction $409067139f391064$var$getState(open) {\n  return open ? 'open' : 'closed';\n}\n\nconst $409067139f391064$export$be92b6f5f03c0fe9 = $409067139f391064$export$6eb0f7ddcda6131f;\nconst $409067139f391064$export$41fb9f06171c75f4 = $409067139f391064$export$c135dce7b15bbbdc;\nconst $409067139f391064$export$7c6e2c02157bb7d2 = $409067139f391064$export$aadde00976f34151;\nexport { $409067139f391064$export$952b32dcbe73087a as createCollapsibleScope, $409067139f391064$export$6eb0f7ddcda6131f as Collapsible, $409067139f391064$export$c135dce7b15bbbdc as CollapsibleTrigger, $409067139f391064$export$aadde00976f34151 as CollapsibleContent, $409067139f391064$export$be92b6f5f03c0fe9 as Root, $409067139f391064$export$41fb9f06171c75f4 as Trigger, $409067139f391064$export$7c6e2c02157bb7d2 as Content };","map":{"version":3,"mappings":"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","names":["COLLAPSIBLE_NAME","createCollapsibleContext","createCollapsibleScope","createContextScope","CollapsibleProvider","useCollapsibleContext","Collapsible","React","props","forwardedRef","__scopeCollapsible","open","openProp","defaultOpen","disabled","onOpenChange","collapsibleProps","setOpen","useControllableState","prop","defaultProp","onChange","$73KQ4$createElement","$409067139f391064$var$CollapsibleProvider","scope","contentId","useId","onOpenToggle","prevOpen","$73KQ4$Primitive","div","$73KQ4$babelruntimehelpersesmextends","getState","undefined","ref","Object","displayName","TRIGGER_NAME","CollapsibleTrigger","triggerProps","context","button","type","onClick","composeEventHandlers","CONTENT_NAME","CollapsibleContent","forceMount","contentProps","$73KQ4$Presence","present","$409067139f391064$var$CollapsibleContentImpl","CollapsibleContentImpl","children","isPresent","setIsPresent","composedRefs","useComposedRefs","heightRef","height","current","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","rAF","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","node","transitionDuration","style","animationDuration","animationFillMode","rect","getBoundingClientRect","id","hidden","Root","Trigger","Content"],"sources":["/home/dalienst/node_modules/@radix-ui/react-collapsible/dist/packages/react/collapsible/src/Collapsible.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ElementRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>();\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationDuration: node.style.animationDuration,\n        animationFillMode: node.style.animationFillMode,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationDuration = '0s';\n      node.style.animationFillMode = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationDuration = originalStylesRef.current.animationDuration;\n        node.style.animationFillMode = originalStylesRef.current.animationFillMode;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n"]},"metadata":{},"sourceType":"module"}