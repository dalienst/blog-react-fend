{"ast":null,"code":"import $1IHzk$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $1IHzk$forwardRef, createElement as $1IHzk$createElement, useRef as $1IHzk$useRef, useEffect as $1IHzk$useEffect } from \"react\";\nimport { composeEventHandlers as $1IHzk$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope as $1IHzk$createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope as $1IHzk$createRovingFocusGroupScope, Root as $1IHzk$Root, Item as $1IHzk$Item } from \"@radix-ui/react-roving-focus\";\nimport { Presence as $1IHzk$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $1IHzk$Primitive } from \"@radix-ui/react-primitive\";\nimport { useDirection as $1IHzk$useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState as $1IHzk$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId as $1IHzk$useId } from \"@radix-ui/react-id\";\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst $69cb30bb0017df05$var$TABS_NAME = 'Tabs';\nconst [$69cb30bb0017df05$var$createTabsContext, $69cb30bb0017df05$export$355f5bd209d7b13a] = $1IHzk$createContextScope($69cb30bb0017df05$var$TABS_NAME, [$1IHzk$createRovingFocusGroupScope]);\nconst $69cb30bb0017df05$var$useRovingFocusGroupScope = $1IHzk$createRovingFocusGroupScope();\nconst [$69cb30bb0017df05$var$TabsProvider, $69cb30bb0017df05$var$useTabsContext] = $69cb30bb0017df05$var$createTabsContext($69cb30bb0017df05$var$TABS_NAME);\nconst $69cb30bb0017df05$export$b2539bed5023c21c = /*#__PURE__*/$1IHzk$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeTabs: __scopeTabs,\n    value: valueProp,\n    onValueChange: onValueChange,\n    defaultValue: defaultValue,\n    orientation = 'horizontal',\n    dir: dir,\n    activationMode = 'automatic',\n    ...tabsProps\n  } = props;\n  const direction = $1IHzk$useDirection(dir);\n  const [value, setValue] = $1IHzk$useControllableState({\n    prop: valueProp,\n    onChange: onValueChange,\n    defaultProp: defaultValue\n  });\n  return /*#__PURE__*/$1IHzk$createElement($69cb30bb0017df05$var$TabsProvider, {\n    scope: __scopeTabs,\n    baseId: $1IHzk$useId(),\n    value: value,\n    onValueChange: setValue,\n    orientation: orientation,\n    dir: direction,\n    activationMode: activationMode\n  }, /*#__PURE__*/$1IHzk$createElement($1IHzk$Primitive.div, $1IHzk$babelruntimehelpersesmextends({\n    dir: direction,\n    \"data-orientation\": orientation\n  }, tabsProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($69cb30bb0017df05$export$b2539bed5023c21c, {\n  displayName: $69cb30bb0017df05$var$TABS_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst $69cb30bb0017df05$var$TAB_LIST_NAME = 'TabsList';\nconst $69cb30bb0017df05$export$9712d22edc0d78c1 = /*#__PURE__*/$1IHzk$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeTabs: __scopeTabs,\n    loop = true,\n    ...listProps\n  } = props;\n  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$TAB_LIST_NAME, __scopeTabs);\n  const rovingFocusGroupScope = $69cb30bb0017df05$var$useRovingFocusGroupScope(__scopeTabs);\n  return /*#__PURE__*/$1IHzk$createElement($1IHzk$Root, $1IHzk$babelruntimehelpersesmextends({\n    asChild: true\n  }, rovingFocusGroupScope, {\n    orientation: context.orientation,\n    dir: context.dir,\n    loop: loop\n  }), /*#__PURE__*/$1IHzk$createElement($1IHzk$Primitive.div, $1IHzk$babelruntimehelpersesmextends({\n    role: \"tablist\",\n    \"aria-orientation\": context.orientation\n  }, listProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($69cb30bb0017df05$export$9712d22edc0d78c1, {\n  displayName: $69cb30bb0017df05$var$TAB_LIST_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $69cb30bb0017df05$var$TRIGGER_NAME = 'TabsTrigger';\nconst $69cb30bb0017df05$export$8114b9fdfdf9f3ba = /*#__PURE__*/$1IHzk$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeTabs: __scopeTabs,\n    value: value,\n    disabled = false,\n    ...triggerProps\n  } = props;\n  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$TRIGGER_NAME, __scopeTabs);\n  const rovingFocusGroupScope = $69cb30bb0017df05$var$useRovingFocusGroupScope(__scopeTabs);\n  const triggerId = $69cb30bb0017df05$var$makeTriggerId(context.baseId, value);\n  const contentId = $69cb30bb0017df05$var$makeContentId(context.baseId, value);\n  const isSelected = value === context.value;\n  return /*#__PURE__*/$1IHzk$createElement($1IHzk$Item, $1IHzk$babelruntimehelpersesmextends({\n    asChild: true\n  }, rovingFocusGroupScope, {\n    focusable: !disabled,\n    active: isSelected\n  }), /*#__PURE__*/$1IHzk$createElement($1IHzk$Primitive.button, $1IHzk$babelruntimehelpersesmextends({\n    type: \"button\",\n    role: \"tab\",\n    \"aria-selected\": isSelected,\n    \"aria-controls\": contentId,\n    \"data-state\": isSelected ? 'active' : 'inactive',\n    \"data-disabled\": disabled ? '' : undefined,\n    disabled: disabled,\n    id: triggerId\n  }, triggerProps, {\n    ref: forwardedRef,\n    onMouseDown: $1IHzk$composeEventHandlers(props.onMouseDown, event => {\n      // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n      // but not when the control key is pressed (avoiding MacOS right click)\n      if (!disabled && event.button === 0 && event.ctrlKey === false) context.onValueChange(value);else // prevent focus to avoid accidental activation\n        event.preventDefault();\n    }),\n    onKeyDown: $1IHzk$composeEventHandlers(props.onKeyDown, event => {\n      if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n    }),\n    onFocus: $1IHzk$composeEventHandlers(props.onFocus, () => {\n      // handle \"automatic\" activation if necessary\n      // ie. activate tab following focus\n      const isAutomaticActivation = context.activationMode !== 'manual';\n      if (!isSelected && !disabled && isAutomaticActivation) context.onValueChange(value);\n    })\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($69cb30bb0017df05$export$8114b9fdfdf9f3ba, {\n  displayName: $69cb30bb0017df05$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $69cb30bb0017df05$var$CONTENT_NAME = 'TabsContent';\nconst $69cb30bb0017df05$export$bd905d70e8fd2ebb = /*#__PURE__*/$1IHzk$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeTabs: __scopeTabs,\n    value: value,\n    forceMount: forceMount,\n    children: children,\n    ...contentProps\n  } = props;\n  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$CONTENT_NAME, __scopeTabs);\n  const triggerId = $69cb30bb0017df05$var$makeTriggerId(context.baseId, value);\n  const contentId = $69cb30bb0017df05$var$makeContentId(context.baseId, value);\n  const isSelected = value === context.value;\n  const isMountAnimationPreventedRef = $1IHzk$useRef(isSelected);\n  $1IHzk$useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  return /*#__PURE__*/$1IHzk$createElement($1IHzk$Presence, {\n    present: forceMount || isSelected\n  }, _ref => {\n    let {\n      present: present\n    } = _ref;\n    return /*#__PURE__*/$1IHzk$createElement($1IHzk$Primitive.div, $1IHzk$babelruntimehelpersesmextends({\n      \"data-state\": isSelected ? 'active' : 'inactive',\n      \"data-orientation\": context.orientation,\n      role: \"tabpanel\",\n      \"aria-labelledby\": triggerId,\n      hidden: !present,\n      id: contentId,\n      tabIndex: 0\n    }, contentProps, {\n      ref: forwardedRef,\n      style: { ...props.style,\n        animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined\n      }\n    }), present && children);\n  });\n});\n/*#__PURE__*/\n\nObject.assign($69cb30bb0017df05$export$bd905d70e8fd2ebb, {\n  displayName: $69cb30bb0017df05$var$CONTENT_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction $69cb30bb0017df05$var$makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction $69cb30bb0017df05$var$makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\n\nconst $69cb30bb0017df05$export$be92b6f5f03c0fe9 = $69cb30bb0017df05$export$b2539bed5023c21c;\nconst $69cb30bb0017df05$export$54c2e3dc7acea9f5 = $69cb30bb0017df05$export$9712d22edc0d78c1;\nconst $69cb30bb0017df05$export$41fb9f06171c75f4 = $69cb30bb0017df05$export$8114b9fdfdf9f3ba;\nconst $69cb30bb0017df05$export$7c6e2c02157bb7d2 = $69cb30bb0017df05$export$bd905d70e8fd2ebb;\nexport { $69cb30bb0017df05$export$355f5bd209d7b13a as createTabsScope, $69cb30bb0017df05$export$b2539bed5023c21c as Tabs, $69cb30bb0017df05$export$9712d22edc0d78c1 as TabsList, $69cb30bb0017df05$export$8114b9fdfdf9f3ba as TabsTrigger, $69cb30bb0017df05$export$bd905d70e8fd2ebb as TabsContent, $69cb30bb0017df05$export$be92b6f5f03c0fe9 as Root, $69cb30bb0017df05$export$54c2e3dc7acea9f5 as List, $69cb30bb0017df05$export$41fb9f06171c75f4 as Trigger, $69cb30bb0017df05$export$7c6e2c02157bb7d2 as Content };","map":{"version":3,"mappings":"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","names":["TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","direction","useDirection","setValue","useControllableState","prop","onChange","defaultProp","$1IHzk$createElement","$69cb30bb0017df05$var$TabsProvider","scope","baseId","useId","$1IHzk$Primitive","div","$1IHzk$babelruntimehelpersesmextends","ref","Object","displayName","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","$1IHzk$Root","asChild","role","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","$1IHzk$Item","focusable","active","button","type","undefined","id","onMouseDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","key","onFocus","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","rAF","requestAnimationFrame","current","cancelAnimationFrame","$1IHzk$Presence","present","hidden","tabIndex","style","animationDuration","Root","List","Trigger","Content"],"sources":["/home/dalienst/node_modules/@radix-ui/react-tabs/dist/packages/react/tabs/src/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"]},"metadata":{},"sourceType":"module"}