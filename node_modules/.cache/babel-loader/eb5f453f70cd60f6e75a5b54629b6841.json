{"ast":null,"code":"import $epM9y$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { useState as $epM9y$useState, useRef as $epM9y$useRef, useEffect as $epM9y$useEffect, createElement as $epM9y$createElement, useCallback as $epM9y$useCallback, forwardRef as $epM9y$forwardRef, Fragment as $epM9y$Fragment } from \"react\";\nimport { composeEventHandlers as $epM9y$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection as $epM9y$createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs as $epM9y$useComposedRefs, composeRefs as $epM9y$composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $epM9y$createContextScope } from \"@radix-ui/react-context\";\nimport { useDirection as $epM9y$useDirection } from \"@radix-ui/react-direction\";\nimport { DismissableLayer as $epM9y$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards as $epM9y$useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope as $epM9y$FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId as $epM9y$useId } from \"@radix-ui/react-id\";\nimport { createPopperScope as $epM9y$createPopperScope, Root as $epM9y$Root, Anchor as $epM9y$Anchor, Content as $epM9y$Content, Arrow as $epM9y$Arrow } from \"@radix-ui/react-popper\";\nimport { Portal as $epM9y$Portal } from \"@radix-ui/react-portal\";\nimport { Presence as $epM9y$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $epM9y$Primitive, dispatchDiscreteCustomEvent as $epM9y$dispatchDiscreteCustomEvent } from \"@radix-ui/react-primitive\";\nimport { createRovingFocusGroupScope as $epM9y$createRovingFocusGroupScope, Root as $epM9y$Root1, Item as $epM9y$Item } from \"@radix-ui/react-roving-focus\";\nimport { Slot as $epM9y$Slot } from \"@radix-ui/react-slot\";\nimport { useCallbackRef as $epM9y$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { hideOthers as $epM9y$hideOthers } from \"aria-hidden\";\nimport { RemoveScroll as $epM9y$RemoveScroll } from \"react-remove-scroll\";\nconst $6cc32821e9371a1c$var$SELECTION_KEYS = ['Enter', ' '];\nconst $6cc32821e9371a1c$var$FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst $6cc32821e9371a1c$var$LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [...$6cc32821e9371a1c$var$FIRST_KEYS, ...$6cc32821e9371a1c$var$LAST_KEYS];\nconst $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {\n  ltr: [...$6cc32821e9371a1c$var$SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...$6cc32821e9371a1c$var$SELECTION_KEYS, 'ArrowLeft']\n};\nconst $6cc32821e9371a1c$var$SUB_CLOSE_KEYS = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight']\n};\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$MENU_NAME = 'Menu';\nconst [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $epM9y$createCollection($6cc32821e9371a1c$var$MENU_NAME);\nconst [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $epM9y$createContextScope($6cc32821e9371a1c$var$MENU_NAME, [$6cc32821e9371a1c$var$createCollectionScope, $epM9y$createPopperScope, $epM9y$createRovingFocusGroupScope]);\nconst $6cc32821e9371a1c$var$usePopperScope = $epM9y$createPopperScope();\nconst $6cc32821e9371a1c$var$useRovingFocusGroupScope = $epM9y$createRovingFocusGroupScope();\nconst [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);\nconst [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);\n\nconst $6cc32821e9371a1c$export$d9b273488cd8ce6f = props => {\n  const {\n    __scopeMenu: __scopeMenu,\n    open = false,\n    children: children,\n    dir: dir,\n    onOpenChange: onOpenChange,\n    modal = true\n  } = props;\n  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n  const [content, setContent] = $epM9y$useState(null);\n  const isUsingKeyboardRef = $epM9y$useRef(false);\n  const handleOpenChange = $epM9y$useCallbackRef(onOpenChange);\n  const direction = $epM9y$useDirection(dir);\n  $epM9y$useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, {\n        capture: true,\n        once: true\n      });\n      document.addEventListener('pointermove', handlePointer, {\n        capture: true,\n        once: true\n      });\n    };\n\n    const handlePointer = () => isUsingKeyboardRef.current = false;\n\n    document.addEventListener('keydown', handleKeyDown, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, {\n        capture: true\n      });\n      document.removeEventListener('pointerdown', handlePointer, {\n        capture: true\n      });\n      document.removeEventListener('pointermove', handlePointer, {\n        capture: true\n      });\n    };\n  }, []);\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Root, popperScope, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuProvider, {\n    scope: __scopeMenu,\n    open: open,\n    onOpenChange: handleOpenChange,\n    content: content,\n    onContentChange: setContent\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuRootProvider, {\n    scope: __scopeMenu,\n    onClose: $epM9y$useCallback(() => handleOpenChange(false), [handleOpenChange]),\n    isUsingKeyboardRef: isUsingKeyboardRef,\n    dir: direction,\n    modal: modal\n  }, children)));\n};\n/*#__PURE__*/\n\n\nObject.assign($6cc32821e9371a1c$export$d9b273488cd8ce6f, {\n  displayName: $6cc32821e9371a1c$var$MENU_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$ANCHOR_NAME = 'MenuAnchor';\nconst $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    ...anchorProps\n  } = props;\n  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Anchor, $epM9y$babelruntimehelpersesmextends({}, popperScope, anchorProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$9fa5ebd18bee4d43, {\n  displayName: $6cc32821e9371a1c$var$ANCHOR_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$PORTAL_NAME = 'MenuPortal';\nconst [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {\n  forceMount: undefined\n});\n\nconst $6cc32821e9371a1c$export$793392f970497feb = props => {\n  const {\n    __scopeMenu: __scopeMenu,\n    forceMount: forceMount,\n    children: children,\n    container: container\n  } = props;\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$PortalProvider, {\n    scope: __scopeMenu,\n    forceMount: forceMount\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Portal, {\n    asChild: true,\n    container: container\n  }, children)));\n};\n/*#__PURE__*/\n\n\nObject.assign($6cc32821e9371a1c$export$793392f970497feb, {\n  displayName: $6cc32821e9371a1c$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$CONTENT_NAME = 'MenuContent';\nconst [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME);\nconst $6cc32821e9371a1c$export$479f0f2f71193efe = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const {\n    forceMount = portalContext.forceMount,\n    ...contentProps\n  } = props;\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$Collection.Provider, {\n    scope: props.__scopeMenu\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$Collection.Slot, {\n    scope: props.__scopeMenu\n  }, rootContext.modal ? /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuRootContentModal, $epM9y$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })) : /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuRootContentNonModal, $epM9y$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })))));\n});\n/* ---------------------------------------------------------------------------------------------- */\n\nconst $6cc32821e9371a1c$var$MenuRootContentModal = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const ref = $epM9y$useRef(null);\n  const composedRefs = $epM9y$useComposedRefs(forwardedRef, ref); // Hide everything from ARIA except the `MenuContent`\n\n  $epM9y$useEffect(() => {\n    const content = ref.current;\n    if (content) return $epM9y$hideOthers(content);\n  }, []);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuContentImpl, $epM9y$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs // we make sure we're not trapping once it's been closed\n    ,\n    trapFocus: context.open // make sure to only disable pointer events when open\n    ,\n    disableOutsidePointerEvents: context.open,\n    disableOutsideScroll: true // When focus is trapped, a `focusout` event may still happen.\n    ,\n    onFocusOutside: $epM9y$composeEventHandlers(props.onFocusOutside, event => event.preventDefault(), {\n      checkForDefaultPrevented: false\n    }),\n    onDismiss: () => context.onOpenChange(false)\n  }));\n});\nconst $6cc32821e9371a1c$var$MenuRootContentNonModal = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuContentImpl, $epM9y$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    disableOutsideScroll: false,\n    onDismiss: () => context.onOpenChange(false)\n  }));\n});\n/* ---------------------------------------------------------------------------------------------- */\n\nconst $6cc32821e9371a1c$var$MenuContentImpl = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    loop = false,\n    trapFocus: trapFocus,\n    onOpenAutoFocus: onOpenAutoFocus,\n    onCloseAutoFocus: onCloseAutoFocus,\n    disableOutsidePointerEvents: disableOutsidePointerEvents,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onPointerDownOutside: onPointerDownOutside,\n    onFocusOutside: onFocusOutside,\n    onInteractOutside: onInteractOutside,\n    onDismiss: onDismiss,\n    disableOutsideScroll: disableOutsideScroll,\n    ...contentProps\n  } = props;\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);\n  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);\n  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);\n  const getItems = $6cc32821e9371a1c$var$useCollection(__scopeMenu);\n  const [currentItemId, setCurrentItemId] = $epM9y$useState(null);\n  const contentRef = $epM9y$useRef(null);\n  const composedRefs = $epM9y$useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n  const timerRef = $epM9y$useRef(0);\n  const searchRef = $epM9y$useRef('');\n  const pointerGraceTimerRef = $epM9y$useRef(0);\n  const pointerGraceIntentRef = $epM9y$useRef(null);\n  const pointerDirRef = $epM9y$useRef('right');\n  const lastPointerXRef = $epM9y$useRef(0);\n  const ScrollLockWrapper = disableOutsideScroll ? $epM9y$RemoveScroll : $epM9y$Fragment;\n  const scrollLockWrapperProps = disableOutsideScroll ? {\n    as: $epM9y$Slot,\n    allowPinchZoom: true\n  } : undefined;\n\n  const handleTypeaheadSearch = key => {\n    var _items$find, _items$find2;\n\n    const search = searchRef.current + key;\n    const items = getItems().filter(item => !item.disabled);\n    const currentItem = document.activeElement;\n    const currentMatch = (_items$find = items.find(item => item.ref.current === currentItem)) === null || _items$find === void 0 ? void 0 : _items$find.textValue;\n    const values = items.map(item => item.textValue);\n    const nextMatch = $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch);\n    const newItem = (_items$find2 = items.find(item => item.textValue === nextMatch)) === null || _items$find2 === void 0 ? void 0 : _items$find2.ref.current; // Reset `searchRef` 1 second after it was last updated\n\n    (function updateSearch(value) {\n      searchRef.current = value;\n      window.clearTimeout(timerRef.current);\n      if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n    })(search);\n\n    if (newItem)\n      /**\n      * Imperative focus during keydown is risky so we prevent React's batching updates\n      * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n      */\n      setTimeout(() => newItem.focus());\n  };\n\n  $epM9y$useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []); // Make sure the whole tree has focus guards as our `MenuContent` may be\n  // the last element in the DOM (beacuse of the `Portal`)\n\n  $epM9y$useFocusGuards();\n  const isPointerMovingToSubmenu = $epM9y$useCallback(event => {\n    var _pointerGraceIntentRe, _pointerGraceIntentRe2;\n\n    const isMovingTowards = pointerDirRef.current === ((_pointerGraceIntentRe = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe === void 0 ? void 0 : _pointerGraceIntentRe.side);\n    return isMovingTowards && $6cc32821e9371a1c$var$isPointerInGraceArea(event, (_pointerGraceIntentRe2 = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe2 === void 0 ? void 0 : _pointerGraceIntentRe2.area);\n  }, []);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuContentProvider, {\n    scope: __scopeMenu,\n    searchRef: searchRef,\n    onItemEnter: $epM9y$useCallback(event => {\n      if (isPointerMovingToSubmenu(event)) event.preventDefault();\n    }, [isPointerMovingToSubmenu]),\n    onItemLeave: $epM9y$useCallback(event => {\n      var _contentRef$current;\n\n      if (isPointerMovingToSubmenu(event)) return;\n      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus();\n      setCurrentItemId(null);\n    }, [isPointerMovingToSubmenu]),\n    onTriggerLeave: $epM9y$useCallback(event => {\n      if (isPointerMovingToSubmenu(event)) event.preventDefault();\n    }, [isPointerMovingToSubmenu]),\n    pointerGraceTimerRef: pointerGraceTimerRef,\n    onPointerGraceIntentChange: $epM9y$useCallback(intent => {\n      pointerGraceIntentRef.current = intent;\n    }, [])\n  }, /*#__PURE__*/$epM9y$createElement(ScrollLockWrapper, scrollLockWrapperProps, /*#__PURE__*/$epM9y$createElement($epM9y$FocusScope, {\n    asChild: true,\n    trapped: trapFocus,\n    onMountAutoFocus: $epM9y$composeEventHandlers(onOpenAutoFocus, event => {\n      var _contentRef$current2; // when opening, explicitly focus the content area only and leave\n      // `onEntryFocus` in  control of focusing first item\n\n\n      event.preventDefault();\n      (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 || _contentRef$current2.focus();\n    }),\n    onUnmountAutoFocus: onCloseAutoFocus\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$DismissableLayer, {\n    asChild: true,\n    disableOutsidePointerEvents: disableOutsidePointerEvents,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onPointerDownOutside: onPointerDownOutside,\n    onFocusOutside: onFocusOutside,\n    onInteractOutside: onInteractOutside,\n    onDismiss: onDismiss\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Root1, $epM9y$babelruntimehelpersesmextends({\n    asChild: true\n  }, rovingFocusGroupScope, {\n    dir: rootContext.dir,\n    orientation: \"vertical\",\n    loop: loop,\n    currentTabStopId: currentItemId,\n    onCurrentTabStopIdChange: setCurrentItemId,\n    onEntryFocus: event => {\n      // only focus first item when using keyboard\n      if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n    }\n  }), /*#__PURE__*/$epM9y$createElement($epM9y$Content, $epM9y$babelruntimehelpersesmextends({\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    \"data-state\": $6cc32821e9371a1c$var$getOpenState(context.open),\n    dir: rootContext.dir\n  }, popperScope, contentProps, {\n    ref: composedRefs,\n    style: {\n      outline: 'none',\n      ...contentProps.style\n    },\n    onKeyDown: $epM9y$composeEventHandlers(contentProps.onKeyDown, event => {\n      // submenu key events bubble through portals. We only care about keys in this menu.\n      const target = event.target;\n      const isKeyDownInside = target.closest('[role=\"menu\"]') === event.currentTarget;\n      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n      const isCharacterKey = event.key.length === 1;\n\n      if (isKeyDownInside) {\n        // menus should not be navigated using tab key so we prevent it\n        if (event.key === 'Tab') event.preventDefault();\n        if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n      } // focus first/last item based on key pressed\n\n\n      const content = contentRef.current;\n      if (event.target !== content) return;\n      if (!$6cc32821e9371a1c$var$FIRST_LAST_KEYS.includes(event.key)) return;\n      event.preventDefault();\n      const items = getItems().filter(item => !item.disabled);\n      const candidateNodes = items.map(item => item.ref.current);\n      if ($6cc32821e9371a1c$var$LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n      $6cc32821e9371a1c$var$focusFirst(candidateNodes);\n    }),\n    onBlur: $epM9y$composeEventHandlers(props.onBlur, event => {\n      // clear search buffer when leaving the menu\n      if (!event.currentTarget.contains(event.target)) {\n        window.clearTimeout(timerRef.current);\n        searchRef.current = '';\n      }\n    }),\n    onPointerMove: $epM9y$composeEventHandlers(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse(event => {\n      const target = event.target;\n      const pointerXHasChanged = lastPointerXRef.current !== event.clientX; // We don't use `event.movementX` for this check because Safari will\n      // always return `0` on a pointer event.\n\n      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n        pointerDirRef.current = newDir;\n        lastPointerXRef.current = event.clientX;\n      }\n    }))\n  })))))));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$479f0f2f71193efe, {\n  displayName: $6cc32821e9371a1c$var$CONTENT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$GROUP_NAME = 'MenuGroup';\nconst $6cc32821e9371a1c$export$22a631d1f72787bb = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    ...groupProps\n  } = props;\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Primitive.div, $epM9y$babelruntimehelpersesmextends({\n    role: \"group\"\n  }, groupProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$22a631d1f72787bb, {\n  displayName: $6cc32821e9371a1c$var$GROUP_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$LABEL_NAME = 'MenuLabel';\nconst $6cc32821e9371a1c$export$dd37bec0e8a99143 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    ...labelProps\n  } = props;\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Primitive.div, $epM9y$babelruntimehelpersesmextends({}, labelProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$dd37bec0e8a99143, {\n  displayName: $6cc32821e9371a1c$var$LABEL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$ITEM_NAME = 'MenuItem';\nconst $6cc32821e9371a1c$var$ITEM_SELECT = 'menu.itemSelect';\nconst $6cc32821e9371a1c$export$2ce376c2cc3355c8 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    disabled = false,\n    onSelect: onSelect,\n    ...itemProps\n  } = props;\n  const ref = $epM9y$useRef(null);\n  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);\n  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);\n  const composedRefs = $epM9y$useComposedRefs(forwardedRef, ref);\n  const isPointerDownRef = $epM9y$useRef(false);\n\n  const handleSelect = () => {\n    const menuItem = ref.current;\n\n    if (!disabled && menuItem) {\n      const itemSelectEvent = new CustomEvent($6cc32821e9371a1c$var$ITEM_SELECT, {\n        bubbles: true,\n        cancelable: true\n      });\n      menuItem.addEventListener($6cc32821e9371a1c$var$ITEM_SELECT, event => onSelect === null || onSelect === void 0 ? void 0 : onSelect(event), {\n        once: true\n      });\n      $epM9y$dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n      if (itemSelectEvent.defaultPrevented) isPointerDownRef.current = false;else rootContext.onClose();\n    }\n  };\n\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuItemImpl, $epM9y$babelruntimehelpersesmextends({}, itemProps, {\n    ref: composedRefs,\n    disabled: disabled,\n    onClick: $epM9y$composeEventHandlers(props.onClick, handleSelect),\n    onPointerDown: event => {\n      var _props$onPointerDown;\n\n      (_props$onPointerDown = props.onPointerDown) === null || _props$onPointerDown === void 0 || _props$onPointerDown.call(props, event);\n      isPointerDownRef.current = true;\n    },\n    onPointerUp: $epM9y$composeEventHandlers(props.onPointerUp, event => {\n      var _event$currentTarget; // Pointer down can move to a different menu item which should activate it on pointer up.\n      // We dispatch a click for selection to allow composition with click based triggers and to\n      // prevent Firefox from getting stuck in text selection mode when the menu closes.\n\n\n      if (!isPointerDownRef.current) (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || _event$currentTarget.click();\n    }),\n    onKeyDown: $epM9y$composeEventHandlers(props.onKeyDown, event => {\n      const isTypingAhead = contentContext.searchRef.current !== '';\n      if (disabled || isTypingAhead && event.key === ' ') return;\n\n      if ($6cc32821e9371a1c$var$SELECTION_KEYS.includes(event.key)) {\n        event.currentTarget.click();\n        /**\n        * We prevent default browser behaviour for selection keys as they should trigger\n        * a selection only:\n        * - prevents space from scrolling the page.\n        * - if keydown causes focus to move, prevents keydown from firing on the new target.\n        */\n\n        event.preventDefault();\n      }\n    })\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$2ce376c2cc3355c8, {\n  displayName: $6cc32821e9371a1c$var$ITEM_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */\n\nconst $6cc32821e9371a1c$var$MenuItemImpl = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    disabled = false,\n    textValue: textValue,\n    ...itemProps\n  } = props;\n  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, __scopeMenu);\n  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);\n  const ref = $epM9y$useRef(null);\n  const composedRefs = $epM9y$useComposedRefs(forwardedRef, ref);\n  const [isFocused, setIsFocused] = $epM9y$useState(false); // get the item's `.textContent` as default strategy for typeahead `textValue`\n\n  const [textContent, setTextContent] = $epM9y$useState('');\n  $epM9y$useEffect(() => {\n    const menuItem = ref.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : '').trim());\n    }\n  }, [itemProps.children]);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$Collection.ItemSlot, {\n    scope: __scopeMenu,\n    disabled: disabled,\n    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Item, $epM9y$babelruntimehelpersesmextends({\n    asChild: true\n  }, rovingFocusGroupScope, {\n    focusable: !disabled\n  }), /*#__PURE__*/$epM9y$createElement($epM9y$Primitive.div, $epM9y$babelruntimehelpersesmextends({\n    role: \"menuitem\",\n    \"data-highlighted\": isFocused ? '' : undefined,\n    \"aria-disabled\": disabled || undefined,\n    \"data-disabled\": disabled ? '' : undefined\n  }, itemProps, {\n    ref: composedRefs,\n    onPointerMove: $epM9y$composeEventHandlers(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse(event => {\n      if (disabled) contentContext.onItemLeave(event);else {\n        contentContext.onItemEnter(event);\n\n        if (!event.defaultPrevented) {\n          const item = event.currentTarget;\n          item.focus();\n        }\n      }\n    })),\n    onPointerLeave: $epM9y$composeEventHandlers(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(event => contentContext.onItemLeave(event))),\n    onFocus: $epM9y$composeEventHandlers(props.onFocus, () => setIsFocused(true)),\n    onBlur: $epM9y$composeEventHandlers(props.onBlur, () => setIsFocused(false))\n  }))));\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\nconst $6cc32821e9371a1c$export$f6f243521332502d = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    checked = false,\n    onCheckedChange: onCheckedChange,\n    ...checkboxItemProps\n  } = props;\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$ItemIndicatorProvider, {\n    scope: props.__scopeMenu,\n    checked: checked\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$export$2ce376c2cc3355c8, $epM9y$babelruntimehelpersesmextends({\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": checked\n  }, checkboxItemProps, {\n    ref: forwardedRef,\n    \"data-state\": $6cc32821e9371a1c$var$getCheckedState(checked),\n    onSelect: $epM9y$composeEventHandlers(checkboxItemProps.onSelect, () => onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange(!checked), {\n      checkForDefaultPrevented: false\n    })\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$f6f243521332502d, {\n  displayName: $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$RADIO_GROUP_NAME = 'MenuRadioGroup';\nconst [$6cc32821e9371a1c$var$RadioGroupProvider, $6cc32821e9371a1c$var$useRadioGroupContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$RADIO_GROUP_NAME, {\n  value: undefined,\n  onValueChange: () => {}\n});\nconst $6cc32821e9371a1c$export$ea2200c9eee416b3 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    value: value,\n    onValueChange: onValueChange,\n    ...groupProps\n  } = props;\n  const handleValueChange = $epM9y$useCallbackRef(onValueChange);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$RadioGroupProvider, {\n    scope: props.__scopeMenu,\n    value: value,\n    onValueChange: handleValueChange\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$export$22a631d1f72787bb, $epM9y$babelruntimehelpersesmextends({}, groupProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$ea2200c9eee416b3, {\n  displayName: $6cc32821e9371a1c$var$RADIO_GROUP_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$RADIO_ITEM_NAME = 'MenuRadioItem';\nconst $6cc32821e9371a1c$export$69bd225e9817f6d0 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    value: value,\n    ...radioItemProps\n  } = props;\n  const context = $6cc32821e9371a1c$var$useRadioGroupContext($6cc32821e9371a1c$var$RADIO_ITEM_NAME, props.__scopeMenu);\n  const checked = value === context.value;\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$ItemIndicatorProvider, {\n    scope: props.__scopeMenu,\n    checked: checked\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$export$2ce376c2cc3355c8, $epM9y$babelruntimehelpersesmextends({\n    role: \"menuitemradio\",\n    \"aria-checked\": checked\n  }, radioItemProps, {\n    ref: forwardedRef,\n    \"data-state\": $6cc32821e9371a1c$var$getCheckedState(checked),\n    onSelect: $epM9y$composeEventHandlers(radioItemProps.onSelect, () => {\n      var _context$onValueChang;\n\n      return (_context$onValueChang = context.onValueChange) === null || _context$onValueChang === void 0 ? void 0 : _context$onValueChang.call(context, value);\n    }, {\n      checkForDefaultPrevented: false\n    })\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$69bd225e9817f6d0, {\n  displayName: $6cc32821e9371a1c$var$RADIO_ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME = 'MenuItemIndicator';\nconst [$6cc32821e9371a1c$var$ItemIndicatorProvider, $6cc32821e9371a1c$var$useItemIndicatorContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, {\n  checked: false\n});\nconst $6cc32821e9371a1c$export$a2593e23056970a3 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    forceMount: forceMount,\n    ...itemIndicatorProps\n  } = props;\n  const indicatorContext = $6cc32821e9371a1c$var$useItemIndicatorContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, __scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Presence, {\n    present: forceMount || indicatorContext.checked\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Primitive.span, $epM9y$babelruntimehelpersesmextends({}, itemIndicatorProps, {\n    ref: forwardedRef,\n    \"data-state\": $6cc32821e9371a1c$var$getCheckedState(indicatorContext.checked)\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$a2593e23056970a3, {\n  displayName: $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$SEPARATOR_NAME = 'MenuSeparator';\nconst $6cc32821e9371a1c$export$1cec7dcdd713e220 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    ...separatorProps\n  } = props;\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Primitive.div, $epM9y$babelruntimehelpersesmextends({\n    role: \"separator\",\n    \"aria-orientation\": \"horizontal\"\n  }, separatorProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$1cec7dcdd713e220, {\n  displayName: $6cc32821e9371a1c$var$SEPARATOR_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$ARROW_NAME = 'MenuArrow';\nconst $6cc32821e9371a1c$export$bcdda4773debf5fa = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeMenu: __scopeMenu,\n    ...arrowProps\n  } = props;\n  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Arrow, $epM9y$babelruntimehelpersesmextends({}, popperScope, arrowProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$bcdda4773debf5fa, {\n  displayName: $6cc32821e9371a1c$var$ARROW_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$SUB_NAME = 'MenuSub';\nconst [$6cc32821e9371a1c$var$MenuSubProvider, $6cc32821e9371a1c$var$useMenuSubContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$SUB_NAME);\n\nconst $6cc32821e9371a1c$export$71bdb9d1e2909932 = props => {\n  const {\n    __scopeMenu: __scopeMenu,\n    children: children,\n    open = false,\n    onOpenChange: onOpenChange\n  } = props;\n  const parentMenuContext = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_NAME, __scopeMenu);\n  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = $epM9y$useState(null);\n  const [content, setContent] = $epM9y$useState(null);\n  const handleOpenChange = $epM9y$useCallbackRef(onOpenChange); // Prevent the parent menu from reopening with open submenus.\n\n  $epM9y$useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n  return /*#__PURE__*/$epM9y$createElement($epM9y$Root, popperScope, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuProvider, {\n    scope: __scopeMenu,\n    open: open,\n    onOpenChange: handleOpenChange,\n    content: content,\n    onContentChange: setContent\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuSubProvider, {\n    scope: __scopeMenu,\n    contentId: $epM9y$useId(),\n    triggerId: $epM9y$useId(),\n    trigger: trigger,\n    onTriggerChange: setTrigger\n  }, children)));\n};\n/*#__PURE__*/\n\n\nObject.assign($6cc32821e9371a1c$export$71bdb9d1e2909932, {\n  displayName: $6cc32821e9371a1c$var$SUB_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$SUB_TRIGGER_NAME = 'MenuSubTrigger';\nconst $6cc32821e9371a1c$export$5fbbb3ba7297405f = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);\n  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);\n  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);\n  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);\n  const openTimerRef = $epM9y$useRef(null);\n  const {\n    pointerGraceTimerRef: pointerGraceTimerRef,\n    onPointerGraceIntentChange: onPointerGraceIntentChange\n  } = contentContext;\n  const scope = {\n    __scopeMenu: props.__scopeMenu\n  };\n  const clearOpenTimer = $epM9y$useCallback(() => {\n    if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = null;\n  }, []);\n  $epM9y$useEffect(() => clearOpenTimer, [clearOpenTimer]);\n  $epM9y$useEffect(() => {\n    const pointerGraceTimer = pointerGraceTimerRef.current;\n    return () => {\n      window.clearTimeout(pointerGraceTimer);\n      onPointerGraceIntentChange(null);\n    };\n  }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$export$9fa5ebd18bee4d43, $epM9y$babelruntimehelpersesmextends({\n    asChild: true\n  }, scope), /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuItemImpl, $epM9y$babelruntimehelpersesmextends({\n    id: subContext.triggerId,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": subContext.contentId,\n    \"data-state\": $6cc32821e9371a1c$var$getOpenState(context.open)\n  }, props, {\n    ref: $epM9y$composeRefs(forwardedRef, subContext.onTriggerChange) // This is redundant for mouse users but we cannot determine pointer type from\n    ,\n    onClick: event => {\n      var _props$onClick;\n\n      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event);\n      if (props.disabled || event.defaultPrevented) return;\n      /**\n      * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n      * and we rely heavily on `onFocusOutside` for submenus to close when switching\n      * between separate submenus.\n      */\n\n      event.currentTarget.focus();\n      if (!context.open) context.onOpenChange(true);\n    },\n    onPointerMove: $epM9y$composeEventHandlers(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse(event => {\n      contentContext.onItemEnter(event);\n      if (event.defaultPrevented) return;\n\n      if (!props.disabled && !context.open && !openTimerRef.current) {\n        contentContext.onPointerGraceIntentChange(null);\n        openTimerRef.current = window.setTimeout(() => {\n          context.onOpenChange(true);\n          clearOpenTimer();\n        }, 100);\n      }\n    })),\n    onPointerLeave: $epM9y$composeEventHandlers(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(event => {\n      var _context$content;\n\n      clearOpenTimer();\n      const contentRect = (_context$content = context.content) === null || _context$content === void 0 ? void 0 : _context$content.getBoundingClientRect();\n\n      if (contentRect) {\n        var _context$content2; // TODO: make sure to update this when we change positioning logic\n\n\n        const side = (_context$content2 = context.content) === null || _context$content2 === void 0 ? void 0 : _context$content2.dataset.side;\n        const rightSide = side === 'right';\n        const bleed = rightSide ? -5 : 5;\n        const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n        const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n        contentContext.onPointerGraceIntentChange({\n          area: [// consistently within polygon bounds\n          {\n            x: event.clientX + bleed,\n            y: event.clientY\n          }, {\n            x: contentNearEdge,\n            y: contentRect.top\n          }, {\n            x: contentFarEdge,\n            y: contentRect.top\n          }, {\n            x: contentFarEdge,\n            y: contentRect.bottom\n          }, {\n            x: contentNearEdge,\n            y: contentRect.bottom\n          }],\n          side: side\n        });\n        window.clearTimeout(pointerGraceTimerRef.current);\n        pointerGraceTimerRef.current = window.setTimeout(() => contentContext.onPointerGraceIntentChange(null), 300);\n      } else {\n        contentContext.onTriggerLeave(event);\n        if (event.defaultPrevented) return; // There's 100ms where the user may leave an item before the submenu was opened.\n\n        contentContext.onPointerGraceIntentChange(null);\n      }\n    })),\n    onKeyDown: $epM9y$composeEventHandlers(props.onKeyDown, event => {\n      const isTypingAhead = contentContext.searchRef.current !== '';\n      if (props.disabled || isTypingAhead && event.key === ' ') return;\n\n      if ($6cc32821e9371a1c$var$SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n        var _context$content3;\n\n        context.onOpenChange(true); // The trigger may hold focus if opened via pointer interaction\n        // so we ensure content is given focus again when switching to keyboard.\n\n        (_context$content3 = context.content) === null || _context$content3 === void 0 || _context$content3.focus(); // prevent window from scrolling\n\n        event.preventDefault();\n      }\n    })\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$5fbbb3ba7297405f, {\n  displayName: $6cc32821e9371a1c$var$SUB_TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $6cc32821e9371a1c$var$SUB_CONTENT_NAME = 'MenuSubContent';\nconst $6cc32821e9371a1c$export$e7142ab31822bde6 = /*#__PURE__*/$epM9y$forwardRef((props, forwardedRef) => {\n  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const {\n    forceMount = portalContext.forceMount,\n    ...subContentProps\n  } = props;\n  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_CONTENT_NAME, props.__scopeMenu);\n  const ref = $epM9y$useRef(null);\n  const composedRefs = $epM9y$useComposedRefs(forwardedRef, ref);\n  return /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$Collection.Provider, {\n    scope: props.__scopeMenu\n  }, /*#__PURE__*/$epM9y$createElement($epM9y$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$Collection.Slot, {\n    scope: props.__scopeMenu\n  }, /*#__PURE__*/$epM9y$createElement($6cc32821e9371a1c$var$MenuContentImpl, $epM9y$babelruntimehelpersesmextends({\n    id: subContext.contentId,\n    \"aria-labelledby\": subContext.triggerId\n  }, subContentProps, {\n    ref: composedRefs,\n    align: \"start\",\n    side: rootContext.dir === 'rtl' ? 'left' : 'right',\n    disableOutsidePointerEvents: false,\n    disableOutsideScroll: false,\n    trapFocus: false,\n    onOpenAutoFocus: event => {\n      var _ref$current; // when opening a submenu, focus content for keyboard users only\n\n\n      if (rootContext.isUsingKeyboardRef.current) (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();\n      event.preventDefault();\n    } // The menu might close because of focusing another menu item in the parent menu. We\n    ,\n    onCloseAutoFocus: event => event.preventDefault(),\n    onFocusOutside: $epM9y$composeEventHandlers(props.onFocusOutside, event => {\n      // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n      // on pointer interaction.\n      if (event.target !== subContext.trigger) context.onOpenChange(false);\n    }),\n    onEscapeKeyDown: $epM9y$composeEventHandlers(props.onEscapeKeyDown, rootContext.onClose),\n    onKeyDown: $epM9y$composeEventHandlers(props.onKeyDown, event => {\n      // Submenu key events bubble through portals. We only care about keys in this menu.\n      const isKeyDownInside = event.currentTarget.contains(event.target);\n      const isCloseKey = $6cc32821e9371a1c$var$SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n\n      if (isKeyDownInside && isCloseKey) {\n        var _subContext$trigger;\n\n        context.onOpenChange(false); // We focus manually because we prevented it in `onCloseAutoFocus`\n\n        (_subContext$trigger = subContext.trigger) === null || _subContext$trigger === void 0 || _subContext$trigger.focus(); // prevent window from scrolling\n\n        event.preventDefault();\n      }\n    })\n  })))));\n});\n/*#__PURE__*/\n\nObject.assign($6cc32821e9371a1c$export$e7142ab31822bde6, {\n  displayName: $6cc32821e9371a1c$var$SUB_CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction $6cc32821e9371a1c$var$getOpenState(open) {\n  return open ? 'open' : 'closed';\n}\n\nfunction $6cc32821e9371a1c$var$getCheckedState(checked) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nfunction $6cc32821e9371a1c$var$focusFirst(candidates) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\n\n\nfunction $6cc32821e9371a1c$var$wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\n\n\nfunction $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch) {\n  const isRepeated = search.length > 1 && Array.from(search).every(char => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = $6cc32821e9371a1c$var$wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter(v => v !== currentMatch);\n  const nextMatch = wrappedValues.find(value => value.toLowerCase().startsWith(normalizedSearch.toLowerCase()));\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n} // Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\n\n\nfunction $6cc32821e9371a1c$var$isPointInPolygon(point, polygon) {\n  const {\n    x: x,\n    y: y\n  } = point;\n  let inside = false;\n\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y; // prettier-ignore\n\n    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction $6cc32821e9371a1c$var$isPointerInGraceArea(event, area) {\n  if (!area) return false;\n  const cursorPos = {\n    x: event.clientX,\n    y: event.clientY\n  };\n  return $6cc32821e9371a1c$var$isPointInPolygon(cursorPos, area);\n}\n\nfunction $6cc32821e9371a1c$var$whenMouse(handler) {\n  return event => event.pointerType === 'mouse' ? handler(event) : undefined;\n}\n\nconst $6cc32821e9371a1c$export$be92b6f5f03c0fe9 = $6cc32821e9371a1c$export$d9b273488cd8ce6f;\nconst $6cc32821e9371a1c$export$b688253958b8dfe7 = $6cc32821e9371a1c$export$9fa5ebd18bee4d43;\nconst $6cc32821e9371a1c$export$602eac185826482c = $6cc32821e9371a1c$export$793392f970497feb;\nconst $6cc32821e9371a1c$export$7c6e2c02157bb7d2 = $6cc32821e9371a1c$export$479f0f2f71193efe;\nconst $6cc32821e9371a1c$export$eb2fcfdbd7ba97d4 = $6cc32821e9371a1c$export$22a631d1f72787bb;\nconst $6cc32821e9371a1c$export$b04be29aa201d4f5 = $6cc32821e9371a1c$export$dd37bec0e8a99143;\nconst $6cc32821e9371a1c$export$6d08773d2e66f8f2 = $6cc32821e9371a1c$export$2ce376c2cc3355c8;\nconst $6cc32821e9371a1c$export$16ce288f89fa631c = $6cc32821e9371a1c$export$f6f243521332502d;\nconst $6cc32821e9371a1c$export$a98f0dcb43a68a25 = $6cc32821e9371a1c$export$ea2200c9eee416b3;\nconst $6cc32821e9371a1c$export$371ab307eab489c0 = $6cc32821e9371a1c$export$69bd225e9817f6d0;\nconst $6cc32821e9371a1c$export$c3468e2714d175fa = $6cc32821e9371a1c$export$a2593e23056970a3;\nconst $6cc32821e9371a1c$export$1ff3c3f08ae963c0 = $6cc32821e9371a1c$export$1cec7dcdd713e220;\nconst $6cc32821e9371a1c$export$21b07c8f274aebd5 = $6cc32821e9371a1c$export$bcdda4773debf5fa;\nconst $6cc32821e9371a1c$export$d7a01e11500dfb6f = $6cc32821e9371a1c$export$71bdb9d1e2909932;\nconst $6cc32821e9371a1c$export$2ea8a7a591ac5eac = $6cc32821e9371a1c$export$5fbbb3ba7297405f;\nconst $6cc32821e9371a1c$export$6d4de93b380beddf = $6cc32821e9371a1c$export$e7142ab31822bde6;\nexport { $6cc32821e9371a1c$export$4027731b685e72eb as createMenuScope, $6cc32821e9371a1c$export$d9b273488cd8ce6f as Menu, $6cc32821e9371a1c$export$9fa5ebd18bee4d43 as MenuAnchor, $6cc32821e9371a1c$export$793392f970497feb as MenuPortal, $6cc32821e9371a1c$export$479f0f2f71193efe as MenuContent, $6cc32821e9371a1c$export$22a631d1f72787bb as MenuGroup, $6cc32821e9371a1c$export$dd37bec0e8a99143 as MenuLabel, $6cc32821e9371a1c$export$2ce376c2cc3355c8 as MenuItem, $6cc32821e9371a1c$export$f6f243521332502d as MenuCheckboxItem, $6cc32821e9371a1c$export$ea2200c9eee416b3 as MenuRadioGroup, $6cc32821e9371a1c$export$69bd225e9817f6d0 as MenuRadioItem, $6cc32821e9371a1c$export$a2593e23056970a3 as MenuItemIndicator, $6cc32821e9371a1c$export$1cec7dcdd713e220 as MenuSeparator, $6cc32821e9371a1c$export$bcdda4773debf5fa as MenuArrow, $6cc32821e9371a1c$export$71bdb9d1e2909932 as MenuSub, $6cc32821e9371a1c$export$5fbbb3ba7297405f as MenuSubTrigger, $6cc32821e9371a1c$export$e7142ab31822bde6 as MenuSubContent, $6cc32821e9371a1c$export$be92b6f5f03c0fe9 as Root, $6cc32821e9371a1c$export$b688253958b8dfe7 as Anchor, $6cc32821e9371a1c$export$602eac185826482c as Portal, $6cc32821e9371a1c$export$7c6e2c02157bb7d2 as Content, $6cc32821e9371a1c$export$eb2fcfdbd7ba97d4 as Group, $6cc32821e9371a1c$export$b04be29aa201d4f5 as Label, $6cc32821e9371a1c$export$6d08773d2e66f8f2 as Item, $6cc32821e9371a1c$export$16ce288f89fa631c as CheckboxItem, $6cc32821e9371a1c$export$a98f0dcb43a68a25 as RadioGroup, $6cc32821e9371a1c$export$371ab307eab489c0 as RadioItem, $6cc32821e9371a1c$export$c3468e2714d175fa as ItemIndicator, $6cc32821e9371a1c$export$1ff3c3f08ae963c0 as Separator, $6cc32821e9371a1c$export$21b07c8f274aebd5 as Arrow, $6cc32821e9371a1c$export$d7a01e11500dfb6f as Sub, $6cc32821e9371a1c$export$2ea8a7a591ac5eac as SubTrigger, $6cc32821e9371a1c$export$6d4de93b380beddf as SubContent };","map":{"version":3,"mappings":"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","names":["SELECTION_KEYS","FIRST_KEYS","LAST_KEYS","FIRST_LAST_KEYS","SUB_OPEN_KEYS","ltr","rtl","SUB_CLOSE_KEYS","MENU_NAME","Collection","useCollection","createCollectionScope","createCollection","createMenuContext","createMenuScope","createContextScope","createPopperScope","createRovingFocusGroupScope","usePopperScope","useRovingFocusGroupScope","MenuProvider","useMenuContext","MenuRootProvider","useMenuRootContext","Menu","props","__scopeMenu","open","children","dir","onOpenChange","modal","popperScope","content","setContent","React","isUsingKeyboardRef","handleOpenChange","useCallbackRef","direction","useDirection","handleKeyDown","current","document","addEventListener","handlePointer","capture","once","removeEventListener","$epM9y$createElement","$epM9y$Root","$6cc32821e9371a1c$var$MenuProvider","scope","onContentChange","$6cc32821e9371a1c$var$MenuRootProvider","onClose","Object","displayName","ANCHOR_NAME","MenuAnchor","forwardedRef","anchorProps","$epM9y$Anchor","ref","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","MenuPortal","container","context","$6cc32821e9371a1c$var$PortalProvider","$epM9y$Presence","present","$epM9y$Portal","asChild","CONTENT_NAME","MenuContentProvider","useMenuContentContext","MenuContent","portalContext","contentProps","rootContext","$6cc32821e9371a1c$var$Collection","Provider","Slot","$6cc32821e9371a1c$var$MenuRootContentModal","$6cc32821e9371a1c$var$MenuRootContentNonModal","MenuRootContentModal","composedRefs","useComposedRefs","hideOthers","$6cc32821e9371a1c$var$MenuContentImpl","trapFocus","disableOutsidePointerEvents","disableOutsideScroll","onFocusOutside","composeEventHandlers","event","preventDefault","checkForDefaultPrevented","onDismiss","MenuRootContentNonModal","MenuContentImpl","loop","onOpenAutoFocus","onCloseAutoFocus","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","rovingFocusGroupScope","getItems","currentItemId","setCurrentItemId","contentRef","timerRef","searchRef","pointerGraceTimerRef","pointerGraceIntentRef","pointerDirRef","lastPointerXRef","ScrollLockWrapper","RemoveScroll","scrollLockWrapperProps","as","allowPinchZoom","handleTypeaheadSearch","key","search","items","filter","item","disabled","currentItem","activeElement","currentMatch","find","_items$find","textValue","values","map","nextMatch","getNextMatch","newItem","_items$find2","updateSearch","value","window","clearTimeout","setTimeout","focus","useFocusGuards","isPointerMovingToSubmenu","isMovingTowards","_pointerGraceIntentRe","side","isPointerInGraceArea","_pointerGraceIntentRe2","area","$6cc32821e9371a1c$var$MenuContentProvider","onItemEnter","onItemLeave","onTriggerLeave","onPointerGraceIntentChange","intent","$epM9y$FocusScope","trapped","onMountAutoFocus","onUnmountAutoFocus","$epM9y$DismissableLayer","$epM9y$Root1","$epM9y$babelruntimehelpersesmextends","orientation","currentTabStopId","onCurrentTabStopIdChange","onEntryFocus","$epM9y$Content","role","getOpenState","style","outline","onKeyDown","target","isKeyDownInside","closest","currentTarget","isModifierKey","ctrlKey","altKey","metaKey","isCharacterKey","length","includes","candidateNodes","reverse","focusFirst","onBlur","contains","onPointerMove","whenMouse","pointerXHasChanged","clientX","newDir","GROUP_NAME","MenuGroup","groupProps","$epM9y$Primitive","div","LABEL_NAME","MenuLabel","labelProps","ITEM_NAME","ITEM_SELECT","MenuItem","onSelect","itemProps","contentContext","isPointerDownRef","handleSelect","menuItem","itemSelectEvent","CustomEvent","bubbles","cancelable","dispatchDiscreteCustomEvent","defaultPrevented","$6cc32821e9371a1c$var$MenuItemImpl","onClick","onPointerDown","onPointerUp","click","isTypingAhead","MenuItemImpl","isFocused","setIsFocused","textContent","setTextContent","trim","ItemSlot","$epM9y$Item","focusable","onPointerLeave","onFocus","CHECKBOX_ITEM_NAME","MenuCheckboxItem","checked","onCheckedChange","checkboxItemProps","$6cc32821e9371a1c$var$ItemIndicatorProvider","$6cc32821e9371a1c$export$2ce376c2cc3355c8","getCheckedState","RADIO_GROUP_NAME","RadioGroupProvider","useRadioGroupContext","onValueChange","MenuRadioGroup","handleValueChange","$6cc32821e9371a1c$var$RadioGroupProvider","$6cc32821e9371a1c$export$22a631d1f72787bb","RADIO_ITEM_NAME","MenuRadioItem","radioItemProps","_context$onValueChang","ITEM_INDICATOR_NAME","ItemIndicatorProvider","useItemIndicatorContext","MenuItemIndicator","itemIndicatorProps","indicatorContext","span","SEPARATOR_NAME","MenuSeparator","separatorProps","ARROW_NAME","MenuArrow","arrowProps","$epM9y$Arrow","SUB_NAME","MenuSubProvider","useMenuSubContext","MenuSub","parentMenuContext","trigger","setTrigger","$6cc32821e9371a1c$var$MenuSubProvider","contentId","useId","triggerId","onTriggerChange","SUB_TRIGGER_NAME","MenuSubTrigger","subContext","openTimerRef","clearOpenTimer","pointerGraceTimer","$6cc32821e9371a1c$export$9fa5ebd18bee4d43","id","composeRefs","contentRect","_context$content","getBoundingClientRect","_context$content2","dataset","rightSide","bleed","contentNearEdge","contentFarEdge","x","y","clientY","top","bottom","SUB_CONTENT_NAME","MenuSubContent","subContentProps","align","isCloseKey","candidates","PREVIOUSLY_FOCUSED_ELEMENT","candidate","wrapArray","array","startIndex","_","index","isRepeated","Array","from","every","char","normalizedSearch","currentMatchIndex","indexOf","wrappedValues","Math","max","excludeCurrentMatch","v","toLowerCase","startsWith","isPointInPolygon","point","polygon","inside","i","j","xi","yi","xj","yj","intersect","cursorPos","handler","pointerType","Root","Anchor","Portal","Content","Group","Label","Item","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow","Sub","SubTrigger","SubContent"],"sources":["/home/dalienst/node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus();\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={(event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                }}\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside = target.closest('[role=\"menu\"]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(!checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(ITEM_INDICATOR_NAME, {\n  checked: false,\n});\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence present={forceMount || indicatorContext.checked}>\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, rootContext.onClose)}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction getCheckedState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n"]},"metadata":{},"sourceType":"module"}