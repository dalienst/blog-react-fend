{"ast":null,"code":"import { __rest as s } from \"tslib\";\nimport { jsx as o } from \"react/jsx-runtime\";\nimport e from \"classnames\";\nimport * as a from \"react\";\nimport { ComponentClassNames as r } from \"../shared/constants.js\";\nimport { ShowPasswordButton as t } from \"./ShowPasswordButton.js\";\nimport { TextField as d } from \"../TextField/TextField.js\";\nconst l = a.forwardRef((l, w) => {\n  var {\n    autoComplete: i = \"current-password\",\n    label: n,\n    className: p,\n    hideShowPassword: m = !1,\n    passwordIsHiddenLabel: u,\n    passwordIsShownLabel: b,\n    showPasswordButtonLabel: f,\n    showPasswordButtonRef: h,\n    size: c\n  } = l,\n      P = s(l, [\"autoComplete\", \"label\", \"className\", \"hideShowPassword\", \"passwordIsHiddenLabel\", \"passwordIsShownLabel\", \"showPasswordButtonLabel\", \"showPasswordButtonRef\", \"size\"]);\n  const [L, S] = a.useState(\"password\"),\n        B = a.useCallback(() => {\n    S(\"password\" === L ? \"text\" : \"password\");\n  }, [S, L]);\n  return o(d, Object.assign({\n    autoComplete: i,\n    outerEndComponent: m ? null : o(t, {\n      fieldType: L,\n      onClick: B,\n      passwordIsHiddenLabel: u,\n      passwordIsShownLabel: b,\n      ref: h,\n      size: c,\n      showPasswordButtonLabel: f\n    }),\n    size: c,\n    type: L,\n    label: n,\n    className: e(r.PasswordField, p),\n    ref: w\n  }, P));\n});\nl.displayName = \"PasswordField\";\nexport { l as PasswordField };","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui-react/dist/esm/primitives/PasswordField/PasswordField.js"],"names":["__rest","s","jsx","o","e","a","ComponentClassNames","r","ShowPasswordButton","t","TextField","d","l","forwardRef","w","autoComplete","i","label","n","className","p","hideShowPassword","m","passwordIsHiddenLabel","u","passwordIsShownLabel","b","showPasswordButtonLabel","f","showPasswordButtonRef","h","size","c","P","L","S","useState","B","useCallback","Object","assign","outerEndComponent","fieldType","onClick","ref","type","PasswordField","displayName"],"mappings":"AAAA,SAAOA,MAAM,IAAIC,CAAjB,QAAuB,OAAvB;AAA+B,SAAOC,GAAG,IAAIC,CAAd,QAAoB,mBAApB;AAAwC,OAAOC,CAAP,MAAa,YAAb;AAA0B,OAAM,KAAIC,CAAV,MAAgB,OAAhB;AAAwB,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,wBAApC;AAA6D,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,yBAAnC;AAA6D,SAAOC,SAAS,IAAIC,CAApB,QAA0B,2BAA1B;AAAsD,MAAMC,CAAC,GAACP,CAAC,CAACQ,UAAF,CAAc,CAACD,CAAD,EAAGE,CAAH,KAAO;AAAC,MAAG;AAACC,IAAAA,YAAY,EAACC,CAAC,GAAC,kBAAhB;AAAmCC,IAAAA,KAAK,EAACC,CAAzC;AAA2CC,IAAAA,SAAS,EAACC,CAArD;AAAuDC,IAAAA,gBAAgB,EAACC,CAAC,GAAC,CAAC,CAA3E;AAA6EC,IAAAA,qBAAqB,EAACC,CAAnG;AAAqGC,IAAAA,oBAAoB,EAACC,CAA1H;AAA4HC,IAAAA,uBAAuB,EAACC,CAApJ;AAAsJC,IAAAA,qBAAqB,EAACC,CAA5K;AAA8KC,IAAAA,IAAI,EAACC;AAAnL,MAAsLpB,CAAzL;AAAA,MAA2LqB,CAAC,GAAChC,CAAC,CAACW,CAAD,EAAG,CAAC,cAAD,EAAgB,OAAhB,EAAwB,WAAxB,EAAoC,kBAApC,EAAuD,uBAAvD,EAA+E,sBAA/E,EAAsG,yBAAtG,EAAgI,uBAAhI,EAAwJ,MAAxJ,CAAH,CAA9L;AAAkW,QAAK,CAACsB,CAAD,EAAGC,CAAH,IAAM9B,CAAC,CAAC+B,QAAF,CAAW,UAAX,CAAX;AAAA,QAAkCC,CAAC,GAAChC,CAAC,CAACiC,WAAF,CAAe,MAAI;AAACH,IAAAA,CAAC,CAAC,eAAaD,CAAb,GAAe,MAAf,GAAsB,UAAvB,CAAD;AAAoC,GAAxD,EAA0D,CAACC,CAAD,EAAGD,CAAH,CAA1D,CAApC;AAAqG,SAAO/B,CAAC,CAACQ,CAAD,EAAG4B,MAAM,CAACC,MAAP,CAAc;AAACzB,IAAAA,YAAY,EAACC,CAAd;AAAgByB,IAAAA,iBAAiB,EAACnB,CAAC,GAAC,IAAD,GAAMnB,CAAC,CAACM,CAAD,EAAG;AAACiC,MAAAA,SAAS,EAACR,CAAX;AAAaS,MAAAA,OAAO,EAACN,CAArB;AAAuBd,MAAAA,qBAAqB,EAACC,CAA7C;AAA+CC,MAAAA,oBAAoB,EAACC,CAApE;AAAsEkB,MAAAA,GAAG,EAACd,CAA1E;AAA4EC,MAAAA,IAAI,EAACC,CAAjF;AAAmFL,MAAAA,uBAAuB,EAACC;AAA3G,KAAH,CAA1C;AAA4JG,IAAAA,IAAI,EAACC,CAAjK;AAAmKa,IAAAA,IAAI,EAACX,CAAxK;AAA0KjB,IAAAA,KAAK,EAACC,CAAhL;AAAkLC,IAAAA,SAAS,EAACf,CAAC,CAACG,CAAC,CAACuC,aAAH,EAAiB1B,CAAjB,CAA7L;AAAiNwB,IAAAA,GAAG,EAAC9B;AAArN,GAAd,EAAsOmB,CAAtO,CAAH,CAAR;AAAqP,CAAltB,CAAR;AAA6tBrB,CAAC,CAACmC,WAAF,GAAc,eAAd;AAA8B,SAAOnC,CAAC,IAAIkC,aAAZ","sourcesContent":["import{__rest as s}from\"tslib\";import{jsx as o}from\"react/jsx-runtime\";import e from\"classnames\";import*as a from\"react\";import{ComponentClassNames as r}from\"../shared/constants.js\";import{ShowPasswordButton as t}from\"./ShowPasswordButton.js\";import{TextField as d}from\"../TextField/TextField.js\";const l=a.forwardRef(((l,w)=>{var{autoComplete:i=\"current-password\",label:n,className:p,hideShowPassword:m=!1,passwordIsHiddenLabel:u,passwordIsShownLabel:b,showPasswordButtonLabel:f,showPasswordButtonRef:h,size:c}=l,P=s(l,[\"autoComplete\",\"label\",\"className\",\"hideShowPassword\",\"passwordIsHiddenLabel\",\"passwordIsShownLabel\",\"showPasswordButtonLabel\",\"showPasswordButtonRef\",\"size\"]);const[L,S]=a.useState(\"password\"),B=a.useCallback((()=>{S(\"password\"===L?\"text\":\"password\")}),[S,L]);return o(d,Object.assign({autoComplete:i,outerEndComponent:m?null:o(t,{fieldType:L,onClick:B,passwordIsHiddenLabel:u,passwordIsShownLabel:b,ref:h,size:c,showPasswordButtonLabel:f}),size:c,type:L,label:n,className:e(r.PasswordField,p),ref:w},P))}));l.displayName=\"PasswordField\";export{l as PasswordField};\n"]},"metadata":{},"sourceType":"module"}