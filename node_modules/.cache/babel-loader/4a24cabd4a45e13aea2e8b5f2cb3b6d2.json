{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutObjectLockConfigurationOutput, PutObjectLockConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectLockConfigurationCommand, serializeAws_restXmlPutObjectLockConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Places an Object Lock configuration on the specified bucket. The rule specified in the\n *          Object Lock configuration will be applied by default to every new object placed in the\n *          specified bucket.</p>\n *          <note>\n *             <p>\n *                <code>DefaultRetention</code> requires either Days or Years. You can't specify both\n *             at the same time.</p>\n *          </note>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Locking\n *                   Objects</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutObjectLockConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutObjectLockConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutObjectLockConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutObjectLockConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutObjectLockConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutObjectLockConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutObjectLockConfigurationOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutObjectLockConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutObjectLockConfigurationCommand(input, context);\n  };\n\n  PutObjectLockConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context);\n  };\n\n  return PutObjectLockConfigurationCommand;\n}($Command);\n\nexport { PutObjectLockConfigurationCommand };","map":{"version":3,"mappings":";AACA,SAASA,gCAAT,EAA2CC,iCAA3C,QAAoF,oBAApF;AACA,SACEC,uDADF,EAEEC,qDAFF,QAGO,0BAHP;AAIA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;AAqBA;AAAA;AAAA;AAAuDC,uDAAvD,CAKE;AACA;;;AAEA,6CAAqBC,KAArB,EAAkE;AAAlE,gBACE;AACAC,yBAAO,IAFT;;AAAqBC;iBAA6C,CAGhE;AACD;AAED;;;;;AAGAC,4EACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;AAE9B,SAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AACA,SAAKH,eAAL,CAAqBC,GAArB,CAAyBb,uBAAuB,CAACU,aAAD,CAAhD;AAEA,QAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;AAEQ,cAAM,GAAKF,aAAa,OAAxB;AACR,QAAMQ,UAAU,GAAG,UAAnB;AACA,QAAMC,WAAW,GAAG,mCAApB;AACA,QAAMC,uBAAuB,GAA4B;AACvDC,YAAM,QADiD;AAEvDH,gBAAU,YAF6C;AAGvDC,iBAAW,aAH4C;AAIvDG,6BAAuB,EAAEzB,iCAAiC,CAAC0B,kBAJJ;AAKvDC,8BAAwB,EAAE5B,gCAAgC,CAAC2B;AALJ,KAAzD;AAOQ,sBAAc,GAAKb,aAAa,eAAhC;AACR,WAAOM,KAAK,CAACS,OAAN,CACL,UAACC,OAAD,EAAuC;AACrC,2BAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDf,OAAO,IAAI,EAAnE;AAAsE,KAFnE,EAGLS,uBAHK,CAAP;AAKD,GA1BD;;AA4BQZ,0DAAR,UAAkBH,KAAlB,EAAiEuB,OAAjE,EAAwF;AACtF,WAAO7B,qDAAqD,CAACM,KAAD,EAAQuB,OAAR,CAA5D;AACD,GAFO;;AAIApB,4DAAR,UACEqB,MADF,EAEED,OAFF,EAEyB;AAEvB,WAAO9B,uDAAuD,CAAC+B,MAAD,EAASD,OAAT,CAA9D;AACD,GALO;;AASV;AAAC,CA1DD,CAAuDzB,QAAvD","names":["PutObjectLockConfigurationOutput","PutObjectLockConfigurationRequest","deserializeAws_restXmlPutObjectLockConfigurationCommand","serializeAws_restXmlPutObjectLockConfigurationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutObjectLockConfigurationCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/home/dalienst/node_modules/@aws-sdk/client-s3/commands/PutObjectLockConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutObjectLockConfigurationOutput, PutObjectLockConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutObjectLockConfigurationCommand,\n  serializeAws_restXmlPutObjectLockConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutObjectLockConfigurationCommandInput = PutObjectLockConfigurationRequest;\nexport type PutObjectLockConfigurationCommandOutput = PutObjectLockConfigurationOutput & __MetadataBearer;\n\n/**\n * <p>Places an Object Lock configuration on the specified bucket. The rule specified in the\n *          Object Lock configuration will be applied by default to every new object placed in the\n *          specified bucket.</p>\n *          <note>\n *             <p>\n *                <code>DefaultRetention</code> requires either Days or Years. You can't specify both\n *             at the same time.</p>\n *          </note>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Locking\n *                   Objects</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutObjectLockConfigurationCommand extends $Command<\n  PutObjectLockConfigurationCommandInput,\n  PutObjectLockConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutObjectLockConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutObjectLockConfigurationCommandInput, PutObjectLockConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutObjectLockConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutObjectLockConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutObjectLockConfigurationOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutObjectLockConfigurationCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutObjectLockConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<PutObjectLockConfigurationCommandOutput> {\n    return deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}