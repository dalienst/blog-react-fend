{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport noop from 'lodash/noop'; // Per https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n\nvar hidden;\nvar visibilityChange;\nvar isBrowser = browserOrNode().isBrowser;\n\nif (isBrowser && document) {\n  if (typeof document.hidden !== 'undefined') {\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if (typeof document['msHidden'] !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n  } else if (typeof document['webkitHidden'] !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n}\n\nvar logger = new Logger('InAppMessagingSessionTracker');\n\nvar SessionTracker =\n/** @class */\nfunction () {\n  function SessionTracker(sessionStateChangeHandler) {\n    var _this = this;\n\n    if (sessionStateChangeHandler === void 0) {\n      sessionStateChangeHandler = noop;\n    }\n\n    this.start = function () {\n      if (isBrowser) {\n        document === null || document === void 0 ? void 0 : document.addEventListener(visibilityChange, _this.visibilityChangeHandler);\n      }\n\n      return _this.getSessionState();\n    };\n\n    this.end = function () {\n      if (isBrowser) {\n        document === null || document === void 0 ? void 0 : document.removeEventListener(visibilityChange, _this.visibilityChangeHandler);\n      }\n\n      return _this.getSessionState();\n    };\n\n    this.getSessionState = function () {\n      if (isBrowser && document && !document[hidden]) {\n        return 'started';\n      } // If, for any reason, document is undefined the session will never start\n\n\n      return 'ended';\n    };\n\n    this.visibilityChangeHandler = function () {\n      if (!isBrowser || !document) {\n        return;\n      }\n\n      if (document[hidden]) {\n        logger.debug('App is now hidden');\n\n        _this.sessionStateChangeHandler('ended');\n      } else {\n        logger.debug('App is now visible');\n\n        _this.sessionStateChangeHandler('started');\n      }\n    };\n\n    this.sessionStateChangeHandler = sessionStateChangeHandler;\n  }\n\n  return SessionTracker;\n}();\n\nexport default SessionTracker;","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAOA;;AACA,IAAIC,MAAJ;AACA,IAAIC,gBAAJ;AACQ;;AAER,IAAIC,SAAS,IAAIC,QAAjB,EAA2B;AAC1B,MAAI,OAAOA,QAAQ,CAACH,MAAhB,KAA2B,WAA/B,EAA4C;AAC3CA,UAAM,GAAG,QAAT;AACAC,oBAAgB,GAAG,kBAAnB;AACA,GAHD,MAGO,IAAI,OAAOE,QAAQ,CAAC,UAAD,CAAf,KAAgC,WAApC,EAAiD;AACvDH,UAAM,GAAG,UAAT;AACAC,oBAAgB,GAAG,oBAAnB;AACA,GAHM,MAGA,IAAI,OAAOE,QAAQ,CAAC,cAAD,CAAf,KAAoC,WAAxC,EAAqD;AAC3DH,UAAM,GAAG,cAAT;AACAC,oBAAgB,GAAG,wBAAnB;AACA;AACD;;AAED,IAAMG,MAAM,GAAG,IAAIN,MAAJ,CAAW,8BAAX,CAAf;;AAEA;AAAA;AAAA;AAGC,0BAAYO,yBAAZ,EAAuE;AAAvE;;AAAY;AAAAA;AAA2D;;AAIvE,iBAAQ;AACP,UAAIH,SAAJ,EAAe;AACdC,gBAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEG,gBAAV,CACCL,gBADD,EAECM,KAAI,CAACC,uBAFN;AAIA;;AACD,aAAOD,KAAI,CAACE,eAAL,EAAP;AACA,KARD;;AAUA,eAAM;AACL,UAAIP,SAAJ,EAAe;AACdC,gBAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEO,mBAAV,CACCT,gBADD,EAECM,KAAI,CAACC,uBAFN;AAIA;;AACD,aAAOD,KAAI,CAACE,eAAL,EAAP;AACA,KARD;;AAUQ,2BAAkB;AACzB,UAAIP,SAAS,IAAIC,QAAb,IAAyB,CAACA,QAAQ,CAACH,MAAD,CAAtC,EAAgD;AAC/C,eAAO,SAAP;AACA,OAHwB,CAIzB;;;AACA,aAAO,OAAP;AACA,KANO;;AAQA,mCAA0B;AACjC,UAAI,CAACE,SAAD,IAAc,CAACC,QAAnB,EAA6B;AAC5B;AACA;;AACD,UAAIA,QAAQ,CAACH,MAAD,CAAZ,EAAsB;AACrBI,cAAM,CAACO,KAAP,CAAa,mBAAb;;AACAJ,aAAI,CAACF,yBAAL,CAA+B,OAA/B;AACA,OAHD,MAGO;AACND,cAAM,CAACO,KAAP,CAAa,oBAAb;;AACAJ,aAAI,CAACF,yBAAL,CAA+B,SAA/B;AACA;AACD,KAXO;;AA/BP,SAAKA,yBAAL,GAAiCA,yBAAjC;AACA;;AA0CF;AAAC,CA/CD","names":["browserOrNode","ConsoleLogger","Logger","noop","hidden","visibilityChange","isBrowser","document","logger","sessionStateChangeHandler","addEventListener","_this","visibilityChangeHandler","getSessionState","removeEventListener","debug"],"sources":["/home/dalienst/node_modules/@aws-amplify/notifications/src/InAppMessaging/SessionTracker/SessionTracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport noop from 'lodash/noop';\nimport {\n\tSessionState,\n\tSessionStateChangeHandler,\n\tSessionTrackerInterface,\n} from './types';\n\n// Per https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\nlet hidden: string;\nlet visibilityChange: string;\nconst { isBrowser } = browserOrNode();\n\nif (isBrowser && document) {\n\tif (typeof document.hidden !== 'undefined') {\n\t\thidden = 'hidden';\n\t\tvisibilityChange = 'visibilitychange';\n\t} else if (typeof document['msHidden'] !== 'undefined') {\n\t\thidden = 'msHidden';\n\t\tvisibilityChange = 'msvisibilitychange';\n\t} else if (typeof document['webkitHidden'] !== 'undefined') {\n\t\thidden = 'webkitHidden';\n\t\tvisibilityChange = 'webkitvisibilitychange';\n\t}\n}\n\nconst logger = new Logger('InAppMessagingSessionTracker');\n\nexport default class SessionTracker implements SessionTrackerInterface {\n\tprivate sessionStateChangeHandler: SessionStateChangeHandler;\n\n\tconstructor(sessionStateChangeHandler: SessionStateChangeHandler = noop) {\n\t\tthis.sessionStateChangeHandler = sessionStateChangeHandler;\n\t}\n\n\tstart = (): SessionState => {\n\t\tif (isBrowser) {\n\t\t\tdocument?.addEventListener(\n\t\t\t\tvisibilityChange,\n\t\t\t\tthis.visibilityChangeHandler\n\t\t\t);\n\t\t}\n\t\treturn this.getSessionState();\n\t};\n\n\tend = (): SessionState => {\n\t\tif (isBrowser) {\n\t\t\tdocument?.removeEventListener(\n\t\t\t\tvisibilityChange,\n\t\t\t\tthis.visibilityChangeHandler\n\t\t\t);\n\t\t}\n\t\treturn this.getSessionState();\n\t};\n\n\tprivate getSessionState = (): SessionState => {\n\t\tif (isBrowser && document && !document[hidden]) {\n\t\t\treturn 'started';\n\t\t}\n\t\t// If, for any reason, document is undefined the session will never start\n\t\treturn 'ended';\n\t};\n\n\tprivate visibilityChangeHandler = () => {\n\t\tif (!isBrowser || !document) {\n\t\t\treturn;\n\t\t}\n\t\tif (document[hidden]) {\n\t\t\tlogger.debug('App is now hidden');\n\t\t\tthis.sessionStateChangeHandler('ended');\n\t\t} else {\n\t\t\tlogger.debug('App is now visible');\n\t\t\tthis.sessionStateChangeHandler('started');\n\t\t}\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}