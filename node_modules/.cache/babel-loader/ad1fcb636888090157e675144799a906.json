{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractPubSubProvider');\n\nvar AbstractPubSubProvider =\n/** @class */\nfunction () {\n  function AbstractPubSubProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._config = options;\n  }\n\n  AbstractPubSubProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n\n  AbstractPubSubProvider.prototype.getCategory = function () {\n    return 'PubSub';\n  };\n\n  Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n    get: function () {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractPubSubProvider;\n}();\n\nexport { AbstractPubSubProvider };","map":{"version":3,"mappings":";AAIA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AAEA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,wBAAX,CAAf;;AAEA;AAAA;AAAA;AAGC,kCAAYE,OAAZ,EAAyC;AAA7B;AAAAA;AAA6B;;AACxC,SAAKC,OAAL,GAAeD,OAAf;AACA;;AAEDE,yDAAUC,MAAV,EAAsC;AAA5B;AAAAA;AAA4B;;AACrC,SAAKF,OAAL,GAAYG,sBAAQD,MAAR,GAAmB,KAAKF,OAAxB,CAAZ;AAEAF,UAAM,CAACM,KAAP,CAAa,eAAa,KAAKC,eAAL,EAA1B,EAAoD,KAAKL,OAAzD;AAEA,WAAO,KAAKD,OAAZ;AACA,GAND;;AAQAE;AACC,WAAO,QAAP;AACA,GAFD;;AAMAK,wBAAcL,gCAAd,EAAc,SAAd,EAAqB;SAArB;AACC,0BAAY,KAAKD,OAAjB;AACA,KAFoB;oBAAA;;AAAA,GAArB;AAgBD;AAAC,CArCD","names":["ConsoleLogger","Logger","logger","options","_config","AbstractPubSubProvider","config","__assign","debug","getProviderName","Object"],"sources":["/home/dalienst/node_modules/@aws-amplify/pubsub/src/Providers/PubSubProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport Observable from 'zen-observable-ts';\nimport { PubSubProvider, ProviderOptions } from '../types/Provider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractPubSubProvider');\n\nexport abstract class AbstractPubSubProvider implements PubSubProvider {\n\tprivate _config: ProviderOptions;\n\n\tconstructor(options: ProviderOptions = {}) {\n\t\tthis._config = options;\n\t}\n\n\tconfigure(config: ProviderOptions = {}): ProviderOptions {\n\t\tthis._config = { ...config, ...this._config };\n\n\t\tlogger.debug(`configure ${this.getProviderName()}`, this._config);\n\n\t\treturn this.options;\n\t}\n\n\tgetCategory() {\n\t\treturn 'PubSub';\n\t}\n\n\tabstract getProviderName(): string;\n\n\tprotected get options(): ProviderOptions {\n\t\treturn { ...this._config };\n\t}\n\n\tpublic abstract newClient(clientOptions: ProviderOptions): Promise<any>;\n\n\tpublic abstract publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProviderOptions\n\t): void;\n\n\tpublic abstract subscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProviderOptions\n\t): Observable<any>;\n}\n"]},"metadata":{},"sourceType":"module"}