{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteCollectionRequest, DeleteCollectionResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1DeleteCollectionCommand, serializeAws_json1_1DeleteCollectionCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Deletes the specified collection. Note that this operation\n *       removes all faces in the collection. For an example, see <a>delete-collection-procedure</a>.</p>\n *\n *          <p>This operation requires permissions to perform the\n *         <code>rekognition:DeleteCollection</code> action.</p>\n */\n\nvar DeleteCollectionCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteCollectionCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteCollectionCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteCollectionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"RekognitionClient\";\n    var commandName = \"DeleteCollectionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteCollectionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteCollectionResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteCollectionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DeleteCollectionCommand(input, context);\n  };\n\n  DeleteCollectionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DeleteCollectionCommand(output, context);\n  };\n\n  return DeleteCollectionCommand;\n}($Command);\n\nexport { DeleteCollectionCommand };","map":{"version":3,"mappings":";AACA,SAASA,uBAAT,EAAkCC,wBAAlC,QAAkE,oBAAlE;AACA,SACEC,6CADF,EAEEC,2CAFF,QAGO,0BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;AAOA;AAAA;AAAA;AAA6CC,6CAA7C,CAKE;AACA;;;AAEA,mCAAqBC,KAArB,EAAwD;AAAxD,gBACE;AACAC,yBAAO,IAFT;;AAAqBC;iBAAmC,CAGtD;AACD;AAED;;;;;AAGAC,kEACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;AAE9B,SAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AAEA,QAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;AAEQ,cAAM,GAAKF,aAAa,OAAxB;AACR,QAAMQ,UAAU,GAAG,mBAAnB;AACA,QAAMC,WAAW,GAAG,yBAApB;AACA,QAAMC,uBAAuB,GAA4B;AACvDC,YAAM,QADiD;AAEvDH,gBAAU,YAF6C;AAGvDC,iBAAW,aAH4C;AAIvDG,6BAAuB,EAAEzB,uBAAuB,CAAC0B,kBAJM;AAKvDC,8BAAwB,EAAE1B,wBAAwB,CAACyB;AALI,KAAzD;AAOQ,sBAAc,GAAKb,aAAa,eAAhC;AACR,WAAOM,KAAK,CAACS,OAAN,CACL,UAACC,OAAD,EAAuC;AACrC,2BAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDf,OAAO,IAAI,EAAnE;AAAsE,KAFnE,EAGLS,uBAHK,CAAP;AAKD,GAzBD;;AA2BQZ,gDAAR,UAAkBH,KAAlB,EAAuDuB,OAAvD,EAA8E;AAC5E,WAAO5B,2CAA2C,CAACK,KAAD,EAAQuB,OAAR,CAAlD;AACD,GAFO;;AAIApB,kDAAR,UAAoBqB,MAApB,EAA4CD,OAA5C,EAAmE;AACjE,WAAO7B,6CAA6C,CAAC8B,MAAD,EAASD,OAAT,CAApD;AACD,GAFO;;AAMV;AAAC,CAtDD,CAA6CzB,QAA7C","names":["DeleteCollectionRequest","DeleteCollectionResponse","deserializeAws_json1_1DeleteCollectionCommand","serializeAws_json1_1DeleteCollectionCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteCollectionCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/home/dalienst/node_modules/@aws-sdk/client-rekognition/commands/DeleteCollectionCommand.ts"],"sourcesContent":["import { RekognitionClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../RekognitionClient\";\nimport { DeleteCollectionRequest, DeleteCollectionResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteCollectionCommand,\n  serializeAws_json1_1DeleteCollectionCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteCollectionCommandInput = DeleteCollectionRequest;\nexport type DeleteCollectionCommandOutput = DeleteCollectionResponse & __MetadataBearer;\n\n/**\n * <p>Deletes the specified collection. Note that this operation\n *       removes all faces in the collection. For an example, see <a>delete-collection-procedure</a>.</p>\n *\n *          <p>This operation requires permissions to perform the\n *         <code>rekognition:DeleteCollection</code> action.</p>\n */\nexport class DeleteCollectionCommand extends $Command<\n  DeleteCollectionCommandInput,\n  DeleteCollectionCommandOutput,\n  RekognitionClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteCollectionCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: RekognitionClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteCollectionCommandInput, DeleteCollectionCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"RekognitionClient\";\n    const commandName = \"DeleteCollectionCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteCollectionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteCollectionResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteCollectionCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteCollectionCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteCollectionCommandOutput> {\n    return deserializeAws_json1_1DeleteCollectionCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}