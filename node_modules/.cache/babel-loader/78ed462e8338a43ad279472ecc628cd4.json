{"ast":null,"code":"import { useRef as $lwiWj$useRef, useEffect as $lwiWj$useEffect, useMemo as $lwiWj$useMemo } from \"react\";\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\n\nfunction $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {\n  const callbackRef = $lwiWj$useRef(callback);\n  $lwiWj$useEffect(() => {\n    callbackRef.current = callback;\n  }); // https://github.com/facebook/react/issues/19240\n\n  return $lwiWj$useMemo(() => function () {\n    var _callbackRef$current;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n  }, []);\n}\n\nexport { $b1b2314f5f9a1d84$export$25bec8c6f54ee79a as useCallbackRef };","map":{"version":3,"mappings":";AAEA;;;;;AAIA,SAASA,yCAAT,CAA2DC,QAA3D,EAAuF;AACrF,QAAMC,WAAW,GAAGC,cAAaF,QAAb,CAApB;AAEAE,mBAAgB,MAAM;AACpBD,eAAW,CAACE,OAAZF,GAAsBD,QAAtBC;AADF,KAHqF,CAOrF;;AACA,SAAOC,eAAc,MAAO,YAA5B;AAA4B;;AAA5B,sCAAgCE,IAAhC;AAAgCA,UAAhC;AAAA;;AAA4B,mCAAaH,WAAW,CAACE,OAAzB,yDAAaE,uCAAW,GAAcD,IAAzB,CAAb;AAArB,KAAwE,EAAxE,CAAP;AACD","names":["useCallbackRef","callback","callbackRef","React","current","args","_callbackRef$current"],"sources":["/home/dalienst/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n"]},"metadata":{},"sourceType":"module"}