{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { gunzip, strFromU8 } from 'fflate';\nexport var convert = function (stream) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (stream instanceof Blob || stream instanceof ReadableStream) {\n        return [2\n        /*return*/\n        , new Response(stream).arrayBuffer().then(function (buffer) {\n          return new Uint8Array(buffer);\n        })];\n      } else {\n        return [2\n        /*return*/\n        , Promise.reject('Invalid content type')];\n      }\n\n      return [2\n      /*return*/\n      ];\n    });\n  });\n};\nexport var base64ToArrayBuffer = function (base64) {\n  return Uint8Array.from(window.atob(base64), function (c) {\n    return c.charCodeAt(0);\n  });\n};\nexport var gzipDecompressToString = function (data) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , new Promise(function (resolve, reject) {\n            gunzip(data, function (err, resp) {\n              if (err) reject(err);else resolve(strFromU8(resp));\n            });\n          })];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n};","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,QAAlC;AAEA,OAAO,IAAMC,OAAO,GAAG,UAAOC,MAAP,EAAqB;AAAA;;AAC3C,UAAIA,MAAM,YAAYC,IAAlB,IAA0BD,MAAM,YAAYE,cAAhD,EAAgE;AAC/D;AAAA;AAAA,UAAO,IAAIC,QAAJ,CAAaH,MAAb,EACLI,WADK,GAELC,IAFK,CAEA,kBAAM;AAAI,qBAAIC,UAAJ,CAAeC,MAAf;AAAsB,SAFhC,CAAP;AAGA,OAJD,MAIO;AACN;AAAA;AAAA,UAAOC,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP;AACA;;;;;;GAP0C;AAQ3C,CARM;AAUP,OAAO,IAAMC,mBAAmB,GAAG,UAACC,MAAD,EAAe;AACjD,SAAOL,UAAU,CAACM,IAAX,CAAgBC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAAhB,EAAqC,aAAC;AAAI,YAAC,CAACI,UAAF,CAAa,CAAb;AAAe,GAAzD,CAAP;AACA,CAFM;AAIP,OAAO,IAAMC,sBAAsB,GAAG,UACrCC,IADqC,EACrB;AAAA;;;;AAET;AAAA;AAAA,YAAM,IAAIT,OAAJ,CAAY,UAACU,OAAD,EAAUT,MAAV,EAAgB;AACxCZ,kBAAM,CAACoB,IAAD,EAAO,UAACE,GAAD,EAAMC,IAAN,EAAU;AACtB,kBAAID,GAAJ,EAASV,MAAM,CAACU,GAAD,CAAN,CAAT,KACKD,OAAO,CAACpB,SAAS,CAACsB,IAAD,CAAV,CAAP;AACL,aAHK,CAAN;AAIA,WALY,CAAN;;;AAAP;AAAA;AAAA,YAAOC,SAAP;;;GAFgB;AAQhB,CATM","names":["gunzip","strFromU8","convert","stream","Blob","ReadableStream","Response","arrayBuffer","then","Uint8Array","buffer","Promise","reject","base64ToArrayBuffer","base64","from","window","atob","charCodeAt","gzipDecompressToString","data","resolve","err","resp","_a"],"sources":["/home/dalienst/node_modules/@aws-amplify/interactions/src/Providers/AWSLexProviderHelper/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { gunzip, strFromU8 } from 'fflate';\n\nexport const convert = async (stream: object): Promise<Uint8Array> => {\n\tif (stream instanceof Blob || stream instanceof ReadableStream) {\n\t\treturn new Response(stream)\n\t\t\t.arrayBuffer()\n\t\t\t.then(buffer => new Uint8Array(buffer));\n\t} else {\n\t\treturn Promise.reject('Invalid content type');\n\t}\n};\n\nexport const base64ToArrayBuffer = (base64: string): Uint8Array => {\n\treturn Uint8Array.from(window.atob(base64), c => c.charCodeAt(0));\n};\n\nexport const gzipDecompressToString = async (\n\tdata: Uint8Array\n): Promise<string> => {\n\treturn await new Promise((resolve, reject) => {\n\t\tgunzip(data, (err, resp) => {\n\t\t\tif (err) reject(err);\n\t\t\telse resolve(strFromU8(resp));\n\t\t});\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}