{"ast":null,"code":"import $98Iye$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $98Iye$forwardRef, createElement as $98Iye$createElement, useRef as $98Iye$useRef, useState as $98Iye$useState, useEffect as $98Iye$useEffect, useCallback as $98Iye$useCallback } from \"react\";\nimport { composeEventHandlers as $98Iye$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection as $98Iye$createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs as $98Iye$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $98Iye$createContextScope } from \"@radix-ui/react-context\";\nimport { useId as $98Iye$useId } from \"@radix-ui/react-id\";\nimport { Primitive as $98Iye$Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef as $98Iye$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState as $98Iye$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection as $98Iye$useDirection } from \"@radix-ui/react-direction\";\nconst $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {\n  bubbles: false,\n  cancelable: true\n};\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst $d7bdfb9eb0fdf311$var$GROUP_NAME = 'RovingFocusGroup';\nconst [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $98Iye$createCollection($d7bdfb9eb0fdf311$var$GROUP_NAME);\nconst [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $98Iye$createContextScope($d7bdfb9eb0fdf311$var$GROUP_NAME, [$d7bdfb9eb0fdf311$var$createCollectionScope]);\nconst [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME);\nconst $d7bdfb9eb0fdf311$export$8699f7c8af148338 = /*#__PURE__*/$98Iye$forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/$98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.Provider, {\n    scope: props.__scopeRovingFocusGroup\n  }, /*#__PURE__*/$98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.Slot, {\n    scope: props.__scopeRovingFocusGroup\n  }, /*#__PURE__*/$98Iye$createElement($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, $98Iye$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef\n  }))));\n});\n/*#__PURE__*/\n\nObject.assign($d7bdfb9eb0fdf311$export$8699f7c8af148338, {\n  displayName: $d7bdfb9eb0fdf311$var$GROUP_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = /*#__PURE__*/$98Iye$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup: __scopeRovingFocusGroup,\n    orientation: orientation,\n    loop = false,\n    dir: dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId: defaultCurrentTabStopId,\n    onCurrentTabStopIdChange: onCurrentTabStopIdChange,\n    onEntryFocus: onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = $98Iye$useRef(null);\n  const composedRefs = $98Iye$useComposedRefs(forwardedRef, ref);\n  const direction = $98Iye$useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = $98Iye$useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = $98Iye$useState(false);\n  const handleEntryFocus = $98Iye$useCallbackRef(onEntryFocus);\n  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = $98Iye$useRef(false);\n  $98Iye$useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n  return /*#__PURE__*/$98Iye$createElement($d7bdfb9eb0fdf311$var$RovingFocusProvider, {\n    scope: __scopeRovingFocusGroup,\n    orientation: orientation,\n    dir: direction,\n    loop: loop,\n    currentTabStopId: currentTabStopId,\n    onItemFocus: $98Iye$useCallback(tabStopId => setCurrentTabStopId(tabStopId), [setCurrentTabStopId]),\n    onItemShiftTab: $98Iye$useCallback(() => setIsTabbingBackOut(true), [])\n  }, /*#__PURE__*/$98Iye$createElement($98Iye$Primitive.div, $98Iye$babelruntimehelpersesmextends({\n    tabIndex: isTabbingBackOut ? -1 : 0,\n    \"data-orientation\": orientation\n  }, groupProps, {\n    ref: composedRefs,\n    style: {\n      outline: 'none',\n      ...props.style\n    },\n    onMouseDown: $98Iye$composeEventHandlers(props.onMouseDown, () => {\n      isClickFocusRef.current = true;\n    }),\n    onFocus: $98Iye$composeEventHandlers(props.onFocus, event => {\n      // We normally wouldn't need this check, because we already check\n      // that the focus is on the current target and not bubbling to it.\n      // We do this because Safari doesn't focus buttons when clicked, and\n      // instead, the wrapper will get focused and not through a bubbling event.\n      const isKeyboardFocus = !isClickFocusRef.current;\n\n      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n        const entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);\n        event.currentTarget.dispatchEvent(entryFocusEvent);\n\n        if (!entryFocusEvent.defaultPrevented) {\n          const items = getItems().filter(item => item.focusable);\n          const activeItem = items.find(item => item.active);\n          const currentItem = items.find(item => item.id === currentTabStopId);\n          const candidateItems = [activeItem, currentItem, ...items].filter(Boolean);\n          const candidateNodes = candidateItems.map(item => item.ref.current);\n          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);\n        }\n      }\n\n      isClickFocusRef.current = false;\n    }),\n    onBlur: $98Iye$composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst $d7bdfb9eb0fdf311$var$ITEM_NAME = 'RovingFocusGroupItem';\nconst $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = /*#__PURE__*/$98Iye$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup: __scopeRovingFocusGroup,\n    focusable = true,\n    active = false,\n    ...itemProps\n  } = props;\n  const id = $98Iye$useId();\n  const context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup);\n  const isCurrentTabStop = context.currentTabStopId === id;\n  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);\n  return /*#__PURE__*/$98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {\n    scope: __scopeRovingFocusGroup,\n    id: id,\n    focusable: focusable,\n    active: active\n  }, /*#__PURE__*/$98Iye$createElement($98Iye$Primitive.span, $98Iye$babelruntimehelpersesmextends({\n    tabIndex: isCurrentTabStop ? 0 : -1,\n    \"data-orientation\": context.orientation\n  }, itemProps, {\n    ref: forwardedRef,\n    onMouseDown: $98Iye$composeEventHandlers(props.onMouseDown, event => {\n      // We prevent focusing non-focusable items on `mousedown`.\n      // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n      if (!focusable) event.preventDefault(); // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n      else context.onItemFocus(id);\n    }),\n    onFocus: $98Iye$composeEventHandlers(props.onFocus, () => context.onItemFocus(id)),\n    onKeyDown: $98Iye$composeEventHandlers(props.onKeyDown, event => {\n      if (event.key === 'Tab' && event.shiftKey) {\n        context.onItemShiftTab();\n        return;\n      }\n\n      if (event.target !== event.currentTarget) return;\n      const focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);\n\n      if (focusIntent !== undefined) {\n        event.preventDefault();\n        const items = getItems().filter(item => item.focusable);\n        let candidateNodes = items.map(item => item.ref.current);\n        if (focusIntent === 'last') candidateNodes.reverse();else if (focusIntent === 'prev' || focusIntent === 'next') {\n          if (focusIntent === 'prev') candidateNodes.reverse();\n          const currentIndex = candidateNodes.indexOf(event.currentTarget);\n          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);\n        }\n        /**\n        * Imperative focus during keydown is risky so we prevent React's batching updates\n        * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n        */\n\n        setTimeout(() => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes));\n      }\n    })\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($d7bdfb9eb0fdf311$export$ab9df7c53fe8454, {\n  displayName: $d7bdfb9eb0fdf311$var$ITEM_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n// prettier-ignore\n\nconst $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: 'prev',\n  ArrowUp: 'prev',\n  ArrowRight: 'next',\n  ArrowDown: 'next',\n  PageUp: 'first',\n  Home: 'first',\n  PageDown: 'last',\n  End: 'last'\n};\n\nfunction $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\nfunction $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {\n  const key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction $d7bdfb9eb0fdf311$var$focusFirst(candidates) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\n\n\nfunction $d7bdfb9eb0fdf311$var$wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338;\nconst $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;\nexport { $d7bdfb9eb0fdf311$export$c7109489551a4f4 as createRovingFocusGroupScope, $d7bdfb9eb0fdf311$export$8699f7c8af148338 as RovingFocusGroup, $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 as RovingFocusGroupItem, $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 as Root, $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 as Item };","map":{"version":3,"mappings":"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","names":["ENTRY_FOCUS","EVENT_OPTIONS","bubbles","cancelable","GROUP_NAME","Collection","useCollection","createCollectionScope","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","createContextScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","React","props","forwardedRef","$98Iye$createElement","$d7bdfb9eb0fdf311$var$Collection","Provider","scope","__scopeRovingFocusGroup","Slot","$d7bdfb9eb0fdf311$var$RovingFocusGroupImpl","ref","Object","displayName","RovingFocusGroupImpl","orientation","loop","dir","currentTabStopId","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","groupProps","composedRefs","useComposedRefs","direction","useDirection","setCurrentTabStopId","useControllableState","prop","defaultProp","onChange","isTabbingBackOut","setIsTabbingBackOut","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","node","current","addEventListener","removeEventListener","$d7bdfb9eb0fdf311$var$RovingFocusProvider","onItemFocus","tabStopId","onItemShiftTab","$98Iye$Primitive","div","$98Iye$babelruntimehelpersesmextends","tabIndex","style","outline","onMouseDown","composeEventHandlers","onFocus","event","isKeyboardFocus","target","currentTarget","entryFocusEvent","CustomEvent","dispatchEvent","defaultPrevented","items","filter","item","focusable","activeItem","find","active","currentItem","id","candidateItems","Boolean","candidateNodes","map","focusFirst","onBlur","ITEM_NAME","RovingFocusGroupItem","itemProps","useId","context","isCurrentTabStop","ItemSlot","span","preventDefault","onKeyDown","key","shiftKey","focusIntent","getFocusIntent","undefined","reverse","currentIndex","indexOf","wrapArray","slice","setTimeout","MAP_KEY_TO_FOCUS_INTENT","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","getDirectionAwareKey","includes","candidates","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","focus","array","startIndex","_","index","length","Root","Item"],"sources":["/home/dalienst/node_modules/@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/RovingFocusGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const { __scopeRovingFocusGroup, focusable = true, active = false, ...itemProps } = props;\n    const id = useId();\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n"]},"metadata":{},"sourceType":"module"}