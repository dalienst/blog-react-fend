{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\nexport var omitRetryHeadersMiddleware = function () {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request)) {\n            delete request.headers[INVOCATION_ID_HEADER];\n            delete request.headers[REQUEST_HEADER];\n          }\n\n          return [2\n          /*return*/\n          , next(args)];\n        });\n      });\n    };\n  };\n};\nexport var omitRetryHeadersMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true\n};\nexport var getOmitRetryHeadersPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAUA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,aAArD;AAEA,OAAO,IAAMC,0BAA0B,GAAG;AAAM,mBAC9CC,IAD8C,EACZ;AACD,qBACjCC,IADiC,EACE;AAAA;;;AAE3BC,iBAAO,GAAKD,IAAI,QAAhB;;AACR,cAAIL,WAAW,CAACO,UAAZ,CAAuBD,OAAvB,CAAJ,EAAqC;AACnC,mBAAOA,OAAO,CAACE,OAAR,CAAgBP,oBAAhB,CAAP;AACA,mBAAOK,OAAO,CAACE,OAAR,CAAgBN,cAAhB,CAAP;AACD;;AACD;AAAA;AAAA,YAAOE,IAAI,CAACC,IAAD,CAAX;;OAPmC;AAQpC,KATkC;AASlC,GAX+C;AAW/C,CAXM;AAaP,OAAO,IAAMI,iCAAiC,GAA8B;AAC1EC,MAAI,EAAE,4BADoE;AAE1EC,MAAI,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,oBAArB,CAFoE;AAG1EC,UAAQ,EAAE,QAHgE;AAI1EC,cAAY,EAAE,mBAJ4D;AAK1EC,UAAQ,EAAE;AALgE,CAArE;AAQP,OAAO,IAAMC,yBAAyB,GAAG,UAACC,OAAD,EAAiB;AAA0B,SAAC;AACnFC,gBAAY,EAAE,UAACC,WAAD,EAAY;AACxBA,iBAAW,CAACC,aAAZ,CAA0BhB,0BAA0B,EAApD,EAAwDM,iCAAxD;AACD;AAHkF,GAAD;AAIlF,CAJK","names":["HttpRequest","INVOCATION_ID_HEADER","REQUEST_HEADER","omitRetryHeadersMiddleware","next","args","request","isInstance","headers","omitRetryHeadersMiddlewareOptions","name","tags","relation","toMiddleware","override","getOmitRetryHeadersPlugin","options","applyToStack","clientStack","addRelativeTo"],"sources":["/home/dalienst/node_modules/@aws-sdk/middleware-retry/src/omitRetryHeadersMiddleware.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\n\nexport const omitRetryHeadersMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  const { request } = args;\n  if (HttpRequest.isInstance(request)) {\n    delete request.headers[INVOCATION_ID_HEADER];\n    delete request.headers[REQUEST_HEADER];\n  }\n  return next(args);\n};\n\nexport const omitRetryHeadersMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true,\n};\n\nexport const getOmitRetryHeadersPlugin = (options: unknown): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}