{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nconst createRegex = require('./createReferenceRegex');\n/**\n * Checks if the value uses a value reference.\n * @memberof Dictionary\n * @param {string} value\n * @param {Object|RegExp} regexOrOptions\n * @returns {boolean} - True, if the value uses a value reference\n */\n\n\nfunction usesReference(value) {\n  let regexOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const regex = regexOrOptions instanceof RegExp ? regexOrOptions : createRegex(regexOrOptions);\n\n  if (typeof value === 'string') {\n    return regex.test(value);\n  }\n\n  if (typeof value === 'object') {\n    let hasReference = false; // iterate over each property in the object,\n    // if any element passes the regex test,\n    // the whole thing should be true\n\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        const element = value[key];\n        let reference = usesReference(element, regexOrOptions);\n\n        if (reference) {\n          hasReference = true;\n          break;\n        }\n      }\n    }\n\n    return hasReference;\n  }\n\n  return false;\n}\n\nmodule.exports = usesReference;","map":{"version":3,"sources":["/home/dalienst/node_modules/style-dictionary/lib/utils/references/usesReference.js"],"names":["createRegex","require","usesReference","value","regexOrOptions","regex","RegExp","test","hasReference","key","hasOwnProperty","element","reference","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,wBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAAmD;AAAA,MAArBC,cAAqB,uEAAJ,EAAI;AACjD,QAAMC,KAAK,GAAGD,cAAc,YAAYE,MAA1B,GAAmCF,cAAnC,GAAoDJ,WAAW,CAACI,cAAD,CAA7E;;AAEA,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOE,KAAK,CAACE,IAAN,CAAWJ,KAAX,CAAP;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAIK,YAAY,GAAG,KAAnB,CAD6B,CAE7B;AACA;AACA;;AACA,SAAK,MAAMC,GAAX,IAAkBN,KAAlB,EAAyB;AACvB,UAAIA,KAAK,CAACO,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;AAC7B,cAAME,OAAO,GAAGR,KAAK,CAACM,GAAD,CAArB;AACA,YAAIG,SAAS,GAAGV,aAAa,CAACS,OAAD,EAAUP,cAAV,CAA7B;;AACA,YAAIQ,SAAJ,EAAe;AACbJ,UAAAA,YAAY,GAAG,IAAf;AACA;AACD;AACF;AACF;;AACD,WAAOA,YAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst createRegex = require('./createReferenceRegex');\n\n/**\n * Checks if the value uses a value reference.\n * @memberof Dictionary\n * @param {string} value\n * @param {Object|RegExp} regexOrOptions\n * @returns {boolean} - True, if the value uses a value reference\n */\nfunction usesReference(value, regexOrOptions = {}) {\n  const regex = regexOrOptions instanceof RegExp ? regexOrOptions : createRegex(regexOrOptions);\n\n  if (typeof value === 'string') {\n    return regex.test(value);\n  }\n\n  if (typeof value === 'object') {\n    let hasReference = false;\n    // iterate over each property in the object,\n    // if any element passes the regex test,\n    // the whole thing should be true\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        const element = value[key];\n        let reference = usesReference(element, regexOrOptions);\n        if (reference) {\n          hasReference = true;\n          break;\n        }\n      }\n    }\n    return hasReference;\n  }\n\n  return false;\n}\n\nmodule.exports = usesReference;\n"]},"metadata":{},"sourceType":"script"}