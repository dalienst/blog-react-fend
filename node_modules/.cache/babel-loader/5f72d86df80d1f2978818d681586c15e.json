{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isTranslateTextInput, isTextToSpeechInput, isSpeechToTextInput } from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractConvertPredictionsProvider');\n\nvar AbstractConvertPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AbstractConvertPredictionsProvider, _super);\n\n  function AbstractConvertPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractConvertPredictionsProvider.prototype.getCategory = function () {\n    return 'Convert';\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convert = function (input) {\n    if (isTranslateTextInput(input)) {\n      logger.debug('translateText');\n      return this.translateText(input);\n    } else if (isTextToSpeechInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertTextToSpeech(input);\n    } else if (isSpeechToTextInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertSpeechToText(input);\n    }\n  };\n\n  AbstractConvertPredictionsProvider.prototype.translateText = function (translateTextInput) {\n    throw new Error('convertText is not implemented by this provider');\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convertTextToSpeech = function (textToSpeechInput) {\n    throw new Error('convertTextToSpeech is not implemented by this provider');\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convertSpeechToText = function (speechToTextInput) {\n    throw new Error('convertSpeechToText is not implemented by this provider');\n  };\n\n  return AbstractConvertPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AbstractConvertPredictionsProvider };","map":{"version":3,"mappings":";AAAA,SAICA,oBAJD,EAKCC,mBALD,EAMCC,mBAND,QAUO,gBAVP;AAWA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AACA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,oCAAX,CAAf;;AAEA;AAAA;AAAA;AAAiEE;;AAAjE;;AAqCC;;AApCAC;AACC,WAAO,SAAP;AACA,GAFD;;AAIAA,mEACCC,KADD,EACkE;AAEjE,QAAIT,oBAAoB,CAACS,KAAD,CAAxB,EAAiC;AAChCH,YAAM,CAACI,KAAP,CAAa,eAAb;AACA,aAAO,KAAKC,aAAL,CAAmBF,KAAnB,CAAP;AACA,KAHD,MAGO,IAAIR,mBAAmB,CAACQ,KAAD,CAAvB,EAAgC;AACtCH,YAAM,CAACI,KAAP,CAAa,cAAb;AACA,aAAO,KAAKE,mBAAL,CAAyBH,KAAzB,CAAP;AACA,KAHM,MAGA,IAAIP,mBAAmB,CAACO,KAAD,CAAvB,EAAgC;AACtCH,YAAM,CAACI,KAAP,CAAa,cAAb;AACA,aAAO,KAAKG,mBAAL,CAAyBJ,KAAzB,CAAP;AACA;AACD,GAbD;;AAeUD,+DAAV,UACCM,kBADD,EACuC;AAEtC,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACA,GAJS;;AAMAP,qEAAV,UACCQ,iBADD,EACqC;AAEpC,UAAM,IAAID,KAAJ,CAAU,yDAAV,CAAN;AACA,GAJS;;AAMAP,qEAAV,UACCS,iBADD,EACqC;AAEpC,UAAM,IAAIF,KAAJ,CAAU,yDAAV,CAAN;AACA,GAJS;;AAKX;AAAC,CArCD,CAAiEZ,2BAAjE","names":["isTranslateTextInput","isTextToSpeechInput","isSpeechToTextInput","AbstractPredictionsProvider","ConsoleLogger","Logger","logger","__extends","AbstractConvertPredictionsProvider","input","debug","translateText","convertTextToSpeech","convertSpeechToText","translateTextInput","Error","textToSpeechInput","speechToTextInput"],"sources":["/home/dalienst/node_modules/@aws-amplify/predictions/src/types/Providers/AbstractConvertPredictionsProvider.ts"],"sourcesContent":["import {\n\tTranslateTextInput,\n\tTextToSpeechInput,\n\tSpeechToTextInput,\n\tisTranslateTextInput,\n\tisTextToSpeechInput,\n\tisSpeechToTextInput,\n\tTranslateTextOutput,\n\tTextToSpeechOutput,\n\tSpeechToTextOutput,\n} from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nconst logger = new Logger('AbstractConvertPredictionsProvider');\n\nexport abstract class AbstractConvertPredictionsProvider extends AbstractPredictionsProvider {\n\tgetCategory(): string {\n\t\treturn 'Convert';\n\t}\n\n\tconvert(\n\t\tinput: TranslateTextInput | TextToSpeechInput | SpeechToTextInput\n\t): Promise<TextToSpeechOutput | TranslateTextOutput | SpeechToTextOutput> {\n\t\tif (isTranslateTextInput(input)) {\n\t\t\tlogger.debug('translateText');\n\t\t\treturn this.translateText(input);\n\t\t} else if (isTextToSpeechInput(input)) {\n\t\t\tlogger.debug('textToSpeech');\n\t\t\treturn this.convertTextToSpeech(input);\n\t\t} else if (isSpeechToTextInput(input)) {\n\t\t\tlogger.debug('textToSpeech');\n\t\t\treturn this.convertSpeechToText(input);\n\t\t}\n\t}\n\n\tprotected translateText(\n\t\ttranslateTextInput: TranslateTextInput\n\t): Promise<TranslateTextOutput> {\n\t\tthrow new Error('convertText is not implemented by this provider');\n\t}\n\n\tprotected convertTextToSpeech(\n\t\ttextToSpeechInput: TextToSpeechInput\n\t): Promise<TextToSpeechOutput> {\n\t\tthrow new Error('convertTextToSpeech is not implemented by this provider');\n\t}\n\n\tprotected convertSpeechToText(\n\t\tspeechToTextInput: SpeechToTextInput\n\t): Promise<SpeechToTextOutput> {\n\t\tthrow new Error('convertSpeechToText is not implemented by this provider');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}