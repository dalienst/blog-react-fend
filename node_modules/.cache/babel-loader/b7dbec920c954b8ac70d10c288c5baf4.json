{"ast":null,"code":"export function requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,cAAV,CAAyBC,WAAzB,EAAwC;AAAf;AAAAA;AAAe;;AAC5C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAgB;AACjC,QAAIH,WAAJ,EAAiB;AACfI,gBAAU,CAAC;AACT,YAAMC,YAAY,GAAG,IAAIC,KAAJ,CAAU,qCAAmCN,WAAnC,GAA8C,KAAxD,CAArB;AACAK,oBAAY,CAACE,IAAb,GAAoB,cAApB;AACAJ,cAAM,CAACE,YAAD,CAAN;AACD,OAJS,EAIPL,WAJO,CAAV;AAKD;AACF,GARM,CAAP;AASD","names":["requestTimeout","timeoutInMs","Promise","resolve","reject","setTimeout","timeoutError","Error","name"],"sources":["/home/dalienst/node_modules/@aws-sdk/fetch-http-handler/src/request-timeout.ts"],"sourcesContent":["export function requestTimeout(timeoutInMs = 0): Promise<never> {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}