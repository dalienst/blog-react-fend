{"ast":null,"code":"import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\n\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: function (_) {\n    return function () {\n      return Promise.reject(new Error(\"Credential is missing\"));\n    };\n  },\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version\n  }),\n  eventStreamSerdeProvider: eventStreamSerdeProvider,\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","map":{"version":3,"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,wBAAT,QAAyC,oCAAzC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,8BAArC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,4BAAjC;AAEA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA;;;;AAGA,OAAO,IAAMC,mBAAmB,yBAC3BD,kBAD2B,GACT;AACrBE,SAAO,EAAE,SADY;AAErBC,eAAa,EAAET,UAFM;AAGrBU,eAAa,EAAET,QAHM;AAIrBU,mBAAiB,EAAET,mBAJE;AAKrBU,2BAAyB,EAAE,UAACC,CAAD,EAAW;AAAK;AAAM,oBAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,uBAAV,CAAf;AAAkD,KAAxD;AAAwD,GAL9E;AAMrBC,0BAAwB,EAAEb,gBAAgB,CAAC;AACzCc,aAAS,EAAEX,kBAAkB,CAACW,SADW;AAEzCC,iBAAa,EAAEzB,WAAW,CAAC0B;AAFc,GAAD,CANrB;AAUrBxB,0BAAwB,0BAVH;AAWrByB,aAAW,EAAErB,oBAXQ;AAYrBsB,QAAM,EAAEvB,eAAe,CAAC,mBAAD,CAZF;AAarBwB,gBAAc,EAAE,IAAI1B,gBAAJ,EAbK;AAcrB2B,QAAM,EAAE7B,MAda;AAerBG,iBAAe,iBAfM;AAgBrB2B,aAAW,EAAEpB,QAhBQ;AAiBrBqB,aAAW,EAAEpB;AAjBQ,CADS,CAAzB","names":["packageInfo","Sha256","eventStreamSerdeProvider","FetchHttpHandler","streamCollector","invalidProvider","DEFAULT_MAX_ATTEMPTS","fromBase64","toBase64","calculateBodyLength","defaultUserAgent","fromUtf8","toUtf8","ClientSharedValues","ClientDefaultValues","runtime","base64Decoder","base64Encoder","bodyLengthChecker","credentialDefaultProvider","_","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","region","requestHandler","sha256","utf8Decoder","utf8Encoder"],"sources":["/home/dalienst/node_modules/@aws-sdk/client-kinesis/runtimeConfig.browser.ts"],"sourcesContent":["import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./KinesisClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  eventStreamSerdeProvider,\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n"]},"metadata":{},"sourceType":"module"}