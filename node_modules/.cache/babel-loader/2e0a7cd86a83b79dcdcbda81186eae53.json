{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteBucketTaggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteBucketTaggingCommand, serializeAws_restXmlDeleteBucketTaggingCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Deletes the tags from the bucket.</p>\n *\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:PutBucketTagging</code> action. By default, the bucket owner has this\n *          permission and can grant this permission to others. </p>\n *          <p>The following operations are related to <code>DeleteBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\">PutBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar DeleteBucketTaggingCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteBucketTaggingCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteBucketTaggingCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteBucketTaggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteBucketTaggingCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteBucketTaggingCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteBucketTaggingCommand(input, context);\n  };\n\n  DeleteBucketTaggingCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteBucketTaggingCommand(output, context);\n  };\n\n  return DeleteBucketTaggingCommand;\n}($Command);\n\nexport { DeleteBucketTaggingCommand };","map":{"version":3,"mappings":";AACA,SAASA,0BAAT,QAA2C,oBAA3C;AACA,SACEC,gDADF,EAEEC,8CAFF,QAGO,0BAHP;AAIA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;AAoBA;AAAA;AAAA;AAAgDC,gDAAhD,CAKE;AACA;;;AAEA,sCAAqBC,KAArB,EAA2D;AAA3D,gBACE;AACAC,yBAAO,IAFT;;AAAqBC;iBAAsC,CAGzD;AACD;AAED;;;;;AAGAC,qEACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;AAE9B,SAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AACA,SAAKH,eAAL,CAAqBC,GAArB,CAAyBb,uBAAuB,CAACU,aAAD,CAAhD;AAEA,QAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;AAEQ,cAAM,GAAKF,aAAa,OAAxB;AACR,QAAMQ,UAAU,GAAG,UAAnB;AACA,QAAMC,WAAW,GAAG,4BAApB;AACA,QAAMC,uBAAuB,GAA4B;AACvDC,YAAM,QADiD;AAEvDH,gBAAU,YAF6C;AAGvDC,iBAAW,aAH4C;AAIvDG,6BAAuB,EAAEzB,0BAA0B,CAAC0B,kBAJG;AAKvDC,8BAAwB,EAAE,UAACC,MAAD,EAAY;AAAK;AAAM;AALM,KAAzD;AAOQ,sBAAc,GAAKf,aAAa,eAAhC;AACR,WAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;AACrC,2BAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;AAAsE,KAFnE,EAGLS,uBAHK,CAAP;AAKD,GA1BD;;AA4BQZ,mDAAR,UAAkBH,KAAlB,EAA0DwB,OAA1D,EAAiF;AAC/E,WAAO9B,8CAA8C,CAACM,KAAD,EAAQwB,OAAR,CAArD;AACD,GAFO;;AAIArB,qDAAR,UAAoBiB,MAApB,EAA4CI,OAA5C,EAAmE;AACjE,WAAO/B,gDAAgD,CAAC2B,MAAD,EAASI,OAAT,CAAvD;AACD,GAFO;;AAMV;AAAC,CAvDD,CAAgD1B,QAAhD","names":["DeleteBucketTaggingRequest","deserializeAws_restXmlDeleteBucketTaggingCommand","serializeAws_restXmlDeleteBucketTaggingCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteBucketTaggingCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/home/dalienst/node_modules/@aws-sdk/client-s3/commands/DeleteBucketTaggingCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { DeleteBucketTaggingRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlDeleteBucketTaggingCommand,\n  serializeAws_restXmlDeleteBucketTaggingCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteBucketTaggingCommandInput = DeleteBucketTaggingRequest;\nexport type DeleteBucketTaggingCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the tags from the bucket.</p>\n *\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:PutBucketTagging</code> action. By default, the bucket owner has this\n *          permission and can grant this permission to others. </p>\n *          <p>The following operations are related to <code>DeleteBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\">PutBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class DeleteBucketTaggingCommand extends $Command<\n  DeleteBucketTaggingCommandInput,\n  DeleteBucketTaggingCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteBucketTaggingCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"DeleteBucketTaggingCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteBucketTaggingCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlDeleteBucketTaggingCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteBucketTaggingCommandOutput> {\n    return deserializeAws_restXmlDeleteBucketTaggingCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}