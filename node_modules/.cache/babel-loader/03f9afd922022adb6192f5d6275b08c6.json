{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read, __spread } from \"tslib\";\nvar lists = [];\n\nvar MethodEmbed =\n/** @class */\nfunction () {\n  function MethodEmbed(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this._originalMethod = context[methodName].bind(context);\n  }\n\n  MethodEmbed.add = function (context, methodName, methodOverride) {\n    getInstance(context, methodName).set(methodOverride);\n  };\n\n  MethodEmbed.remove = function (context, methodName) {\n    getInstance(context, methodName).remove();\n  };\n\n  MethodEmbed.prototype.set = function (methodOverride) {\n    var _this = this;\n\n    this.context[this.methodName] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodOverride(_this._originalMethod.apply(_this, __spread(args)));\n    };\n  };\n\n  MethodEmbed.prototype.remove = function () {\n    this.context[this.methodName] = this._originalMethod;\n  };\n\n  return MethodEmbed;\n}();\n\nexport { MethodEmbed };\n\nfunction getInstance(context, methodName) {\n  var instance = lists.filter(function (h) {\n    return h.context === context && h.methodName === methodName;\n  })[0];\n\n  if (!instance) {\n    instance = new MethodEmbed(context, methodName);\n    lists.push(instance);\n  }\n\n  return instance;\n}","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,IAAMA,KAAK,GAAkB,EAA7B;;AAEA;AAAA;AAAA;AAcC,uBAAYC,OAAZ,EAAqBC,UAArB,EAA+B;AAC9B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKC,eAAL,GAAuBF,OAAO,CAACC,UAAD,CAAP,CAAoBE,IAApB,CAAyBH,OAAzB,CAAvB;AACA;;AAbMI,oBAAP,UAAWJ,OAAX,EAAoBC,UAApB,EAAgCI,cAAhC,EAA8C;AAC7CC,eAAW,CAACN,OAAD,EAAUC,UAAV,CAAX,CAAiCM,GAAjC,CAAqCF,cAArC;AACA,GAFM;;AAIAD,uBAAP,UAAcJ,OAAd,EAAuBC,UAAvB,EAAiC;AAChCK,eAAW,CAACN,OAAD,EAAUC,UAAV,CAAX,CAAiCO,MAAjC;AACA,GAFM;;AAWAJ,8BAAP,UAAWC,cAAX,EAAyB;AAAzB;;AACC,SAAKL,OAAL,CAAa,KAAKC,UAAlB,IAAgC;AAAC;;WAAA,yCAAO;AAAPQ;;;AAChC,aAAOJ,cAAc,CAACK,KAAI,CAACR,eAAL,CAAoBS,KAApB,QAAIC,SAAoBH,IAApB,CAAJ,CAAD,CAArB;AACA,KAFD;AAGA,GAJM;;AAMAL,iCAAP;AACC,SAAKJ,OAAL,CAAa,KAAKC,UAAlB,IAAgC,KAAKC,eAArC;AACA,GAFM;;AAGR;AAAC,CA9BD;;;;AAgCA,SAASI,WAAT,CAAqBN,OAArB,EAA8BC,UAA9B,EAAwC;AACvC,MAAIY,QAAQ,GAAGd,KAAK,CAACe,MAAN,CACd,aAAC;AAAI,YAAC,CAACd,OAAF,KAAcA,OAAd,IAAyBe,CAAC,CAACd,UAAF,KAAiBA,UAA1C;AAAoD,GAD3C,EAEb,CAFa,CAAf;;AAIA,MAAI,CAACY,QAAL,EAAe;AACdA,YAAQ,GAAG,IAAIT,WAAJ,CAAgBJ,OAAhB,EAAyBC,UAAzB,CAAX;AACAF,SAAK,CAACiB,IAAN,CAAWH,QAAX;AACA;;AAED,SAAOA,QAAP;AACA","names":["lists","context","methodName","_originalMethod","bind","MethodEmbed","methodOverride","getInstance","set","remove","args","_this","apply","__spread","instance","filter","h","push"],"sources":["/home/dalienst/node_modules/@aws-amplify/analytics/src/utils/MethodEmbed.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nconst lists: MethodEmbed[] = [];\n\nexport class MethodEmbed {\n\tpublic context;\n\tpublic methodName;\n\tprivate _originalMethod;\n\tprivate _bindedMethod;\n\n\tstatic add(context, methodName, methodOverride) {\n\t\tgetInstance(context, methodName).set(methodOverride);\n\t}\n\n\tstatic remove(context, methodName) {\n\t\tgetInstance(context, methodName).remove();\n\t}\n\n\tconstructor(context, methodName) {\n\t\tthis.context = context;\n\t\tthis.methodName = methodName;\n\n\t\tthis._originalMethod = context[methodName].bind(context);\n\t}\n\n\tpublic set(methodOverride) {\n\t\tthis.context[this.methodName] = (...args) => {\n\t\t\treturn methodOverride(this._originalMethod(...args));\n\t\t};\n\t}\n\n\tpublic remove() {\n\t\tthis.context[this.methodName] = this._originalMethod;\n\t}\n}\n\nfunction getInstance(context, methodName): MethodEmbed {\n\tlet instance = lists.filter(\n\t\th => h.context === context && h.methodName === methodName\n\t)[0];\n\n\tif (!instance) {\n\t\tinstance = new MethodEmbed(context, methodName);\n\t\tlists.push(instance);\n\t}\n\n\treturn instance;\n}\n"]},"metadata":{},"sourceType":"module"}