{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CreateSegmentRequest, CreateSegmentResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateSegmentCommand, serializeAws_restJson1CreateSegmentCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.</p>\n */\n\nvar CreateSegmentCommand =\n/** @class */\nfunction (_super) {\n  __extends(CreateSegmentCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function CreateSegmentCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  CreateSegmentCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PinpointClient\";\n    var commandName = \"CreateSegmentCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: CreateSegmentRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CreateSegmentResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  CreateSegmentCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1CreateSegmentCommand(input, context);\n  };\n\n  CreateSegmentCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1CreateSegmentCommand(output, context);\n  };\n\n  return CreateSegmentCommand;\n}($Command);\n\nexport { CreateSegmentCommand };","map":{"version":3,"mappings":";AACA,SAASA,oBAAT,EAA+BC,qBAA/B,QAA4D,oBAA5D;AACA,SACEC,4CADF,EAEEC,0CAFF,QAGO,4BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;AAGA;AAAA;AAAA;AAA0CC,0CAA1C,CAKE;AACA;;;AAEA,gCAAqBC,KAArB,EAAqD;AAArD,gBACE;AACAC,yBAAO,IAFT;;AAAqBC;iBAAgC,CAGnD;AACD;AAED;;;;;AAGAC,+DACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;AAE9B,SAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AAEA,QAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;AAEQ,cAAM,GAAKF,aAAa,OAAxB;AACR,QAAMQ,UAAU,GAAG,gBAAnB;AACA,QAAMC,WAAW,GAAG,sBAApB;AACA,QAAMC,uBAAuB,GAA4B;AACvDC,YAAM,QADiD;AAEvDH,gBAAU,YAF6C;AAGvDC,iBAAW,aAH4C;AAIvDG,6BAAuB,EAAEzB,oBAAoB,CAAC0B,kBAJS;AAKvDC,8BAAwB,EAAE1B,qBAAqB,CAACyB;AALO,KAAzD;AAOQ,sBAAc,GAAKb,aAAa,eAAhC;AACR,WAAOM,KAAK,CAACS,OAAN,CACL,UAACC,OAAD,EAAuC;AACrC,2BAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDf,OAAO,IAAI,EAAnE;AAAsE,KAFnE,EAGLS,uBAHK,CAAP;AAKD,GAzBD;;AA2BQZ,6CAAR,UAAkBH,KAAlB,EAAoDuB,OAApD,EAA2E;AACzE,WAAO5B,0CAA0C,CAACK,KAAD,EAAQuB,OAAR,CAAjD;AACD,GAFO;;AAIApB,+CAAR,UAAoBqB,MAApB,EAA4CD,OAA5C,EAAmE;AACjE,WAAO7B,4CAA4C,CAAC8B,MAAD,EAASD,OAAT,CAAnD;AACD,GAFO;;AAMV;AAAC,CAtDD,CAA0CzB,QAA1C","names":["CreateSegmentRequest","CreateSegmentResponse","deserializeAws_restJson1CreateSegmentCommand","serializeAws_restJson1CreateSegmentCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","CreateSegmentCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/home/dalienst/node_modules/@aws-sdk/client-pinpoint/commands/CreateSegmentCommand.ts"],"sourcesContent":["import { PinpointClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../PinpointClient\";\nimport { CreateSegmentRequest, CreateSegmentResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_restJson1CreateSegmentCommand,\n  serializeAws_restJson1CreateSegmentCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateSegmentCommandInput = CreateSegmentRequest;\nexport type CreateSegmentCommandOutput = CreateSegmentResponse & __MetadataBearer;\n\n/**\n * <p>Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.</p>\n */\nexport class CreateSegmentCommand extends $Command<\n  CreateSegmentCommandInput,\n  CreateSegmentCommandOutput,\n  PinpointClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateSegmentCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: PinpointClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateSegmentCommandInput, CreateSegmentCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"PinpointClient\";\n    const commandName = \"CreateSegmentCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateSegmentRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CreateSegmentResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateSegmentCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1CreateSegmentCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateSegmentCommandOutput> {\n    return deserializeAws_restJson1CreateSegmentCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}