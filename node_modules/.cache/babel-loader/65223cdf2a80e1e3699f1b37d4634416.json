{"ast":null,"code":"import { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nconst logger = new ConsoleLogger('Notifications.InAppMessaging');\nconst positions = {\n  BOTTOM_BANNER: 'bottom',\n  MIDDLE_BANNER: 'middle',\n  TOP_BANNER: 'top'\n};\n\nconst getPositionProp = layout => positions[layout];\n\nconst getActionHandler = (actionParams, onMessageAction, onActionCallback) => ({\n  onAction() {\n    try {\n      onMessageAction(actionParams);\n    } catch (e) {\n      logger.error(`Message action failure: ${e}`);\n    } finally {\n      onActionCallback();\n    }\n  }\n\n});\n\nconst getButtonProps = (_a, onMessageAction, onActionCallback) => {\n  var {\n    action,\n    url\n  } = _a,\n      baseButtonProps = __rest(_a, [\"action\", \"url\"]);\n\n  return Object.assign(Object.assign({}, baseButtonProps), getActionHandler({\n    action,\n    url\n  }, onMessageAction, onActionCallback));\n};\n\nconst getContentProps = (content, onMessageAction, onActionCallback) => {\n  const props = {};\n\n  if (!content) {\n    return props;\n  }\n\n  const {\n    primaryButton,\n    secondaryButton\n  } = content,\n        restContent = __rest(content, [\"primaryButton\", \"secondaryButton\"]);\n\n  if (primaryButton) {\n    props.primaryButton = getButtonProps(primaryButton, onMessageAction, onActionCallback);\n  }\n\n  if (secondaryButton) {\n    props.secondaryButton = getButtonProps(secondaryButton, onMessageAction, onActionCallback);\n  }\n\n  return Object.assign(Object.assign({}, props), restContent);\n};\n\nexport { getActionHandler, getContentProps, getPositionProp };","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui-react-core/dist/esm/InAppMessaging/hooks/useMessage/utils.js"],"names":["__rest","ConsoleLogger","logger","positions","BOTTOM_BANNER","MIDDLE_BANNER","TOP_BANNER","getPositionProp","layout","getActionHandler","actionParams","onMessageAction","onActionCallback","onAction","e","error","getButtonProps","_a","action","url","baseButtonProps","Object","assign","getContentProps","content","props","primaryButton","secondaryButton","restContent"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0CAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,MAAM,GAAG,IAAID,aAAJ,CAAkB,8BAAlB,CAAf;AACA,MAAME,SAAS,GAAG;AACdC,EAAAA,aAAa,EAAE,QADD;AAEdC,EAAAA,aAAa,EAAE,QAFD;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;;AAKA,MAAMC,eAAe,GAAIC,MAAD,IAAYL,SAAS,CAACK,MAAD,CAA7C;;AACA,MAAMC,gBAAgB,GAAG,CAACC,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,MAAsD;AAC3EC,EAAAA,QAAQ,GAAG;AACP,QAAI;AACAF,MAAAA,eAAe,CAACD,YAAD,CAAf;AACH,KAFD,CAGA,OAAOI,CAAP,EAAU;AACNZ,MAAAA,MAAM,CAACa,KAAP,CAAc,2BAA0BD,CAAE,EAA1C;AACH,KALD,SAMQ;AACJF,MAAAA,gBAAgB;AACnB;AACJ;;AAX0E,CAAtD,CAAzB;;AAaA,MAAMI,cAAc,GAAG,CAACC,EAAD,EAAKN,eAAL,EAAsBC,gBAAtB,KAA2C;AAC9D,MAAI;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkBF,EAAtB;AAAA,MAA0BG,eAAe,GAAGpB,MAAM,CAACiB,EAAD,EAAK,CAAC,QAAD,EAAW,KAAX,CAAL,CAAlD;;AACA,SAAQI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,eAAlB,CAAd,EAAkDX,gBAAgB,CAAC;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAkBR,eAAlB,EAAmCC,gBAAnC,CAAlE,CAAR;AACH,CAHD;;AAIA,MAAMW,eAAe,GAAG,CAACC,OAAD,EAAUb,eAAV,EAA2BC,gBAA3B,KAAgD;AACpE,QAAMa,KAAK,GAAG,EAAd;;AACA,MAAI,CAACD,OAAL,EAAc;AACV,WAAOC,KAAP;AACH;;AACD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAqCH,OAA3C;AAAA,QAAoDI,WAAW,GAAG5B,MAAM,CAACwB,OAAD,EAAU,CAAC,eAAD,EAAkB,iBAAlB,CAAV,CAAxE;;AACA,MAAIE,aAAJ,EAAmB;AACfD,IAAAA,KAAK,CAACC,aAAN,GAAsBV,cAAc,CAACU,aAAD,EAAgBf,eAAhB,EAAiCC,gBAAjC,CAApC;AACH;;AACD,MAAIe,eAAJ,EAAqB;AACjBF,IAAAA,KAAK,CAACE,eAAN,GAAwBX,cAAc,CAACW,eAAD,EAAkBhB,eAAlB,EAAmCC,gBAAnC,CAAtC;AACH;;AACD,SAAOS,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,KAAlB,CAAd,EAAwCG,WAAxC,CAAP;AACH,CAbD;;AAeA,SAASnB,gBAAT,EAA2Bc,eAA3B,EAA4ChB,eAA5C","sourcesContent":["import { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\n\nconst logger = new ConsoleLogger('Notifications.InAppMessaging');\nconst positions = {\n    BOTTOM_BANNER: 'bottom',\n    MIDDLE_BANNER: 'middle',\n    TOP_BANNER: 'top',\n};\nconst getPositionProp = (layout) => positions[layout];\nconst getActionHandler = (actionParams, onMessageAction, onActionCallback) => ({\n    onAction() {\n        try {\n            onMessageAction(actionParams);\n        }\n        catch (e) {\n            logger.error(`Message action failure: ${e}`);\n        }\n        finally {\n            onActionCallback();\n        }\n    },\n});\nconst getButtonProps = (_a, onMessageAction, onActionCallback) => {\n    var { action, url } = _a, baseButtonProps = __rest(_a, [\"action\", \"url\"]);\n    return (Object.assign(Object.assign({}, baseButtonProps), getActionHandler({ action, url }, onMessageAction, onActionCallback)));\n};\nconst getContentProps = (content, onMessageAction, onActionCallback) => {\n    const props = {};\n    if (!content) {\n        return props;\n    }\n    const { primaryButton, secondaryButton } = content, restContent = __rest(content, [\"primaryButton\", \"secondaryButton\"]);\n    if (primaryButton) {\n        props.primaryButton = getButtonProps(primaryButton, onMessageAction, onActionCallback);\n    }\n    if (secondaryButton) {\n        props.secondaryButton = getButtonProps(secondaryButton, onMessageAction, onActionCallback);\n    }\n    return Object.assign(Object.assign({}, props), restContent);\n};\n\nexport { getActionHandler, getContentProps, getPositionProp };\n"]},"metadata":{},"sourceType":"module"}