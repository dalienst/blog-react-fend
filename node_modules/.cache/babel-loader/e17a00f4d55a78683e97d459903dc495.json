{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar _a;\n\nimport { Hub, Signer, jitteredExponentialRetry, getAmplifyUserAgent, Credentials } from \"@aws-amplify/core\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { Map as MaplibreMap } from \"maplibre-gl\";\nimport { urlEncodePeriods } from \"./utils\";\n/**\n * An object for encapsulating an Amplify Geo transform request and Amplify credentials\n * @class AmplifyMapLibreRequest\n * @param {ICredentials} currentCredentials Amplify credentials used for signing transformRequests\n * @param {String} region AWS region\n * @return {AmplifyMapLibreRequest} `this`\n *\n */\n\nexport default class AmplifyMapLibreRequest {\n  constructor(currentCredentials, region) {\n    this.refreshCredentials = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.credentials = yield Credentials.get();\n      } catch (e) {\n        console.error(`Failed to refresh credentials: ${e}`);\n        throw e;\n      }\n    });\n\n    this.refreshCredentialsWithRetry = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        const MAX_DELAY_MS = 5 * 60 * 1000; // 5 minutes\n\n        yield jitteredExponentialRetry(this.refreshCredentials, [], MAX_DELAY_MS); // Refresh credentials on a timer because HubEvents do not trigger on credential refresh currently\n\n        this.activeTimeout && clearTimeout(this.activeTimeout);\n        const expiration = new Date(this.credentials.expiration);\n        const timeout = expiration.getTime() - new Date().getTime() - 10000; // Adds a 10 second buffer time before the next refresh\n\n        this.activeTimeout = window.setTimeout(this.refreshCredentialsWithRetry, timeout);\n      } catch (e) {\n        console.error(`Failed to refresh credentials: ${e}`);\n      }\n    });\n    /**\n     * A callback function that can be passed to a maplibre map object that is run before the map makes a request for an external URL. This transform request is used to sign the request with AWS Sigv4 Auth. [https://maplibre.org/maplibre-gl-js-docs/api/map/](https://maplibre.org/maplibre-gl-js-docs/api/map/)\n     * @param {string} url The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n     * @param {string} resourceType The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n     * @returns {RequestParameters} [https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters](https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters)\n     */\n\n\n    this.transformRequest = (url, resourceType) => {\n      if (resourceType === \"Style\" && !url.includes(\"://\")) {\n        if (this.region == undefined) {\n          throw new Error(\"AWS region for map is undefined. Please verify that the region is set in aws-exports.js or that you are providing an AWS region parameter to createMap\");\n        }\n\n        url = `https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\n      }\n\n      if (url.includes(\"amazonaws.com\")) {\n        // only sign AWS requests (with the signature as part of the query string)\n        const urlWithUserAgent = url + `?x-amz-user-agent=${encodeURIComponent(urlEncodePeriods(getAmplifyUserAgent()))}`;\n        return {\n          url: Signer.signUrl(urlWithUserAgent, {\n            access_key: this.credentials.accessKeyId,\n            secret_key: this.credentials.secretAccessKey,\n            session_token: this.credentials.sessionToken\n          })\n        };\n      }\n    };\n\n    this.credentials = currentCredentials;\n    this.region = region;\n    this.activeTimeout = null;\n    this.refreshCredentialsWithRetry();\n    Hub.listen(\"auth\", data => {\n      switch (data.payload.event) {\n        case \"signIn\":\n        case \"signOut\":\n        case \"tokenRefresh\":\n          this.refreshCredentialsWithRetry();\n          break;\n      }\n    });\n  }\n\n}\n_a = AmplifyMapLibreRequest;\n\nAmplifyMapLibreRequest.createMapLibreMap = options => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    region,\n    mapConstructor = MaplibreMap\n  } = options,\n        maplibreOption = __rest(options, [\"region\", \"mapConstructor\"]);\n\n  const defaultMap = Geo.getDefaultMap();\n  const amplifyRequest = new AmplifyMapLibreRequest(yield Credentials.get(), region || defaultMap.region);\n  const transformRequest = amplifyRequest.transformRequest;\n  const map = new mapConstructor(Object.assign(Object.assign({}, maplibreOption), {\n    style: options.style || defaultMap.mapName,\n    // Amplify uses the name of the map in the maplibre style field,\n    transformRequest\n  }));\n  return map;\n});\n\nexport const createMap = options => __awaiter(void 0, void 0, void 0, function* () {\n  return AmplifyMapLibreRequest.createMapLibreMap(options);\n});","map":{"version":3,"sources":["/home/dalienst/node_modules/maplibre-gl-js-amplify/lib/esm/AmplifyMapLibreRequest.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","Hub","Signer","jitteredExponentialRetry","getAmplifyUserAgent","Credentials","Geo","Map","MaplibreMap","urlEncodePeriods","AmplifyMapLibreRequest","constructor","currentCredentials","region","refreshCredentials","credentials","get","console","error","refreshCredentialsWithRetry","MAX_DELAY_MS","activeTimeout","clearTimeout","expiration","Date","timeout","getTime","window","setTimeout","transformRequest","url","resourceType","includes","undefined","Error","urlWithUserAgent","encodeURIComponent","signUrl","access_key","accessKeyId","secret_key","secretAccessKey","session_token","sessionToken","listen","data","payload","event","createMapLibreMap","options","mapConstructor","maplibreOption","defaultMap","getDefaultMap","amplifyRequest","map","assign","style","mapName","createMap"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport { Hub, Signer, jitteredExponentialRetry, getAmplifyUserAgent, Credentials, } from \"@aws-amplify/core\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { Map as MaplibreMap, } from \"maplibre-gl\";\nimport { urlEncodePeriods } from \"./utils\";\n/**\n * An object for encapsulating an Amplify Geo transform request and Amplify credentials\n * @class AmplifyMapLibreRequest\n * @param {ICredentials} currentCredentials Amplify credentials used for signing transformRequests\n * @param {String} region AWS region\n * @return {AmplifyMapLibreRequest} `this`\n *\n */\nexport default class AmplifyMapLibreRequest {\n    constructor(currentCredentials, region) {\n        this.refreshCredentials = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.credentials = yield Credentials.get();\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n                throw e;\n            }\n        });\n        this.refreshCredentialsWithRetry = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const MAX_DELAY_MS = 5 * 60 * 1000; // 5 minutes\n                yield jitteredExponentialRetry(this.refreshCredentials, [], MAX_DELAY_MS);\n                // Refresh credentials on a timer because HubEvents do not trigger on credential refresh currently\n                this.activeTimeout && clearTimeout(this.activeTimeout);\n                const expiration = new Date(this.credentials.expiration);\n                const timeout = expiration.getTime() - new Date().getTime() - 10000; // Adds a 10 second buffer time before the next refresh\n                this.activeTimeout = window.setTimeout(this.refreshCredentialsWithRetry, timeout);\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n            }\n        });\n        /**\n         * A callback function that can be passed to a maplibre map object that is run before the map makes a request for an external URL. This transform request is used to sign the request with AWS Sigv4 Auth. [https://maplibre.org/maplibre-gl-js-docs/api/map/](https://maplibre.org/maplibre-gl-js-docs/api/map/)\n         * @param {string} url The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n         * @param {string} resourceType The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n         * @returns {RequestParameters} [https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters](https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters)\n         */\n        this.transformRequest = (url, resourceType) => {\n            if (resourceType === \"Style\" && !url.includes(\"://\")) {\n                if (this.region == undefined) {\n                    throw new Error(\"AWS region for map is undefined. Please verify that the region is set in aws-exports.js or that you are providing an AWS region parameter to createMap\");\n                }\n                url = `https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\n            }\n            if (url.includes(\"amazonaws.com\")) {\n                // only sign AWS requests (with the signature as part of the query string)\n                const urlWithUserAgent = url +\n                    `?x-amz-user-agent=${encodeURIComponent(urlEncodePeriods(getAmplifyUserAgent()))}`;\n                return {\n                    url: Signer.signUrl(urlWithUserAgent, {\n                        access_key: this.credentials.accessKeyId,\n                        secret_key: this.credentials.secretAccessKey,\n                        session_token: this.credentials.sessionToken,\n                    }),\n                };\n            }\n        };\n        this.credentials = currentCredentials;\n        this.region = region;\n        this.activeTimeout = null;\n        this.refreshCredentialsWithRetry();\n        Hub.listen(\"auth\", (data) => {\n            switch (data.payload.event) {\n                case \"signIn\":\n                case \"signOut\":\n                case \"tokenRefresh\":\n                    this.refreshCredentialsWithRetry();\n                    break;\n            }\n        });\n    }\n}\n_a = AmplifyMapLibreRequest;\nAmplifyMapLibreRequest.createMapLibreMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    const { region, mapConstructor = MaplibreMap } = options, maplibreOption = __rest(options, [\"region\", \"mapConstructor\"]);\n    const defaultMap = Geo.getDefaultMap();\n    const amplifyRequest = new AmplifyMapLibreRequest(yield Credentials.get(), region || defaultMap.region);\n    const transformRequest = amplifyRequest.transformRequest;\n    const map = new mapConstructor(Object.assign(Object.assign({}, maplibreOption), { style: options.style || defaultMap.mapName, // Amplify uses the name of the map in the maplibre style field,\n        transformRequest }));\n    return map;\n});\nexport const createMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    return AmplifyMapLibreRequest.createMapLibreMap(options);\n});\n"]},"metadata":{},"sourceType":"module"}