{"ast":null,"code":"import { __awaiter as e, __generator as t, __assign as r, __rest as n } from \"tslib\";\nimport { Auth as i } from \"aws-amplify\";\nimport o from \"lodash/get\";\nimport s from \"lodash/isEmpty\";\nimport { createMachine as a, sendUpdate as c } from \"xstate\";\nimport { runValidators as d } from \"../../../validators/index.js\";\nimport { clearAttributeToVerify as u, clearChallengeName as l, clearRequiredAttributes as g, clearError as f, clearFormValues as m, clearTouched as h, clearUnverifiedContactMethods as I, clearValidationError as p, handleInput as v, handleSubmit as A, handleBlur as U, parsePhoneNumber as S, setChallengeName as E, setConfirmResetPasswordIntent as b, setConfirmSignUpIntent as y, setRequiredAttributes as T, setCredentials as C, setFieldErrors as N, setRemoteError as w, setUnverifiedContactMethods as R, setUser as P, setUsernameAuthAttributes as V } from \"../actions.js\";\nimport { defaultServices as _ } from \"../defaultServices.js\";\n\nvar F = [\"SMS_MFA\", \"SOFTWARE_TOKEN_MFA\"],\n    k = function (e) {\n  return o(e, \"data.challengeName\");\n},\n    O = function (e, t) {\n  return e === t;\n},\n    D = function (e) {\n  return F.includes(e);\n};\n\nfunction M(o) {\n  var F = o.services;\n  return a({\n    initial: \"init\",\n    id: \"signInActor\",\n    predictableActionArguments: !0,\n    states: {\n      init: {\n        always: [{\n          target: \"autoSignIn.submit\",\n          cond: \"shouldAutoSubmit\"\n        }, {\n          target: \"autoSignIn\",\n          cond: \"shouldAutoSignIn\"\n        }, {\n          target: \"signIn\"\n        }]\n      },\n      signIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              FEDERATED_SIGN_IN: \"federatedSignIn\"\n            }\n          },\n          federatedSignIn: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"federatedSignIn\",\n              onError: {\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"parsePhoneNumber\", \"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"verifying\"\n              }],\n              onError: [{\n                cond: \"shouldRedirectToConfirmSignUp\",\n                actions: [\"setCredentials\", \"setConfirmSignUpIntent\"],\n                target: \"rejected\"\n              }, {\n                cond: \"shouldRedirectToConfirmResetPassword\",\n                actions: [\"setUsernameAuthAttributes\", \"setConfirmResetPasswordIntent\"],\n                target: \"rejected\"\n              }, {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }]\n            }\n          },\n          verifying: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"checkVerifiedContact\",\n              onDone: [{\n                cond: \"shouldRequestVerification\",\n                target: \"#signInActor.verifyUser\",\n                actions: \"setUnverifiedContactMethods\"\n              }, {\n                target: \"resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      autoSignIn: {\n        initial: \"pending\",\n        states: {\n          pending: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            on: {\n              AUTO_SIGN_IN: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              AUTO_SIGN_IN_FAILURE: {\n                actions: \"setRemoteError\",\n                target: \"pending\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"#signInActor.signIn\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      confirmSignIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"confirmSignIn\",\n              onDone: {\n                target: \"#signInActor.resolved\",\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      forceNewPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: \"sendUpdate\"\n              },\n              invalid: {\n                entry: \"sendUpdate\"\n              }\n            },\n            on: {\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submit: {\n            initial: \"idle\",\n            entry: \"clearError\",\n            states: {\n              idle: {\n                entry: \"sendUpdate\",\n                on: {\n                  SUBMIT: {\n                    actions: \"handleSubmit\",\n                    target: \"validate\"\n                  }\n                }\n              },\n              validate: {\n                entry: \"sendUpdate\",\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"sendUpdate\", \"clearError\"],\n                invoke: {\n                  src: \"forceNewPassword\",\n                  onDone: [{\n                    cond: \"shouldConfirmSignIn\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.confirmSignIn\"\n                  }, {\n                    cond: \"shouldSetupTOTP\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.setupTOTP\"\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signInActor.resolved\"\n              }\n            }\n          }\n        }\n      },\n      setupTOTP: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"verifyTotpToken\",\n              onDone: {\n                actions: [\"clearChallengeName\", \"clearRequiredAttributes\"],\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      verifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"verifyUser\",\n              onDone: {\n                target: \"#signInActor.confirmVerifyUser\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmVerifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUnverifiedContactMethods\", \"clearAttributeToVerify\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"confirmVerifyUser\",\n              onDone: {\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: function (e) {\n          return {\n            user: e.user\n          };\n        }\n      },\n      rejected: {\n        type: \"final\",\n        data: function (e, t) {\n          return {\n            intent: e.redirectIntent,\n            authAttributes: e.authAttributes\n          };\n        }\n      }\n    }\n  }, {\n    actions: {\n      clearAttributeToVerify: u,\n      clearChallengeName: l,\n      clearRequiredAttributes: g,\n      clearError: f,\n      clearFormValues: m,\n      clearTouched: h,\n      clearUnverifiedContactMethods: I,\n      clearValidationError: p,\n      handleInput: v,\n      handleSubmit: A,\n      handleBlur: U,\n      parsePhoneNumber: S,\n      setChallengeName: E,\n      setConfirmResetPasswordIntent: b,\n      setConfirmSignUpIntent: y,\n      setRequiredAttributes: T,\n      setCredentials: C,\n      setFieldErrors: N,\n      setRemoteError: w,\n      setUnverifiedContactMethods: R,\n      setUser: P,\n      setUsernameAuthAttributes: V,\n      sendUpdate: c()\n    },\n    guards: {\n      shouldAutoSignIn: function (e) {\n        return \"autoSignIn\" === (null == e ? void 0 : e.intent);\n      },\n      shouldAutoSubmit: function (e) {\n        return \"autoSignInSubmit\" === (null == e ? void 0 : e.intent);\n      },\n      shouldConfirmSignIn: function (e, t) {\n        return D(k(t));\n      },\n      shouldForceChangePassword: function (e, t) {\n        return O(k(t), \"NEW_PASSWORD_REQUIRED\");\n      },\n      shouldRedirectToConfirmResetPassword: function (e, t) {\n        return \"PasswordResetRequiredException\" === t.data.code;\n      },\n      shouldRedirectToConfirmSignUp: function (e, t) {\n        return \"UserNotConfirmedException\" === t.data.code;\n      },\n      shouldRequestVerification: function (e, t) {\n        var r = t.data,\n            n = r.unverified,\n            i = r.verified;\n        return s(i) && !s(n);\n      },\n      shouldSetupTOTP: function (e, t) {\n        return O(k(t), \"MFA_SETUP\");\n      }\n    },\n    services: {\n      signIn: function (n) {\n        return e(this, void 0, void 0, function () {\n          var e, i, o, s, a, c, d;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = n.authAttributes, i = void 0 === e ? {} : e, o = n.formValues, s = void 0 === o ? {} : o, a = r(r({}, i), s), c = a.username, d = a.password, [4, F.handleSignIn({\n                  username: c,\n                  password: d\n                })];\n\n              case 1:\n                return [2, t.sent()];\n            }\n          });\n        });\n      },\n      confirmSignIn: function (r) {\n        return e(this, void 0, void 0, function () {\n          var e, n, o, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = r.challengeName, n = r.user, o = r.formValues.confirmation_code, s = D(e) ? e : void 0, [4, F.handleConfirmSignIn({\n                  user: n,\n                  code: o,\n                  mfaType: s\n                })];\n\n              case 1:\n                return t.sent(), [4, i.currentAuthenticatedUser()];\n\n              case 2:\n                return [2, t.sent()];\n            }\n          });\n        });\n      },\n      forceNewPassword: function (o) {\n        return e(this, void 0, void 0, function () {\n          var e, s, a, c, d, u, l, g, f;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                e = o.user, s = o.formValues, a = s.password, s.confirm_password, c = s.phone_number, d = s.country_code, u = n(s, [\"password\", \"confirm_password\", \"phone_number\", \"country_code\"]), c && (l = \"\".concat(d).concat(c).replace(/[^A-Z0-9+]/gi, \"\"), u = r(r({}, u), {\n                  phone_number: l\n                })), t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 3,, 4]), [4, i.completeNewPassword(e, a, u)];\n\n              case 2:\n                return (g = t.sent()).challengeName ? [2, g] : [2, i.currentAuthenticatedUser()];\n\n              case 3:\n                return f = t.sent(), [2, Promise.reject(f)];\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      },\n      verifyTotpToken: function (r) {\n        return e(this, void 0, void 0, function () {\n          var e, n, o;\n          return t(this, function (t) {\n            return e = r.formValues, n = r.user, o = e.confirmation_code, [2, i.verifyTotpToken(n, o)];\n          });\n        });\n      },\n      federatedSignIn: function (r, n) {\n        return e(this, void 0, void 0, function () {\n          var e;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = n.data.provider, [4, i.federatedSignIn({\n                  provider: e\n                })];\n\n              case 1:\n                return [2, t.sent()];\n            }\n          });\n        });\n      },\n      checkVerifiedContact: function (r) {\n        return e(this, void 0, void 0, function () {\n          var e;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = r.user, [4, i.verifiedContact(e)];\n\n              case 1:\n                return [2, t.sent()];\n            }\n          });\n        });\n      },\n      verifyUser: function (r) {\n        return e(this, void 0, void 0, function () {\n          var e, n;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = r.formValues.unverifiedAttr, [4, i.verifyCurrentUserAttribute(e)];\n\n              case 1:\n                return n = t.sent(), r.attributeToVerify = e, [2, n];\n            }\n          });\n        });\n      },\n      confirmVerifyUser: function (r) {\n        return e(this, void 0, void 0, function () {\n          var e, n;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                return e = r.attributeToVerify, n = r.formValues.confirmation_code, [4, i.verifyCurrentUserAttributeSubmit(e, n)];\n\n              case 1:\n                return [2, t.sent()];\n            }\n          });\n        });\n      },\n      validateFields: function (r) {\n        return e(this, void 0, void 0, function () {\n          return t(this, function (e) {\n            return [2, d(r.formValues, r.touched, r.passwordSettings, [_.validateConfirmPassword])];\n          });\n        });\n      }\n    }\n  });\n}\n\nexport { M as signInActor };","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui/dist/esm/machines/authenticator/actors/signIn.js"],"names":["__awaiter","e","__generator","t","__assign","r","__rest","n","Auth","i","o","s","createMachine","a","sendUpdate","c","runValidators","d","clearAttributeToVerify","u","clearChallengeName","l","clearRequiredAttributes","g","clearError","f","clearFormValues","m","clearTouched","h","clearUnverifiedContactMethods","I","clearValidationError","p","handleInput","v","handleSubmit","A","handleBlur","U","parsePhoneNumber","S","setChallengeName","E","setConfirmResetPasswordIntent","b","setConfirmSignUpIntent","y","setRequiredAttributes","T","setCredentials","C","setFieldErrors","N","setRemoteError","w","setUnverifiedContactMethods","R","setUser","P","setUsernameAuthAttributes","V","defaultServices","_","F","k","O","D","includes","M","services","initial","id","predictableActionArguments","states","init","always","target","cond","signIn","exit","edit","entry","on","SUBMIT","actions","CHANGE","FEDERATED_SIGN_IN","federatedSignIn","tags","invoke","src","onError","submit","onDone","verifying","resolved","rejected","autoSignIn","pending","AUTO_SIGN_IN","AUTO_SIGN_IN_FAILURE","confirmSignIn","SIGN_IN","forceNewPassword","type","validation","valid","invalid","BLUR","idle","validate","setupTOTP","verifyUser","SKIP","confirmVerifyUser","data","user","intent","redirectIntent","authAttributes","guards","shouldAutoSignIn","shouldAutoSubmit","shouldConfirmSignIn","shouldForceChangePassword","shouldRedirectToConfirmResetPassword","code","shouldRedirectToConfirmSignUp","shouldRequestVerification","unverified","verified","shouldSetupTOTP","label","formValues","username","password","handleSignIn","sent","challengeName","confirmation_code","handleConfirmSignIn","mfaType","currentAuthenticatedUser","confirm_password","phone_number","country_code","concat","replace","trys","push","completeNewPassword","Promise","reject","verifyTotpToken","provider","checkVerifiedContact","verifiedContact","unverifiedAttr","verifyCurrentUserAttribute","attributeToVerify","verifyCurrentUserAttributeSubmit","validateFields","touched","passwordSettings","validateConfirmPassword","signInActor"],"mappings":"AAAA,SAAOA,SAAS,IAAIC,CAApB,EAAsBC,WAAW,IAAIC,CAArC,EAAuCC,QAAQ,IAAIC,CAAnD,EAAqDC,MAAM,IAAIC,CAA/D,QAAqE,OAArE;AAA6E,SAAOC,IAAI,IAAIC,CAAf,QAAqB,aAArB;AAAmC,OAAOC,CAAP,MAAa,YAAb;AAA0B,OAAOC,CAAP,MAAa,gBAAb;AAA8B,SAAOC,aAAa,IAAIC,CAAxB,EAA0BC,UAAU,IAAIC,CAAxC,QAA8C,QAA9C;AAAuD,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8BAA9B;AAA6D,SAAOC,sBAAsB,IAAIC,CAAjC,EAAmCC,kBAAkB,IAAIC,CAAzD,EAA2DC,uBAAuB,IAAIC,CAAtF,EAAwFC,UAAU,IAAIC,CAAtG,EAAwGC,eAAe,IAAIC,CAA3H,EAA6HC,YAAY,IAAIC,CAA7I,EAA+IC,6BAA6B,IAAIC,CAAhL,EAAkLC,oBAAoB,IAAIC,CAA1M,EAA4MC,WAAW,IAAIC,CAA3N,EAA6NC,YAAY,IAAIC,CAA7O,EAA+OC,UAAU,IAAIC,CAA7P,EAA+PC,gBAAgB,IAAIC,CAAnR,EAAqRC,gBAAgB,IAAIC,CAAzS,EAA2SC,6BAA6B,IAAIC,CAA5U,EAA8UC,sBAAsB,IAAIC,CAAxW,EAA0WC,qBAAqB,IAAIC,CAAnY,EAAqYC,cAAc,IAAIC,CAAvZ,EAAyZC,cAAc,IAAIC,CAA3a,EAA6aC,cAAc,IAAIC,CAA/b,EAAicC,2BAA2B,IAAIC,CAAhe,EAAkeC,OAAO,IAAIC,CAA7e,EAA+eC,yBAAyB,IAAIC,CAA5gB,QAAkhB,eAAlhB;AAAkiB,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,uBAAhC;;AAAwD,IAAIC,CAAC,GAAC,CAAC,SAAD,EAAW,oBAAX,CAAN;AAAA,IAAuCC,CAAC,GAAC,UAAShE,CAAT,EAAW;AAAC,SAAOS,CAAC,CAACT,CAAD,EAAG,oBAAH,CAAR;AAAiC,CAAtF;AAAA,IAAuFiE,CAAC,GAAC,UAASjE,CAAT,EAAWE,CAAX,EAAa;AAAC,SAAOF,CAAC,KAAGE,CAAX;AAAa,CAApH;AAAA,IAAqHgE,CAAC,GAAC,UAASlE,CAAT,EAAW;AAAC,SAAO+D,CAAC,CAACI,QAAF,CAAWnE,CAAX,CAAP;AAAqB,CAAxJ;;AAAyJ,SAASoE,CAAT,CAAW3D,CAAX,EAAa;AAAC,MAAIsD,CAAC,GAACtD,CAAC,CAAC4D,QAAR;AAAiB,SAAOzD,CAAC,CAAC;AAAC0D,IAAAA,OAAO,EAAC,MAAT;AAAgBC,IAAAA,EAAE,EAAC,aAAnB;AAAiCC,IAAAA,0BAA0B,EAAC,CAAC,CAA7D;AAA+DC,IAAAA,MAAM,EAAC;AAACC,MAAAA,IAAI,EAAC;AAACC,QAAAA,MAAM,EAAC,CAAC;AAACC,UAAAA,MAAM,EAAC,mBAAR;AAA4BC,UAAAA,IAAI,EAAC;AAAjC,SAAD,EAAsD;AAACD,UAAAA,MAAM,EAAC,YAAR;AAAqBC,UAAAA,IAAI,EAAC;AAA1B,SAAtD,EAAoG;AAACD,UAAAA,MAAM,EAAC;AAAR,SAApG;AAAR,OAAN;AAAsIE,MAAAA,MAAM,EAAC;AAACR,QAAAA,OAAO,EAAC,MAAT;AAAgBS,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,cAAnB,CAArB;AAAwDN,QAAAA,MAAM,EAAC;AAACO,UAAAA,IAAI,EAAC;AAACC,YAAAA,KAAK,EAAC,YAAP;AAAoBC,YAAAA,EAAE,EAAC;AAACC,cAAAA,MAAM,EAAC;AAACC,gBAAAA,OAAO,EAAC,cAAT;AAAwBR,gBAAAA,MAAM,EAAC;AAA/B,eAAR;AAAiDS,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC;AAAT,eAAxD;AAAgFE,cAAAA,iBAAiB,EAAC;AAAlG;AAAvB,WAAN;AAAmJC,UAAAA,eAAe,EAAC;AAACC,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,iBAAL;AAAuBC,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC;AAAT;AAA/B;AAA3D,WAAnK;AAA0RQ,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,kBAAD,EAAoB,YAApB,EAAiC,YAAjC,CAAxB;AAAuEQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,QAAL;AAAcG,cAAAA,MAAM,EAAC,CAAC;AAAChB,gBAAAA,IAAI,EAAC,iBAAN;AAAwBO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAAhC;AAA+DR,gBAAAA,MAAM,EAAC;AAAtE,eAAD,EAAiG;AAACC,gBAAAA,IAAI,EAAC,qBAAN;AAA4BO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAApC;AAAmER,gBAAAA,MAAM,EAAC;AAA1E,eAAjG,EAAyM;AAACC,gBAAAA,IAAI,EAAC,2BAAN;AAAkCO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,EAA8B,uBAA9B,CAA1C;AAAiGR,gBAAAA,MAAM,EAAC;AAAxG,eAAzM,EAAkV;AAACQ,gBAAAA,OAAO,EAAC,SAAT;AAAmBR,gBAAAA,MAAM,EAAC;AAA1B,eAAlV,CAArB;AAA+Ye,cAAAA,OAAO,EAAC,CAAC;AAACd,gBAAAA,IAAI,EAAC,+BAAN;AAAsCO,gBAAAA,OAAO,EAAC,CAAC,gBAAD,EAAkB,wBAAlB,CAA9C;AAA0FR,gBAAAA,MAAM,EAAC;AAAjG,eAAD,EAA8G;AAACC,gBAAAA,IAAI,EAAC,sCAAN;AAA6CO,gBAAAA,OAAO,EAAC,CAAC,2BAAD,EAA6B,+BAA7B,CAArD;AAAmHR,gBAAAA,MAAM,EAAC;AAA1H,eAA9G,EAAoP;AAACQ,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC,eAApP;AAAvZ;AAA9E,WAAjS;AAAsiCkB,UAAAA,SAAS,EAAC;AAACN,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,sBAAL;AAA4BG,cAAAA,MAAM,EAAC,CAAC;AAAChB,gBAAAA,IAAI,EAAC,2BAAN;AAAkCD,gBAAAA,MAAM,EAAC,yBAAzC;AAAmEQ,gBAAAA,OAAO,EAAC;AAA3E,eAAD,EAA2G;AAACR,gBAAAA,MAAM,EAAC;AAAR,eAA3G,CAAnC;AAAmKe,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAA3K;AAA3D,WAAhjC;AAAi0CmB,UAAAA,QAAQ,EAAC;AAACpB,YAAAA,MAAM,EAAC;AAAR,WAA10C;AAA22CqB,UAAAA,QAAQ,EAAC;AAACrB,YAAAA,MAAM,EAAC;AAAR;AAAp3C;AAA/D,OAA7I;AAAmmDsB,MAAAA,UAAU,EAAC;AAAC3B,QAAAA,OAAO,EAAC,SAAT;AAAmBG,QAAAA,MAAM,EAAC;AAACyB,UAAAA,OAAO,EAAC;AAACV,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDC,YAAAA,EAAE,EAAC;AAACiB,cAAAA,YAAY,EAAC,CAAC;AAACtB,gBAAAA,IAAI,EAAC,iBAAN;AAAwBO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAAhC;AAA+DR,gBAAAA,MAAM,EAAC;AAAtE,eAAD,EAAiG;AAACC,gBAAAA,IAAI,EAAC,qBAAN;AAA4BO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAApC;AAAmER,gBAAAA,MAAM,EAAC;AAA1E,eAAjG,EAAyM;AAACC,gBAAAA,IAAI,EAAC,2BAAN;AAAkCO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,EAA8B,uBAA9B,CAA1C;AAAiGR,gBAAAA,MAAM,EAAC;AAAxG,eAAzM,EAAkV;AAACQ,gBAAAA,OAAO,EAAC,SAAT;AAAmBR,gBAAAA,MAAM,EAAC;AAA1B,eAAlV,CAAd;AAAoZwB,cAAAA,oBAAoB,EAAC;AAAChB,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAAza;AAAvD,WAAT;AAAuhBgB,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,QAAL;AAAcG,cAAAA,MAAM,EAAC,CAAC;AAAChB,gBAAAA,IAAI,EAAC,iBAAN;AAAwBO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAAhC;AAA+DR,gBAAAA,MAAM,EAAC;AAAtE,eAAD,EAAiG;AAACC,gBAAAA,IAAI,EAAC,qBAAN;AAA4BO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAApC;AAAmER,gBAAAA,MAAM,EAAC;AAA1E,eAAjG,EAAyM;AAACC,gBAAAA,IAAI,EAAC,2BAAN;AAAkCO,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,EAA8B,uBAA9B,CAA1C;AAAiGR,gBAAAA,MAAM,EAAC;AAAxG,eAAzM,EAAkV;AAACQ,gBAAAA,OAAO,EAAC,SAAT;AAAmBR,gBAAAA,MAAM,EAAC;AAA1B,eAAlV,CAArB;AAA2Ze,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAAna;AAA3D,WAA9hB;AAAsjCmB,UAAAA,QAAQ,EAAC;AAACpB,YAAAA,MAAM,EAAC;AAAR,WAA/jC;AAAgmCqB,UAAAA,QAAQ,EAAC;AAACrB,YAAAA,MAAM,EAAC;AAAR;AAAzmC;AAA1B,OAA9mD;AAAoxF0B,MAAAA,aAAa,EAAC;AAAC/B,QAAAA,OAAO,EAAC,MAAT;AAAgBS,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,YAAnB,EAAgC,cAAhC,CAArB;AAAqEN,QAAAA,MAAM,EAAC;AAACO,UAAAA,IAAI,EAAC;AAACC,YAAAA,KAAK,EAAC,YAAP;AAAoBC,YAAAA,EAAE,EAAC;AAACC,cAAAA,MAAM,EAAC;AAACC,gBAAAA,OAAO,EAAC,cAAT;AAAwBR,gBAAAA,MAAM,EAAC;AAA/B,eAAR;AAAiD0B,cAAAA,OAAO,EAAC,qBAAzD;AAA+EjB,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC;AAAT;AAAtF;AAAvB,WAAN;AAA6IQ,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,eAAL;AAAqBG,cAAAA,MAAM,EAAC;AAACjB,gBAAAA,MAAM,EAAC,uBAAR;AAAgCQ,gBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,oBAAX,EAAgC,yBAAhC;AAAxC,eAA5B;AAAgIO,cAAAA,OAAO,EAAC;AAACf,gBAAAA,MAAM,EAAC,MAAR;AAAeQ,gBAAAA,OAAO,EAAC;AAAvB;AAAxI;AAA3D;AAApJ;AAA5E,OAAlyF;AAAkvGmB,MAAAA,gBAAgB,EAAC;AAACC,QAAAA,IAAI,EAAC,UAAN;AAAiBzB,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,YAAnB,EAAgC,cAAhC,CAAtB;AAAsEN,QAAAA,MAAM,EAAC;AAACgC,UAAAA,UAAU,EAAC;AAACnC,YAAAA,OAAO,EAAC,SAAT;AAAmBG,YAAAA,MAAM,EAAC;AAACyB,cAAAA,OAAO,EAAC;AAACT,gBAAAA,MAAM,EAAC;AAACC,kBAAAA,GAAG,EAAC,gBAAL;AAAsBG,kBAAAA,MAAM,EAAC;AAACjB,oBAAAA,MAAM,EAAC,OAAR;AAAgBQ,oBAAAA,OAAO,EAAC;AAAxB,mBAA7B;AAA6EO,kBAAAA,OAAO,EAAC;AAACf,oBAAAA,MAAM,EAAC,SAAR;AAAkBQ,oBAAAA,OAAO,EAAC;AAA1B;AAArF;AAAR,eAAT;AAAoJsB,cAAAA,KAAK,EAAC;AAACzB,gBAAAA,KAAK,EAAC;AAAP,eAA1J;AAA+K0B,cAAAA,OAAO,EAAC;AAAC1B,gBAAAA,KAAK,EAAC;AAAP;AAAvL,aAA1B;AAAuOC,YAAAA,EAAE,EAAC;AAACoB,cAAAA,OAAO,EAAC,qBAAT;AAA+BjB,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC,aAAT;AAAuBR,gBAAAA,MAAM,EAAC;AAA9B,eAAtC;AAAgFgC,cAAAA,IAAI,EAAC;AAACxB,gBAAAA,OAAO,EAAC,YAAT;AAAsBR,gBAAAA,MAAM,EAAC;AAA7B;AAArF;AAA1O,WAAZ;AAAsXgB,UAAAA,MAAM,EAAC;AAACtB,YAAAA,OAAO,EAAC,MAAT;AAAgBW,YAAAA,KAAK,EAAC,YAAtB;AAAmCR,YAAAA,MAAM,EAAC;AAACoC,cAAAA,IAAI,EAAC;AAAC5B,gBAAAA,KAAK,EAAC,YAAP;AAAoBC,gBAAAA,EAAE,EAAC;AAACC,kBAAAA,MAAM,EAAC;AAACC,oBAAAA,OAAO,EAAC,cAAT;AAAwBR,oBAAAA,MAAM,EAAC;AAA/B;AAAR;AAAvB,eAAN;AAAkFkC,cAAAA,QAAQ,EAAC;AAAC7B,gBAAAA,KAAK,EAAC,YAAP;AAAoBQ,gBAAAA,MAAM,EAAC;AAACC,kBAAAA,GAAG,EAAC,gBAAL;AAAsBG,kBAAAA,MAAM,EAAC;AAACjB,oBAAAA,MAAM,EAAC,SAAR;AAAkBQ,oBAAAA,OAAO,EAAC;AAA1B,mBAA7B;AAA+EO,kBAAAA,OAAO,EAAC;AAACf,oBAAAA,MAAM,EAAC,MAAR;AAAeQ,oBAAAA,OAAO,EAAC;AAAvB;AAAvF;AAA3B,eAA3F;AAAwPc,cAAAA,OAAO,EAAC;AAACV,gBAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,gBAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,gBAAAA,MAAM,EAAC;AAACC,kBAAAA,GAAG,EAAC,kBAAL;AAAwBG,kBAAAA,MAAM,EAAC,CAAC;AAAChB,oBAAAA,IAAI,EAAC,qBAAN;AAA4BO,oBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAApC;AAAmER,oBAAAA,MAAM,EAAC;AAA1E,mBAAD,EAAyG;AAACC,oBAAAA,IAAI,EAAC,iBAAN;AAAwBO,oBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,kBAAX,CAAhC;AAA+DR,oBAAAA,MAAM,EAAC;AAAtE,mBAAzG,EAAyM;AAACA,oBAAAA,MAAM,EAAC,UAAR;AAAmBQ,oBAAAA,OAAO,EAAC,CAAC,SAAD,EAAW,gBAAX;AAA3B,mBAAzM,CAA/B;AAAkSO,kBAAAA,OAAO,EAAC;AAACf,oBAAAA,MAAM,EAAC,MAAR;AAAeQ,oBAAAA,OAAO,EAAC;AAAvB;AAA1S;AAA3D,eAAhQ;AAAgpBW,cAAAA,QAAQ,EAAC;AAACS,gBAAAA,IAAI,EAAC,OAAN;AAAc7B,gBAAAA,MAAM,EAAC;AAArB;AAAzpB;AAA1C;AAA7X;AAA7E,OAAnwG;AAAk8IoC,MAAAA,SAAS,EAAC;AAACzC,QAAAA,OAAO,EAAC,MAAT;AAAgBS,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,YAAnB,EAAgC,cAAhC,CAArB;AAAqEN,QAAAA,MAAM,EAAC;AAACO,UAAAA,IAAI,EAAC;AAACC,YAAAA,KAAK,EAAC,YAAP;AAAoBC,YAAAA,EAAE,EAAC;AAACC,cAAAA,MAAM,EAAC;AAACC,gBAAAA,OAAO,EAAC,cAAT;AAAwBR,gBAAAA,MAAM,EAAC;AAA/B,eAAR;AAAiD0B,cAAAA,OAAO,EAAC,qBAAzD;AAA+EjB,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC;AAAT;AAAtF;AAAvB,WAAN;AAA6IQ,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,CAAC,YAAD,EAAc,YAAd,CAAxB;AAAoDQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,iBAAL;AAAuBG,cAAAA,MAAM,EAAC;AAACT,gBAAAA,OAAO,EAAC,CAAC,oBAAD,EAAsB,yBAAtB,CAAT;AAA0DR,gBAAAA,MAAM,EAAC;AAAjE,eAA9B;AAAwHe,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAAhI;AAA3D;AAApJ;AAA5E,OAA58I;AAAo5JoC,MAAAA,UAAU,EAAC;AAAC1C,QAAAA,OAAO,EAAC,MAAT;AAAgBS,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,YAAnB,EAAgC,cAAhC,CAArB;AAAqEN,QAAAA,MAAM,EAAC;AAACO,UAAAA,IAAI,EAAC;AAACC,YAAAA,KAAK,EAAC,YAAP;AAAoBC,YAAAA,EAAE,EAAC;AAACC,cAAAA,MAAM,EAAC;AAACC,gBAAAA,OAAO,EAAC,cAAT;AAAwBR,gBAAAA,MAAM,EAAC;AAA/B,eAAR;AAAiDqC,cAAAA,IAAI,EAAC,uBAAtD;AAA8E5B,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC;AAAT;AAArF;AAAvB,WAAN;AAA4IQ,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,YAAxB;AAAqCQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,YAAL;AAAkBG,cAAAA,MAAM,EAAC;AAACjB,gBAAAA,MAAM,EAAC;AAAR,eAAzB;AAAmEe,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAA3E;AAA5C;AAAnJ;AAA5E,OAA/5J;AAAkyKsC,MAAAA,iBAAiB,EAAC;AAAC5C,QAAAA,OAAO,EAAC,MAAT;AAAgBS,QAAAA,IAAI,EAAC,CAAC,iBAAD,EAAmB,YAAnB,EAAgC,+BAAhC,EAAgE,wBAAhE,EAAyF,cAAzF,CAArB;AAA8HN,QAAAA,MAAM,EAAC;AAACO,UAAAA,IAAI,EAAC;AAACC,YAAAA,KAAK,EAAC,YAAP;AAAoBC,YAAAA,EAAE,EAAC;AAACC,cAAAA,MAAM,EAAC;AAACC,gBAAAA,OAAO,EAAC,cAAT;AAAwBR,gBAAAA,MAAM,EAAC;AAA/B,eAAR;AAAiDqC,cAAAA,IAAI,EAAC,uBAAtD;AAA8E5B,cAAAA,MAAM,EAAC;AAACD,gBAAAA,OAAO,EAAC;AAAT;AAArF;AAAvB,WAAN;AAA4IQ,UAAAA,MAAM,EAAC;AAACJ,YAAAA,IAAI,EAAC,CAAC,SAAD,CAAN;AAAkBP,YAAAA,KAAK,EAAC,YAAxB;AAAqCQ,YAAAA,MAAM,EAAC;AAACC,cAAAA,GAAG,EAAC,mBAAL;AAAyBG,cAAAA,MAAM,EAAC;AAACjB,gBAAAA,MAAM,EAAC;AAAR,eAAhC;AAAiEe,cAAAA,OAAO,EAAC;AAACP,gBAAAA,OAAO,EAAC,gBAAT;AAA0BR,gBAAAA,MAAM,EAAC;AAAjC;AAAzE;AAA5C;AAAnJ;AAArI,OAApzK;AAA8uLmB,MAAAA,QAAQ,EAAC;AAACS,QAAAA,IAAI,EAAC,OAAN;AAAcW,QAAAA,IAAI,EAAC,UAASnH,CAAT,EAAW;AAAC,iBAAM;AAACoH,YAAAA,IAAI,EAACpH,CAAC,CAACoH;AAAR,WAAN;AAAoB;AAAnD,OAAvvL;AAA4yLpB,MAAAA,QAAQ,EAAC;AAACQ,QAAAA,IAAI,EAAC,OAAN;AAAcW,QAAAA,IAAI,EAAC,UAASnH,CAAT,EAAWE,CAAX,EAAa;AAAC,iBAAM;AAACmH,YAAAA,MAAM,EAACrH,CAAC,CAACsH,cAAV;AAAyBC,YAAAA,cAAc,EAACvH,CAAC,CAACuH;AAA1C,WAAN;AAAgE;AAAjG;AAArzL;AAAtE,GAAD,EAAi+L;AAACnC,IAAAA,OAAO,EAAC;AAACnE,MAAAA,sBAAsB,EAACC,CAAxB;AAA0BC,MAAAA,kBAAkB,EAACC,CAA7C;AAA+CC,MAAAA,uBAAuB,EAACC,CAAvE;AAAyEC,MAAAA,UAAU,EAACC,CAApF;AAAsFC,MAAAA,eAAe,EAACC,CAAtG;AAAwGC,MAAAA,YAAY,EAACC,CAArH;AAAuHC,MAAAA,6BAA6B,EAACC,CAArJ;AAAuJC,MAAAA,oBAAoB,EAACC,CAA5K;AAA8KC,MAAAA,WAAW,EAACC,CAA1L;AAA4LC,MAAAA,YAAY,EAACC,CAAzM;AAA2MC,MAAAA,UAAU,EAACC,CAAtN;AAAwNC,MAAAA,gBAAgB,EAACC,CAAzO;AAA2OC,MAAAA,gBAAgB,EAACC,CAA5P;AAA8PC,MAAAA,6BAA6B,EAACC,CAA5R;AAA8RC,MAAAA,sBAAsB,EAACC,CAArT;AAAuTC,MAAAA,qBAAqB,EAACC,CAA7U;AAA+UC,MAAAA,cAAc,EAACC,CAA9V;AAAgWC,MAAAA,cAAc,EAACC,CAA/W;AAAiXC,MAAAA,cAAc,EAACC,CAAhY;AAAkYC,MAAAA,2BAA2B,EAACC,CAA9Z;AAAgaC,MAAAA,OAAO,EAACC,CAAxa;AAA0aC,MAAAA,yBAAyB,EAACC,CAApc;AAAsc/C,MAAAA,UAAU,EAACC,CAAC;AAAld,KAAT;AAA+d0G,IAAAA,MAAM,EAAC;AAACC,MAAAA,gBAAgB,EAAC,UAASzH,CAAT,EAAW;AAAC,eAAM,kBAAgB,QAAMA,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACqH,MAAjC,CAAN;AAA+C,OAA7E;AAA8EK,MAAAA,gBAAgB,EAAC,UAAS1H,CAAT,EAAW;AAAC,eAAM,wBAAsB,QAAMA,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACqH,MAAvC,CAAN;AAAqD,OAAhK;AAAiKM,MAAAA,mBAAmB,EAAC,UAAS3H,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAOgE,CAAC,CAACF,CAAC,CAAC9D,CAAD,CAAF,CAAR;AAAe,OAAlN;AAAmN0H,MAAAA,yBAAyB,EAAC,UAAS5H,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAO+D,CAAC,CAACD,CAAC,CAAC9D,CAAD,CAAF,EAAM,uBAAN,CAAR;AAAuC,OAAlS;AAAmS2H,MAAAA,oCAAoC,EAAC,UAAS7H,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAM,qCAAmCA,CAAC,CAACiH,IAAF,CAAOW,IAAhD;AAAqD,OAA3Y;AAA4YC,MAAAA,6BAA6B,EAAC,UAAS/H,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAM,gCAA8BA,CAAC,CAACiH,IAAF,CAAOW,IAA3C;AAAgD,OAAxe;AAAyeE,MAAAA,yBAAyB,EAAC,UAAShI,CAAT,EAAWE,CAAX,EAAa;AAAC,YAAIE,CAAC,GAACF,CAAC,CAACiH,IAAR;AAAA,YAAa7G,CAAC,GAACF,CAAC,CAAC6H,UAAjB;AAAA,YAA4BzH,CAAC,GAACJ,CAAC,CAAC8H,QAAhC;AAAyC,eAAOxH,CAAC,CAACF,CAAD,CAAD,IAAM,CAACE,CAAC,CAACJ,CAAD,CAAf;AAAmB,OAA7kB;AAA8kB6H,MAAAA,eAAe,EAAC,UAASnI,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAO+D,CAAC,CAACD,CAAC,CAAC9D,CAAD,CAAF,EAAM,WAAN,CAAR;AAA2B;AAAvoB,KAAte;AAA+mCmE,IAAAA,QAAQ,EAAC;AAACS,MAAAA,MAAM,EAAC,UAASxE,CAAT,EAAW;AAAC,eAAON,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMQ,CAAN,EAAQC,CAAR,EAAUC,CAAV,EAAYE,CAAZ,EAAcE,CAAd,EAAgBE,CAAhB;AAAkB,iBAAOd,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACM,CAAC,CAACiH,cAAJ,EAAmB/G,CAAC,GAAC,KAAK,CAAL,KAASR,CAAT,GAAW,EAAX,GAAcA,CAAnC,EAAqCS,CAAC,GAACH,CAAC,CAAC+H,UAAzC,EAAoD3H,CAAC,GAAC,KAAK,CAAL,KAASD,CAAT,GAAW,EAAX,GAAcA,CAApE,EAAsEG,CAAC,GAACR,CAAC,CAACA,CAAC,CAAC,EAAD,EAAII,CAAJ,CAAF,EAASE,CAAT,CAAzE,EAAqFI,CAAC,GAACF,CAAC,CAAC0H,QAAzF,EAAkGtH,CAAC,GAACJ,CAAC,CAAC2H,QAAtG,EAA+G,CAAC,CAAD,EAAGxE,CAAC,CAACyE,YAAF,CAAe;AAACF,kBAAAA,QAAQ,EAACxH,CAAV;AAAYyH,kBAAAA,QAAQ,EAACvH;AAArB,iBAAf,CAAH,CAAtH;;AAAkK,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,EAAGd,CAAC,CAACuI,IAAF,EAAH,CAAN;AAAhM;AAAoN,WAAvO,CAAR;AAAkP,SAApS,CAAR;AAA+S,OAAnU;AAAoUpC,MAAAA,aAAa,EAAC,UAASjG,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMM,CAAN,EAAQG,CAAR,EAAUC,CAAV;AAAY,iBAAOR,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACI,CAAC,CAACsI,aAAJ,EAAkBpI,CAAC,GAACF,CAAC,CAACgH,IAAtB,EAA2B3G,CAAC,GAACL,CAAC,CAACiI,UAAF,CAAaM,iBAA1C,EAA4DjI,CAAC,GAACwD,CAAC,CAAClE,CAAD,CAAD,GAAKA,CAAL,GAAO,KAAK,CAA1E,EAA4E,CAAC,CAAD,EAAG+D,CAAC,CAAC6E,mBAAF,CAAsB;AAACxB,kBAAAA,IAAI,EAAC9G,CAAN;AAAQwH,kBAAAA,IAAI,EAACrH,CAAb;AAAeoI,kBAAAA,OAAO,EAACnI;AAAvB,iBAAtB,CAAH,CAAnF;;AAAwI,mBAAK,CAAL;AAAO,uBAAOR,CAAC,CAACuI,IAAF,IAAS,CAAC,CAAD,EAAGjI,CAAC,CAACsI,wBAAF,EAAH,CAAhB;;AAAiD,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,EAAG5I,CAAC,CAACuI,IAAF,EAAH,CAAN;AAA9N;AAAkP,WAArQ,CAAR;AAAgR,SAA5T,CAAR;AAAuU,OAArqB;AAAsqBlC,MAAAA,gBAAgB,EAAC,UAAS9F,CAAT,EAAW;AAAC,eAAOT,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMU,CAAN,EAAQE,CAAR,EAAUE,CAAV,EAAYE,CAAZ,EAAcE,CAAd,EAAgBE,CAAhB,EAAkBE,CAAlB,EAAoBE,CAApB;AAAsB,iBAAOtB,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAOpI,gBAAAA,CAAC,GAACS,CAAC,CAAC2G,IAAJ,EAAS1G,CAAC,GAACD,CAAC,CAAC4H,UAAb,EAAwBzH,CAAC,GAACF,CAAC,CAAC6H,QAA5B,EAAqC7H,CAAC,CAACqI,gBAAvC,EAAwDjI,CAAC,GAACJ,CAAC,CAACsI,YAA5D,EAAyEhI,CAAC,GAACN,CAAC,CAACuI,YAA7E,EAA0F/H,CAAC,GAACZ,CAAC,CAACI,CAAD,EAAG,CAAC,UAAD,EAAY,kBAAZ,EAA+B,cAA/B,EAA8C,cAA9C,CAAH,CAA7F,EAA+JI,CAAC,KAAGM,CAAC,GAAC,GAAG8H,MAAH,CAAUlI,CAAV,EAAakI,MAAb,CAAoBpI,CAApB,EAAuBqI,OAAvB,CAA+B,cAA/B,EAA8C,EAA9C,CAAF,EAAoDjI,CAAC,GAACd,CAAC,CAACA,CAAC,CAAC,EAAD,EAAIc,CAAJ,CAAF,EAAS;AAAC8H,kBAAAA,YAAY,EAAC5H;AAAd,iBAAT,CAA1D,CAAhK,EAAsPlB,CAAC,CAACkI,KAAF,GAAQ,CAA9P;;AAAgQ,mBAAK,CAAL;AAAO,uBAAOlI,CAAC,CAACkJ,IAAF,CAAOC,IAAP,CAAY,CAAC,CAAD,EAAG,CAAH,GAAM,CAAN,CAAZ,GAAsB,CAAC,CAAD,EAAG7I,CAAC,CAAC8I,mBAAF,CAAsBtJ,CAAtB,EAAwBY,CAAxB,EAA0BM,CAA1B,CAAH,CAA7B;;AAA8D,mBAAK,CAAL;AAAO,uBAAM,CAACI,CAAC,GAACpB,CAAC,CAACuI,IAAF,EAAH,EAAaC,aAAb,GAA2B,CAAC,CAAD,EAAGpH,CAAH,CAA3B,GAAiC,CAAC,CAAD,EAAGd,CAAC,CAACsI,wBAAF,EAAH,CAAvC;;AAAwE,mBAAK,CAAL;AAAO,uBAAOtH,CAAC,GAACtB,CAAC,CAACuI,IAAF,EAAF,EAAW,CAAC,CAAD,EAAGc,OAAO,CAACC,MAAR,CAAehI,CAAf,CAAH,CAAlB;;AAAwC,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,CAAN;AAAje;AAA4e,WAA/f,CAAR;AAA0gB,SAAhkB,CAAR;AAA2kB,OAA9wC;AAA+wCiI,MAAAA,eAAe,EAAC,UAASrJ,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMM,CAAN,EAAQG,CAAR;AAAU,iBAAOP,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,mBAAOF,CAAC,GAACI,CAAC,CAACiI,UAAJ,EAAe/H,CAAC,GAACF,CAAC,CAACgH,IAAnB,EAAwB3G,CAAC,GAACT,CAAC,CAAC2I,iBAA5B,EAA8C,CAAC,CAAD,EAAGnI,CAAC,CAACiJ,eAAF,CAAkBnJ,CAAlB,EAAoBG,CAApB,CAAH,CAArD;AAAgF,WAAnG,CAAR;AAA8G,SAAxJ,CAAR;AAAmK,OAA98C;AAA+8C8E,MAAAA,eAAe,EAAC,UAASnF,CAAT,EAAWE,CAAX,EAAa;AAAC,eAAON,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ;AAAM,iBAAOE,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACM,CAAC,CAAC6G,IAAF,CAAOuC,QAAT,EAAkB,CAAC,CAAD,EAAGlJ,CAAC,CAAC+E,eAAF,CAAkB;AAACmE,kBAAAA,QAAQ,EAAC1J;AAAV,iBAAlB,CAAH,CAAzB;;AAA6D,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,EAAGE,CAAC,CAACuI,IAAF,EAAH,CAAN;AAA3F;AAA+G,WAAlI,CAAR;AAA6I,SAAnL,CAAR;AAA8L,OAA3qD;AAA4qDkB,MAAAA,oBAAoB,EAAC,UAASvJ,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ;AAAM,iBAAOE,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACI,CAAC,CAACgH,IAAJ,EAAS,CAAC,CAAD,EAAG5G,CAAC,CAACoJ,eAAF,CAAkB5J,CAAlB,CAAH,CAAhB;;AAAyC,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,EAAGE,CAAC,CAACuI,IAAF,EAAH,CAAN;AAAvE;AAA2F,WAA9G,CAAR;AAAyH,SAA/J,CAAR;AAA0K,OAAv3D;AAAw3DzB,MAAAA,UAAU,EAAC,UAAS5G,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMM,CAAN;AAAQ,iBAAOJ,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACI,CAAC,CAACiI,UAAF,CAAawB,cAAf,EAA8B,CAAC,CAAD,EAAGrJ,CAAC,CAACsJ,0BAAF,CAA6B9J,CAA7B,CAAH,CAArC;;AAAyE,mBAAK,CAAL;AAAO,uBAAOM,CAAC,GAACJ,CAAC,CAACuI,IAAF,EAAF,EAAWrI,CAAC,CAAC2J,iBAAF,GAAoB/J,CAA/B,EAAiC,CAAC,CAAD,EAAGM,CAAH,CAAxC;AAAvG;AAAsJ,WAAzK,CAAR;AAAoL,SAA5N,CAAR;AAAuO,OAAtnE;AAAunE4G,MAAAA,iBAAiB,EAAC,UAAS9G,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,cAAIA,CAAJ,EAAMM,CAAN;AAAQ,iBAAOJ,CAAC,CAAC,IAAD,EAAO,UAASA,CAAT,EAAW;AAAC,oBAAOA,CAAC,CAACkI,KAAT;AAAgB,mBAAK,CAAL;AAAO,uBAAOpI,CAAC,GAACI,CAAC,CAAC2J,iBAAJ,EAAsBzJ,CAAC,GAACF,CAAC,CAACiI,UAAF,CAAaM,iBAArC,EAAuD,CAAC,CAAD,EAAGnI,CAAC,CAACwJ,gCAAF,CAAmChK,CAAnC,EAAqCM,CAArC,CAAH,CAA9D;;AAA0G,mBAAK,CAAL;AAAO,uBAAM,CAAC,CAAD,EAAGJ,CAAC,CAACuI,IAAF,EAAH,CAAN;AAAxI;AAA4J,WAA/K,CAAR;AAA0L,SAAlO,CAAR;AAA6O,OAAl4E;AAAm4EwB,MAAAA,cAAc,EAAC,UAAS7J,CAAT,EAAW;AAAC,eAAOJ,CAAC,CAAC,IAAD,EAAM,KAAK,CAAX,EAAa,KAAK,CAAlB,EAAqB,YAAU;AAAC,iBAAOE,CAAC,CAAC,IAAD,EAAO,UAASF,CAAT,EAAW;AAAC,mBAAM,CAAC,CAAD,EAAGgB,CAAC,CAACZ,CAAC,CAACiI,UAAH,EAAcjI,CAAC,CAAC8J,OAAhB,EAAwB9J,CAAC,CAAC+J,gBAA1B,EAA2C,CAACrG,CAAC,CAACsG,uBAAH,CAA3C,CAAJ,CAAN;AAAmF,WAAtG,CAAR;AAAiH,SAAjJ,CAAR;AAA4J;AAA1jF;AAAxnC,GAAj+L,CAAR;AAA+pT;;AAAA,SAAOhG,CAAC,IAAIiG,WAAZ","sourcesContent":["import{__awaiter as e,__generator as t,__assign as r,__rest as n}from\"tslib\";import{Auth as i}from\"aws-amplify\";import o from\"lodash/get\";import s from\"lodash/isEmpty\";import{createMachine as a,sendUpdate as c}from\"xstate\";import{runValidators as d}from\"../../../validators/index.js\";import{clearAttributeToVerify as u,clearChallengeName as l,clearRequiredAttributes as g,clearError as f,clearFormValues as m,clearTouched as h,clearUnverifiedContactMethods as I,clearValidationError as p,handleInput as v,handleSubmit as A,handleBlur as U,parsePhoneNumber as S,setChallengeName as E,setConfirmResetPasswordIntent as b,setConfirmSignUpIntent as y,setRequiredAttributes as T,setCredentials as C,setFieldErrors as N,setRemoteError as w,setUnverifiedContactMethods as R,setUser as P,setUsernameAuthAttributes as V}from\"../actions.js\";import{defaultServices as _}from\"../defaultServices.js\";var F=[\"SMS_MFA\",\"SOFTWARE_TOKEN_MFA\"],k=function(e){return o(e,\"data.challengeName\")},O=function(e,t){return e===t},D=function(e){return F.includes(e)};function M(o){var F=o.services;return a({initial:\"init\",id:\"signInActor\",predictableActionArguments:!0,states:{init:{always:[{target:\"autoSignIn.submit\",cond:\"shouldAutoSubmit\"},{target:\"autoSignIn\",cond:\"shouldAutoSignIn\"},{target:\"signIn\"}]},signIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},CHANGE:{actions:\"handleInput\"},FEDERATED_SIGN_IN:\"federatedSignIn\"}},federatedSignIn:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"federatedSignIn\",onError:{actions:\"setRemoteError\"}}},submit:{tags:[\"pending\"],entry:[\"parsePhoneNumber\",\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"verifying\"}],onError:[{cond:\"shouldRedirectToConfirmSignUp\",actions:[\"setCredentials\",\"setConfirmSignUpIntent\"],target:\"rejected\"},{cond:\"shouldRedirectToConfirmResetPassword\",actions:[\"setUsernameAuthAttributes\",\"setConfirmResetPasswordIntent\"],target:\"rejected\"},{actions:\"setRemoteError\",target:\"edit\"}]}},verifying:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"checkVerifiedContact\",onDone:[{cond:\"shouldRequestVerification\",target:\"#signInActor.verifyUser\",actions:\"setUnverifiedContactMethods\"},{target:\"resolved\"}],onError:{actions:\"setRemoteError\",target:\"edit\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},autoSignIn:{initial:\"pending\",states:{pending:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],on:{AUTO_SIGN_IN:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],AUTO_SIGN_IN_FAILURE:{actions:\"setRemoteError\",target:\"pending\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],onError:{actions:\"setRemoteError\",target:\"#signInActor.signIn\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},confirmSignIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"confirmSignIn\",onDone:{target:\"#signInActor.resolved\",actions:[\"setUser\",\"clearChallengeName\",\"clearRequiredAttributes\"]},onError:{target:\"edit\",actions:\"setRemoteError\"}}}}},forceNewPassword:{type:\"parallel\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{validation:{initial:\"pending\",states:{pending:{invoke:{src:\"validateFields\",onDone:{target:\"valid\",actions:\"clearValidationError\"},onError:{target:\"invalid\",actions:\"setFieldErrors\"}}},valid:{entry:\"sendUpdate\"},invalid:{entry:\"sendUpdate\"}},on:{SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\",target:\".pending\"},BLUR:{actions:\"handleBlur\",target:\".pending\"}}},submit:{initial:\"idle\",entry:\"clearError\",states:{idle:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"validate\"}}},validate:{entry:\"sendUpdate\",invoke:{src:\"validateFields\",onDone:{target:\"pending\",actions:\"clearValidationError\"},onError:{target:\"idle\",actions:\"setFieldErrors\"}}},pending:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"forceNewPassword\",onDone:[{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{target:\"resolved\",actions:[\"setUser\",\"setCredentials\"]}],onError:{target:\"idle\",actions:\"setRemoteError\"}}},resolved:{type:\"final\",always:\"#signInActor.resolved\"}}}}},setupTOTP:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"verifyTotpToken\",onDone:{actions:[\"clearChallengeName\",\"clearRequiredAttributes\"],target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},verifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"verifyUser\",onDone:{target:\"#signInActor.confirmVerifyUser\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},confirmVerifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearUnverifiedContactMethods\",\"clearAttributeToVerify\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"confirmVerifyUser\",onDone:{target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},resolved:{type:\"final\",data:function(e){return{user:e.user}}},rejected:{type:\"final\",data:function(e,t){return{intent:e.redirectIntent,authAttributes:e.authAttributes}}}}},{actions:{clearAttributeToVerify:u,clearChallengeName:l,clearRequiredAttributes:g,clearError:f,clearFormValues:m,clearTouched:h,clearUnverifiedContactMethods:I,clearValidationError:p,handleInput:v,handleSubmit:A,handleBlur:U,parsePhoneNumber:S,setChallengeName:E,setConfirmResetPasswordIntent:b,setConfirmSignUpIntent:y,setRequiredAttributes:T,setCredentials:C,setFieldErrors:N,setRemoteError:w,setUnverifiedContactMethods:R,setUser:P,setUsernameAuthAttributes:V,sendUpdate:c()},guards:{shouldAutoSignIn:function(e){return\"autoSignIn\"===(null==e?void 0:e.intent)},shouldAutoSubmit:function(e){return\"autoSignInSubmit\"===(null==e?void 0:e.intent)},shouldConfirmSignIn:function(e,t){return D(k(t))},shouldForceChangePassword:function(e,t){return O(k(t),\"NEW_PASSWORD_REQUIRED\")},shouldRedirectToConfirmResetPassword:function(e,t){return\"PasswordResetRequiredException\"===t.data.code},shouldRedirectToConfirmSignUp:function(e,t){return\"UserNotConfirmedException\"===t.data.code},shouldRequestVerification:function(e,t){var r=t.data,n=r.unverified,i=r.verified;return s(i)&&!s(n)},shouldSetupTOTP:function(e,t){return O(k(t),\"MFA_SETUP\")}},services:{signIn:function(n){return e(this,void 0,void 0,(function(){var e,i,o,s,a,c,d;return t(this,(function(t){switch(t.label){case 0:return e=n.authAttributes,i=void 0===e?{}:e,o=n.formValues,s=void 0===o?{}:o,a=r(r({},i),s),c=a.username,d=a.password,[4,F.handleSignIn({username:c,password:d})];case 1:return[2,t.sent()]}}))}))},confirmSignIn:function(r){return e(this,void 0,void 0,(function(){var e,n,o,s;return t(this,(function(t){switch(t.label){case 0:return e=r.challengeName,n=r.user,o=r.formValues.confirmation_code,s=D(e)?e:void 0,[4,F.handleConfirmSignIn({user:n,code:o,mfaType:s})];case 1:return t.sent(),[4,i.currentAuthenticatedUser()];case 2:return[2,t.sent()]}}))}))},forceNewPassword:function(o){return e(this,void 0,void 0,(function(){var e,s,a,c,d,u,l,g,f;return t(this,(function(t){switch(t.label){case 0:e=o.user,s=o.formValues,a=s.password,s.confirm_password,c=s.phone_number,d=s.country_code,u=n(s,[\"password\",\"confirm_password\",\"phone_number\",\"country_code\"]),c&&(l=\"\".concat(d).concat(c).replace(/[^A-Z0-9+]/gi,\"\"),u=r(r({},u),{phone_number:l})),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,i.completeNewPassword(e,a,u)];case 2:return(g=t.sent()).challengeName?[2,g]:[2,i.currentAuthenticatedUser()];case 3:return f=t.sent(),[2,Promise.reject(f)];case 4:return[2]}}))}))},verifyTotpToken:function(r){return e(this,void 0,void 0,(function(){var e,n,o;return t(this,(function(t){return e=r.formValues,n=r.user,o=e.confirmation_code,[2,i.verifyTotpToken(n,o)]}))}))},federatedSignIn:function(r,n){return e(this,void 0,void 0,(function(){var e;return t(this,(function(t){switch(t.label){case 0:return e=n.data.provider,[4,i.federatedSignIn({provider:e})];case 1:return[2,t.sent()]}}))}))},checkVerifiedContact:function(r){return e(this,void 0,void 0,(function(){var e;return t(this,(function(t){switch(t.label){case 0:return e=r.user,[4,i.verifiedContact(e)];case 1:return[2,t.sent()]}}))}))},verifyUser:function(r){return e(this,void 0,void 0,(function(){var e,n;return t(this,(function(t){switch(t.label){case 0:return e=r.formValues.unverifiedAttr,[4,i.verifyCurrentUserAttribute(e)];case 1:return n=t.sent(),r.attributeToVerify=e,[2,n]}}))}))},confirmVerifyUser:function(r){return e(this,void 0,void 0,(function(){var e,n;return t(this,(function(t){switch(t.label){case 0:return e=r.attributeToVerify,n=r.formValues.confirmation_code,[4,i.verifyCurrentUserAttributeSubmit(e,n)];case 1:return[2,t.sent()]}}))}))},validateFields:function(r){return e(this,void 0,void 0,(function(){return t(this,(function(e){return[2,d(r.formValues,r.touched,r.passwordSettings,[_.validateConfirmPassword])]}))}))}}})}export{M as signInActor};\n"]},"metadata":{},"sourceType":"module"}