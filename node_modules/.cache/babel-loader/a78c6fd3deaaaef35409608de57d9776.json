{"ast":null,"code":"import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { raise as raise$1, send, start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send as send$1, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send$1(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = [];\n\n    if (!isInternal) {\n      nextStateNodes.forEach(function (targetNode) {\n        reentryNodes.push.apply(reentryNodes, __spreadArray([], __read(_this.getExternalReentryNodes(targetNode)), false));\n      });\n    }\n\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.getExternalReentryNodes = function (targetNode) {\n    var nodes = [];\n\n    var _a = __read(targetNode.order > this.order ? [targetNode, this] : [this, targetNode], 2),\n        marker = _a[0],\n        possibleAncestor = _a[1];\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn) || has(transition.entrySet, sn.parent) && !has(transition.entrySet, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n    var entryActions = Array.from(entryStates).map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions);\n    }).concat([doneEvents.map(raise)]);\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })), false), _this.machine.options.actions);\n    });\n    var actions = exitActions.concat([toActionObjects(transition.actions, this.machine.options.actions)]).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return action.type !== raise$1 && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n      });\n      return actions.concat([stopActions]);\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var block_1 = (e_7 = void 0, __values(block)), block_1_1 = block_1.next(); !block_1_1.done; block_1_1 = block_1.next()) {\n            var action = block_1_1.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (block_1_1 && !block_1_1.done && (_b = block_1.return)) _b.call(block_1);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _c = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _c[0],\n        updatedContext = _c[1];\n\n    var _d = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _d[0],\n        nonRaisedActions = _d[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };","map":{"version":3,"sources":["/home/dalienst/node_modules/xstate/es/StateNode.js"],"names":["__assign","__spreadArray","__read","__values","__rest","isFunction","mapValues","isArray","flatten","toArray","toStateValue","isString","getEventType","toSCXMLEvent","matchesState","path","evaluateGuard","mapContext","pathToStateValue","isBuiltInEvent","partition","updateHistoryValue","toStatePath","mapFilterValues","warn","toStatePaths","nestedPath","normalizeTarget","toGuard","toTransitionConfigArray","isMachine","createInvokeId","SpecialTargets","State","stateValuesEqual","raise","raise$1","send","start","start$1","stop","stop$1","invoke","update","nullEvent","done","toActionObjects","resolveActions","doneInvoke","error","toActionObject","toActivityDefinition","after","send$1","cancel","initEvent","IS_PRODUCTION","STATE_DELIMITER","getAllStateNodes","getConfiguration","isInFinalState","getTagsFromConfiguration","has","getChildren","getValue","isLeafNode","getAllChildren","createInvocableActor","toInvokeDefinition","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","EMPTY_OBJECT","isStateId","str","createDefaultOptions","actions","guards","services","activities","delays","validateArrayifiedTransitions","stateNode","event","transitions","hasNonLastUnguardedTarget","slice","some","transition","target","eventText","concat","id","StateNode","config","options","_context","_stateInfo","context","undefined","_this","_a","order","__xstatenode","__cache","events","relativeValue","Map","initialStateValue","initialState","on","candidates","delayedTransitions","idMap","tags","Object","assign","parent","key","machine","delimiter","join","version","type","parallel","states","keys","length","history","schema","description","initial","stateConfig","dfs","e_1","_b","_c","next","child","value","e_1_1","return","call","_transient","always","Array","strict","onEntry","entry","map","action","onExit","exit","meta","doneData","data","invokeConfig","i","invokeId","src","invokeSource","activity","bind","prototype","_init","forEach","withConfig","withContext","defineProperty","get","enumerable","configurable","state","definition","toJSON","reduce","eventType","push","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","delay","delayRef","configTransition","resolvedTransition","resolvedDelay","isNaN","delayedTransition","formatTransition","getStateNodes","stateValue","getStateNode","subStateKeys","subStateNodes","apply","subStateKey","handles","includes","resolveState","stateFromConfig","create","configuration","from","resolve","transitionLeafNode","_event","transitionCompoundNode","_transition","transitionParallelNode","e_2","transitionMap","subStateValue","subStateNode","e_2_1","stateTransitions","enabledTransitions","st","willTransition","entryNodes","t","entrySet","exitSet","source","getTransitionData","e_3","name","nextStateNodes","selectedTransition","candidate","cond","stateIn","in","resolvedContext","isInState","matches","getStateNodeById","guardPassed","err","Error","message","e_3_1","allNextStateNodes","getRelativeStateNodes","historyValue","isInternal","internal","reentryNodes","targetNode","getExternalReentryNodes","nodes","marker","possibleAncestor","getActions","resolvedConfig","isDone","currentContext","prevState","predictableExec","e_4","e_5","prevConfig","resolvedConfig_1","resolvedConfig_1_1","sn","e_4_1","prevConfig_1","prevConfig_1_1","e_5_1","doneEvents","grandparent","every","parentNode","sort","a","b","entryStates","Set","exitStates","entryActions","invokeActions","exitActions","stopActions","to","Internal","exec","currentState","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","e_6","e_7","resolvedConfiguration","actionBlocks","actionBlocks_1","actionBlocks_1_1","block","block_1","block_1_1","e_7_1","e_6_1","predictableActionArguments","preserveActionOrder","resolvedActions","updatedContext","_d","raisedEvents","nonRaisedActions","children","acc","nextState","_sessionid","didUpdateContext","changed","hasAlwaysTransitions","maybeNextState","raisedEvent","shift","stateKey","result","stateId","resolvedStateId","getStateNodeByPath","statePath","e","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodes","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","childStateNode","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","e_8","e_9","ownEvents","_e","_f","event_1","add","e_9_1","e_8_1","resolveTarget","_target","isInternalTarget","resolvedTarget","targetStateNode","transitionConfig","normalizedTarget","e_10","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","eventlessConfig","doneConfig","onDone","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","e_10_1"],"mappings":"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","sourcesContent":["import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { raise as raise$1, send, start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send as send$1, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\n\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send$1(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = [];\n\n    if (!isInternal) {\n      nextStateNodes.forEach(function (targetNode) {\n        reentryNodes.push.apply(reentryNodes, __spreadArray([], __read(_this.getExternalReentryNodes(targetNode)), false));\n      });\n    }\n\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.getExternalReentryNodes = function (targetNode) {\n    var nodes = [];\n\n    var _a = __read(targetNode.order > this.order ? [targetNode, this] : [this, targetNode], 2),\n        marker = _a[0],\n        possibleAncestor = _a[1];\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn) || has(transition.entrySet, sn.parent) && !has(transition.entrySet, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n    var entryActions = Array.from(entryStates).map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions);\n    }).concat([doneEvents.map(raise)]);\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })), false), _this.machine.options.actions);\n    });\n    var actions = exitActions.concat([toActionObjects(transition.actions, this.machine.options.actions)]).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return action.type !== raise$1 && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n      });\n      return actions.concat([stopActions]);\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var block_1 = (e_7 = void 0, __values(block)), block_1_1 = block_1.next(); !block_1_1.done; block_1_1 = block_1.next()) {\n            var action = block_1_1.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (block_1_1 && !block_1_1.done && (_b = block_1.return)) _b.call(block_1);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _c = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _c[0],\n        updatedContext = _c[1];\n\n    var _d = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _d[0],\n        nonRaisedActions = _d[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };\n"]},"metadata":{},"sourceType":"module"}