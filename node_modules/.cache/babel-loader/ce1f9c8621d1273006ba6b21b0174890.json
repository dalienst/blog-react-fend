{"ast":null,"code":"export function isCoordinates(array) {\n  return Array.isArray(array) && typeof array[0] === \"number\" && typeof array[1] === \"number\";\n}\nexport function isCoordinatesArray(array) {\n  return isCoordinates(array[0]);\n}\nexport function isNamedLocation(object) {\n  return object && Array.isArray(object.coordinates) && typeof object.coordinates[0] === \"number\" && typeof object.coordinates[1] === \"number\";\n}\nexport function isNamedLocationArray(array) {\n  return isNamedLocation(array[0]);\n}\nexport function isGeofence(object) {\n  return object && typeof object.geofenceId === \"string\" && typeof object.geometry === \"object\";\n}\nexport function isGeofenceArray(array) {\n  return Array.isArray(array) && isGeofence(array[0]);\n}\nexport function isPolygon(object) {\n  return Array.isArray(object) && isCoordinatesArray(object[0]);\n}\nexport function isPolygonArray(array) {\n  return Array.isArray(array) && isPolygon(array[0]);\n}\nexport function isGeoJsonSource(source) {\n  return source.type === \"geojson\";\n}\nexport const strHasLength = str => typeof str === \"string\" && str.length > 0;\nexport const getFeaturesFromData = data => {\n  let features;\n\n  if (isCoordinatesArray(data)) {\n    features = data.map(point => {\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: point\n        },\n        properties: {\n          place_name: `Coordinates,${point}`\n        }\n      };\n    });\n  } else if (isNamedLocationArray(data)) {\n    features = data.map(location => {\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: location.coordinates\n        },\n        properties: {\n          title: location.title,\n          address: location.address\n        }\n      };\n    });\n  } else {\n    features = data;\n  }\n\n  return features;\n};\nexport const urlEncodePeriods = str => {\n  return str.replace(/\\./g, \"%2E\");\n};\nexport function validateCoordinates(coordinates) {\n  const [lng, lat] = coordinates;\n\n  if (!Number.isFinite(lng) || !Number.isFinite(lat)) {\n    throw new Error(`Invalid coordinates: [${lng},${lat}]`);\n  }\n\n  if (lat < -90 || lat > 90) {\n    const errorString = \"Latitude must be between -90 and 90 degrees inclusive.\";\n    console.warn(errorString);\n    throw new Error(errorString);\n  } else if (lng < -180 || lng > 180) {\n    const errorString = \"Longitude must be between -180 and 180 degrees inclusive.\";\n    console.warn(errorString);\n    throw new Error(errorString);\n  }\n}\nexport function createElement(tagName, className, container) {\n  const el = window.document.createElement(tagName);\n  if (className !== undefined) el.className = className;\n  if (container) container.appendChild(el);\n  return el;\n}\nexport function removeElement(node) {\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}","map":{"version":3,"sources":["/home/dalienst/node_modules/maplibre-gl-js-amplify/lib/esm/utils.js"],"names":["isCoordinates","array","Array","isArray","isCoordinatesArray","isNamedLocation","object","coordinates","isNamedLocationArray","isGeofence","geofenceId","geometry","isGeofenceArray","isPolygon","isPolygonArray","isGeoJsonSource","source","type","strHasLength","str","length","getFeaturesFromData","data","features","map","point","properties","place_name","location","title","address","urlEncodePeriods","replace","validateCoordinates","lng","lat","Number","isFinite","Error","errorString","console","warn","createElement","tagName","className","container","el","window","document","undefined","appendChild","removeElement","node","parentNode","removeChild"],"mappings":"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","sourcesContent":["export function isCoordinates(array) {\n    return (Array.isArray(array) &&\n        typeof array[0] === \"number\" &&\n        typeof array[1] === \"number\");\n}\nexport function isCoordinatesArray(array) {\n    return isCoordinates(array[0]);\n}\nexport function isNamedLocation(object) {\n    return (object &&\n        Array.isArray(object.coordinates) &&\n        typeof object.coordinates[0] === \"number\" &&\n        typeof object.coordinates[1] === \"number\");\n}\nexport function isNamedLocationArray(array) {\n    return isNamedLocation(array[0]);\n}\nexport function isGeofence(object) {\n    return (object &&\n        typeof object.geofenceId === \"string\" &&\n        typeof object.geometry === \"object\");\n}\nexport function isGeofenceArray(array) {\n    return Array.isArray(array) && isGeofence(array[0]);\n}\nexport function isPolygon(object) {\n    return Array.isArray(object) && isCoordinatesArray(object[0]);\n}\nexport function isPolygonArray(array) {\n    return Array.isArray(array) && isPolygon(array[0]);\n}\nexport function isGeoJsonSource(source) {\n    return source.type === \"geojson\";\n}\nexport const strHasLength = (str) => typeof str === \"string\" && str.length > 0;\nexport const getFeaturesFromData = (data) => {\n    let features;\n    if (isCoordinatesArray(data)) {\n        features = data.map((point) => {\n            return {\n                type: \"Feature\",\n                geometry: { type: \"Point\", coordinates: point },\n                properties: { place_name: `Coordinates,${point}` },\n            };\n        });\n    }\n    else if (isNamedLocationArray(data)) {\n        features = data.map((location) => {\n            return {\n                type: \"Feature\",\n                geometry: { type: \"Point\", coordinates: location.coordinates },\n                properties: { title: location.title, address: location.address },\n            };\n        });\n    }\n    else {\n        features = data;\n    }\n    return features;\n};\nexport const urlEncodePeriods = (str) => {\n    return str.replace(/\\./g, \"%2E\");\n};\nexport function validateCoordinates(coordinates) {\n    const [lng, lat] = coordinates;\n    if (!Number.isFinite(lng) || !Number.isFinite(lat)) {\n        throw new Error(`Invalid coordinates: [${lng},${lat}]`);\n    }\n    if (lat < -90 || lat > 90) {\n        const errorString = \"Latitude must be between -90 and 90 degrees inclusive.\";\n        console.warn(errorString);\n        throw new Error(errorString);\n    }\n    else if (lng < -180 || lng > 180) {\n        const errorString = \"Longitude must be between -180 and 180 degrees inclusive.\";\n        console.warn(errorString);\n        throw new Error(errorString);\n    }\n}\nexport function createElement(tagName, className, container) {\n    const el = window.document.createElement(tagName);\n    if (className !== undefined)\n        el.className = className;\n    if (container)\n        container.appendChild(el);\n    return el;\n}\nexport function removeElement(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}