{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer, Platform } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\n\nvar RestClient =\n/** @class */\nfunction () {\n  /**\n   * @param {RestClientOptions} [options] - Instance options\n   */\n  function RestClient(options) {\n    this._region = 'us-east-1'; // this will be updated by endpoint function\n\n    this._service = 'execute-api'; // this can be updated by endpoint function\n\n    this._custom_header = undefined; // this can be updated by endpoint function\n\n    /**\n     * This weak map provides functionality to let clients cancel\n     * in-flight axios requests. https://github.com/axios/axios#cancellation\n     *\n     * 1. For every axios request, a unique cancel token is generated and added in the request.\n     * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n     * 3. The promise is returned to the client.\n     * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n     * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n     * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n     * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n     *\n     * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n     */\n\n    this._cancelTokenMap = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n\n    if (this._cancelTokenMap == null) {\n      this._cancelTokenMap = new WeakMap();\n    }\n  }\n  /**\n  * Update AWS credentials\n  * @param {AWSCredentials} credentials - AWS credentials\n  *\n  updateCredentials(credentials: AWSCredentials) {\n      this.options.credentials = credentials;\n  }\n  */\n\n  /**\n   * Basic HTTP request. Customizable\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {string} method - Request HTTP method\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsed_url, url, region, service, custom_header, params, libraryHeaders, userAgent, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            logger.debug(method, urlOrApiInfo);\n            region = 'us-east-1';\n            service = 'execute-api';\n            custom_header = undefined;\n\n            if (typeof urlOrApiInfo === 'string') {\n              parsed_url = this._parseUrl(urlOrApiInfo);\n              url = urlOrApiInfo;\n            } else {\n              url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service;\n              parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n            }\n\n            params = {\n              method: method,\n              url: url,\n              host: parsed_url.host,\n              path: parsed_url.path,\n              headers: {},\n              data: null,\n              responseType: 'json',\n              timeout: 0,\n              cancelToken: null\n            };\n            libraryHeaders = {};\n\n            if (Platform.isReactNative) {\n              userAgent = Platform.userAgent || 'aws-amplify/0.1.x';\n              libraryHeaders = {\n                'User-Agent': userAgent\n              };\n            }\n\n            initParams = Object.assign({}, init);\n            isAllResponse = initParams.response;\n\n            if (initParams.body) {\n              if (typeof FormData === 'function' && initParams.body instanceof FormData) {\n                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                params.data = initParams.body;\n              } else {\n                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                params.data = JSON.stringify(initParams.body);\n              }\n            }\n\n            if (initParams.responseType) {\n              params.responseType = initParams.responseType;\n            }\n\n            if (initParams.withCredentials) {\n              params['withCredentials'] = initParams.withCredentials;\n            }\n\n            if (initParams.timeout) {\n              params.timeout = initParams.timeout;\n            }\n\n            if (initParams.cancellableToken) {\n              params.cancelToken = initParams.cancellableToken.token;\n            }\n\n            params['signerServiceInfo'] = initParams.signerServiceInfo;\n            if (!(typeof custom_header === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , custom_header()];\n\n          case 1:\n            _a = _c.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = undefined;\n            _c.label = 3;\n\n          case 3:\n            custom_header_obj = _a;\n            params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n            _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n            params.url = format(__assign(__assign({}, parsedUrl), {\n              query: __assign(__assign({}, parsedUrl.query), initParams.queryStringParameters || {})\n            })); // Do not sign the request if client has added 'Authorization' header,\n            // which means custom authorizer.\n\n            if (typeof params.headers['Authorization'] !== 'undefined') {\n              params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                if (params.headers[k]) {\n                  acc[k] = params.headers[k];\n                }\n\n                return acc; // tslint:disable-next-line:align\n              }, {});\n              return [2\n              /*return*/\n              , this._request(params, isAllResponse)];\n            } // Signing the request in case there credentials are available\n\n\n            return [2\n            /*return*/\n            , this.Credentials.get().then(function (credentials) {\n              return _this._signed(__assign({}, params), credentials, isAllResponse, {\n                region: region,\n                service: service\n              }).catch(function (error) {\n                if (DateUtils.isClockSkewError(error)) {\n                  var headers = error.response.headers;\n                  var dateHeader = headers && (headers.date || headers.Date);\n                  var responseDate = new Date(dateHeader);\n                  var requestDate = DateUtils.getDateFromHeaderString(params.headers['x-amz-date']); // Compare local clock to the server clock\n\n                  if (DateUtils.isClockSkewed(responseDate)) {\n                    DateUtils.setClockOffset(responseDate.getTime() - requestDate.getTime());\n                    return _this.ajax(urlOrApiInfo, method, init);\n                  }\n                }\n\n                throw error;\n              });\n            }, function (err) {\n              logger.debug('No credentials available, the request will be unsigned');\n              return _this._request(params, isAllResponse);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * GET HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {JSON} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.get = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'GET', init);\n  };\n  /**\n   * PUT HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.put = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PUT', init);\n  };\n  /**\n   * PATCH HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.patch = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PATCH', init);\n  };\n  /**\n   * POST HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.post = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'POST', init);\n  };\n  /**\n   * DELETE HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.del = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'DELETE', init);\n  };\n  /**\n   * HEAD HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.head = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'HEAD', init);\n  };\n  /**\n   * Cancel an inflight API request\n   * @param {Promise<any>} request - The request promise to cancel\n   * @param {string} [message] - A message to include in the cancelation exception\n   */\n\n\n  RestClient.prototype.cancel = function (request, message) {\n    var source = this._cancelTokenMap.get(request);\n\n    if (source) {\n      source.cancel(message);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  RestClient.prototype.hasCancelToken = function (request) {\n    return this._cancelTokenMap.has(request);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  RestClient.prototype.isCancel = function (error) {\n    return axios.isCancel(error);\n  };\n  /**\n   * Retrieves a new and unique cancel token which can be\n   * provided in an axios request to be cancelled later.\n   */\n\n\n  RestClient.prototype.getCancellableToken = function () {\n    return axios.CancelToken.source();\n  };\n  /**\n   * Updates the weakmap with a response promise and its\n   * cancel token such that the cancel token can be easily\n   * retrieved (and used for cancelling the request)\n   */\n\n\n  RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n    this._cancelTokenMap.set(promise, cancelTokenSource);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  RestClient.prototype.endpoint = function (apiName) {\n    var _this = this;\n\n    var cloud_logic_array = this._options.endpoints;\n    var response = '';\n\n    if (!Array.isArray(cloud_logic_array)) {\n      return response;\n    }\n\n    cloud_logic_array.forEach(function (v) {\n      if (v.name === apiName) {\n        response = v.endpoint;\n\n        if (typeof v.region === 'string') {\n          _this._region = v.region;\n        } else if (typeof _this._options.region === 'string') {\n          _this._region = _this._options.region;\n        }\n\n        if (typeof v.service === 'string') {\n          _this._service = v.service || 'execute-api';\n        } else {\n          _this._service = 'execute-api';\n        }\n\n        if (typeof v.custom_header === 'function') {\n          _this._custom_header = v.custom_header;\n        } else {\n          _this._custom_header = undefined;\n        }\n      }\n    });\n    return response;\n  };\n  /** private methods **/\n\n\n  RestClient.prototype._signed = function (params, credentials, isAllResponse, _a) {\n    var service = _a.service,\n        region = _a.region;\n\n    var signerServiceInfoParams = params.signerServiceInfo,\n        otherParams = __rest(params, [\"signerServiceInfo\"]);\n\n    var endpoint_region = region || this._region || this._options.region;\n    var endpoint_service = service || this._service || this._options.service;\n    var creds = {\n      secret_key: credentials.secretAccessKey,\n      access_key: credentials.accessKeyId,\n      session_token: credentials.sessionToken\n    };\n    var endpointInfo = {\n      region: endpoint_region,\n      service: endpoint_service\n    };\n    var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n    var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n\n    if (signed_params.data) {\n      signed_params.body = signed_params.data;\n    }\n\n    logger.debug('Signed Request: ', signed_params);\n    delete signed_params.headers['host'];\n    return axios(signed_params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n\n  RestClient.prototype._request = function (params, isAllResponse) {\n    if (isAllResponse === void 0) {\n      isAllResponse = false;\n    }\n\n    return axios(params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n\n  RestClient.prototype._parseUrl = function (url) {\n    var parts = url.split('/');\n    return {\n      host: parts[2],\n      path: '/' + parts.slice(3).join('/')\n    };\n  };\n\n  return RestClient;\n}();\n\nexport { RestClient };","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","Credentials","DateUtils","Signer","Platform","axios","parse","format","logger","options","undefined","_options","debug","_cancelTokenMap","WeakMap","RestClient","urlOrApiInfo","method","init","region","service","custom_header","parsed_url","_parseUrl","url","endpoint","params","host","path","headers","data","responseType","timeout","cancelToken","libraryHeaders","isReactNative","userAgent","initParams","Object","assign","isAllResponse","response","body","FormData","JSON","stringify","withCredentials","cancellableToken","token","signerServiceInfo","_a","custom_header_obj","__assign","_b","search","parsedUrl","query","queryStringParameters","keys","reduce","acc","k","_request","get","then","_this","_signed","credentials","catch","isClockSkewError","error","dateHeader","date","Date","responseDate","requestDate","getDateFromHeaderString","isClockSkewed","setClockOffset","getTime","ajax","request","message","source","cancel","has","isCancel","CancelToken","promise","cancelTokenSource","set","apiName","cloud_logic_array","endpoints","Array","isArray","forEach","v","name","_region","_service","_custom_header","otherParams","endpoint_region","endpoint_service","creds","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","endpointInfo","signerServiceInfoParams","signed_params","sign","parts","split","slice","join"],"sources":["/home/dalienst/node_modules/@aws-amplify/api-rest/src/RestClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n\tConsoleLogger as Logger,\n\tCredentials,\n\tDateUtils,\n\tSigner,\n\tPlatform,\n} from '@aws-amplify/core';\n\nimport { apiOptions, ApiInfo } from './types';\nimport axios, { CancelTokenSource } from 'axios';\nimport { parse, format } from 'url';\n\nconst logger = new Logger('RestClient');\n\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nexport class RestClient {\n\tprivate _options;\n\tprivate _region: string = 'us-east-1'; // this will be updated by endpoint function\n\tprivate _service: string = 'execute-api'; // this can be updated by endpoint function\n\tprivate _custom_header = undefined; // this can be updated by endpoint function\n\n\t/**\n\t * This weak map provides functionality to let clients cancel\n\t * in-flight axios requests. https://github.com/axios/axios#cancellation\n\t *\n\t * 1. For every axios request, a unique cancel token is generated and added in the request.\n\t * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n\t * 3. The promise is returned to the client.\n\t * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n\t * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n\t * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n\t * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n\t *\n\t * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n\t */\n\tprivate _cancelTokenMap: WeakMap<any, CancelTokenSource> = null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * @param {RestClientOptions} [options] - Instance options\n\t */\n\tconstructor(options: apiOptions) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t\tif (this._cancelTokenMap == null) {\n\t\t\tthis._cancelTokenMap = new WeakMap();\n\t\t}\n\t}\n\n\t/**\n    * Update AWS credentials\n    * @param {AWSCredentials} credentials - AWS credentials\n    *\n    updateCredentials(credentials: AWSCredentials) {\n        this.options.credentials = credentials;\n    }\n*/\n\t/**\n\t * Basic HTTP request. Customizable\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {string} method - Request HTTP method\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync ajax(urlOrApiInfo: string | ApiInfo, method: string, init) {\n\t\tlogger.debug(method, urlOrApiInfo);\n\n\t\tlet parsed_url;\n\t\tlet url: string;\n\t\tlet region: string = 'us-east-1';\n\t\tlet service: string = 'execute-api';\n\t\tlet custom_header: () => {\n\t\t\t[key: string]: string;\n\t\t} = undefined;\n\n\t\tif (typeof urlOrApiInfo === 'string') {\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo);\n\t\t\turl = urlOrApiInfo;\n\t\t} else {\n\t\t\t({ endpoint: url, custom_header, region, service } = urlOrApiInfo);\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n\t\t}\n\n\t\tconst params = {\n\t\t\tmethod,\n\t\t\turl,\n\t\t\thost: parsed_url.host,\n\t\t\tpath: parsed_url.path,\n\t\t\theaders: {},\n\t\t\tdata: null,\n\t\t\tresponseType: 'json',\n\t\t\ttimeout: 0,\n\t\t\tcancelToken: null,\n\t\t};\n\n\t\tlet libraryHeaders = {};\n\n\t\tif (Platform.isReactNative) {\n\t\t\tconst userAgent = Platform.userAgent || 'aws-amplify/0.1.x';\n\t\t\tlibraryHeaders = {\n\t\t\t\t'User-Agent': userAgent,\n\t\t\t};\n\t\t}\n\n\t\tconst initParams = Object.assign({}, init);\n\t\tconst isAllResponse = initParams.response;\n\t\tif (initParams.body) {\n\t\t\tif (\n\t\t\t\ttypeof FormData === 'function' &&\n\t\t\t\tinitParams.body instanceof FormData\n\t\t\t) {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\tparams.data = initParams.body;\n\t\t\t} else {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n\t\t\t\tparams.data = JSON.stringify(initParams.body);\n\t\t\t}\n\t\t}\n\t\tif (initParams.responseType) {\n\t\t\tparams.responseType = initParams.responseType;\n\t\t}\n\t\tif (initParams.withCredentials) {\n\t\t\tparams['withCredentials'] = initParams.withCredentials;\n\t\t}\n\t\tif (initParams.timeout) {\n\t\t\tparams.timeout = initParams.timeout;\n\t\t}\n\t\tif (initParams.cancellableToken) {\n\t\t\tparams.cancelToken = initParams.cancellableToken.token;\n\t\t}\n\n\t\tparams['signerServiceInfo'] = initParams.signerServiceInfo;\n\n\t\t// custom_header callback\n\t\tconst custom_header_obj =\n\t\t\ttypeof custom_header === 'function' ? await custom_header() : undefined;\n\n\t\tparams.headers = {\n\t\t\t...libraryHeaders,\n\t\t\t...custom_header_obj,\n\t\t\t...initParams.headers,\n\t\t};\n\n\t\t// Intentionally discarding search\n\t\tconst { search, ...parsedUrl } = parse(url, true, true);\n\t\tparams.url = format({\n\t\t\t...parsedUrl,\n\t\t\tquery: {\n\t\t\t\t...parsedUrl.query,\n\t\t\t\t...(initParams.queryStringParameters || {}),\n\t\t\t},\n\t\t});\n\n\t\t// Do not sign the request if client has added 'Authorization' header,\n\t\t// which means custom authorizer.\n\t\tif (typeof params.headers['Authorization'] !== 'undefined') {\n\t\t\tparams.headers = Object.keys(params.headers).reduce((acc, k) => {\n\t\t\t\tif (params.headers[k]) {\n\t\t\t\t\tacc[k] = params.headers[k];\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t\t// tslint:disable-next-line:align\n\t\t\t}, {});\n\t\t\treturn this._request(params, isAllResponse);\n\t\t}\n\n\t\t// Signing the request in case there credentials are available\n\t\treturn this.Credentials.get().then(\n\t\t\tcredentials => {\n\t\t\t\treturn this._signed({ ...params }, credentials, isAllResponse, {\n\t\t\t\t\tregion,\n\t\t\t\t\tservice,\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (DateUtils.isClockSkewError(error)) {\n\t\t\t\t\t\tconst { headers } = error.response;\n\t\t\t\t\t\tconst dateHeader = headers && (headers.date || headers.Date);\n\t\t\t\t\t\tconst responseDate = new Date(dateHeader);\n\t\t\t\t\t\tconst requestDate = DateUtils.getDateFromHeaderString(\n\t\t\t\t\t\t\tparams.headers['x-amz-date']\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Compare local clock to the server clock\n\t\t\t\t\t\tif (DateUtils.isClockSkewed(responseDate)) {\n\t\t\t\t\t\t\tDateUtils.setClockOffset(\n\t\t\t\t\t\t\t\tresponseDate.getTime() - requestDate.getTime()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturn this.ajax(urlOrApiInfo, method, init);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tlogger.debug('No credentials available, the request will be unsigned');\n\t\t\t\treturn this._request(params, isAllResponse);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * GET HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {JSON} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'GET', init);\n\t}\n\n\t/**\n\t * PUT HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PUT', init);\n\t}\n\n\t/**\n\t * PATCH HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PATCH', init);\n\t}\n\n\t/**\n\t * POST HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'POST', init);\n\t}\n\n\t/**\n\t * DELETE HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'DELETE', init);\n\t}\n\n\t/**\n\t * HEAD HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'HEAD', init);\n\t}\n\n\t/**\n\t * Cancel an inflight API request\n\t * @param {Promise<any>} request - The request promise to cancel\n\t * @param {string} [message] - A message to include in the cancelation exception\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\tconst source = this._cancelTokenMap.get(request);\n\t\tif (source) {\n\t\t\tsource.cancel(message);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the request has a corresponding cancel token in the WeakMap.\n\t * @params request - The request promise\n\t * @return if the request has a corresponding cancel token.\n\t */\n\thasCancelToken(request: Promise<any>) {\n\t\treturn this._cancelTokenMap.has(request);\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error): boolean {\n\t\treturn axios.isCancel(error);\n\t}\n\n\t/**\n\t * Retrieves a new and unique cancel token which can be\n\t * provided in an axios request to be cancelled later.\n\t */\n\tgetCancellableToken(): CancelTokenSource {\n\t\treturn axios.CancelToken.source();\n\t}\n\n\t/**\n\t * Updates the weakmap with a response promise and its\n\t * cancel token such that the cancel token can be easily\n\t * retrieved (and used for cancelling the request)\n\t */\n\tupdateRequestToBeCancellable(\n\t\tpromise: Promise<any>,\n\t\tcancelTokenSource: CancelTokenSource\n\t) {\n\t\tthis._cancelTokenMap.set(promise, cancelTokenSource);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tendpoint(apiName: string) {\n\t\tconst cloud_logic_array = this._options.endpoints;\n\t\tlet response = '';\n\n\t\tif (!Array.isArray(cloud_logic_array)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tcloud_logic_array.forEach(v => {\n\t\t\tif (v.name === apiName) {\n\t\t\t\tresponse = v.endpoint;\n\t\t\t\tif (typeof v.region === 'string') {\n\t\t\t\t\tthis._region = v.region;\n\t\t\t\t} else if (typeof this._options.region === 'string') {\n\t\t\t\t\tthis._region = this._options.region;\n\t\t\t\t}\n\t\t\t\tif (typeof v.service === 'string') {\n\t\t\t\t\tthis._service = v.service || 'execute-api';\n\t\t\t\t} else {\n\t\t\t\t\tthis._service = 'execute-api';\n\t\t\t\t}\n\t\t\t\tif (typeof v.custom_header === 'function') {\n\t\t\t\t\tthis._custom_header = v.custom_header;\n\t\t\t\t} else {\n\t\t\t\t\tthis._custom_header = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn response;\n\t}\n\n\t/** private methods **/\n\n\tprivate _signed(params, credentials, isAllResponse, { service, region }) {\n\t\tconst { signerServiceInfo: signerServiceInfoParams, ...otherParams } =\n\t\t\tparams;\n\n\t\tconst endpoint_region: string =\n\t\t\tregion || this._region || this._options.region;\n\t\tconst endpoint_service: string =\n\t\t\tservice || this._service || this._options.service;\n\n\t\tconst creds = {\n\t\t\tsecret_key: credentials.secretAccessKey,\n\t\t\taccess_key: credentials.accessKeyId,\n\t\t\tsession_token: credentials.sessionToken,\n\t\t};\n\n\t\tconst endpointInfo = {\n\t\t\tregion: endpoint_region,\n\t\t\tservice: endpoint_service,\n\t\t};\n\n\t\tconst signerServiceInfo = Object.assign(\n\t\t\tendpointInfo,\n\t\t\tsignerServiceInfoParams\n\t\t);\n\n\t\tconst signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n\n\t\tif (signed_params.data) {\n\t\t\tsigned_params.body = signed_params.data;\n\t\t}\n\n\t\tlogger.debug('Signed Request: ', signed_params);\n\n\t\tdelete signed_params.headers['host'];\n\n\t\treturn axios(signed_params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _request(params, isAllResponse = false) {\n\t\treturn axios(params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _parseUrl(url) {\n\t\tconst parts = url.split('/');\n\n\t\treturn {\n\t\t\thost: parts[2],\n\t\t\tpath: '/' + parts.slice(3).join('/'),\n\t\t};\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}