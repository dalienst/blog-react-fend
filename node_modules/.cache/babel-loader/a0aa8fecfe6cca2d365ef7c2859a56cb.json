{"ast":null,"code":"import { strHasLength } from \"./utils\";\nimport { COLOR_BLACK, COLOR_WHITE, POPUP_BORDER_COLOR } from \"./constants\";\nexport function getPopupRenderFunction(unclusteredLayerId, _ref) {\n  let {\n    popupBackgroundColor: background = COLOR_WHITE,\n    popupBorderColor: borderColor = POPUP_BORDER_COLOR,\n    popupBorderWidth: borderWidth = 2,\n    popupFontColor: fontColor = COLOR_BLACK,\n    popupPadding: padding = 20,\n    popupBorderRadius: radius = 4,\n    popupTitleFontWeight: fontWeight = \"bold\"\n  } = _ref;\n  return selectedFeature => {\n    let title, address; // Try to get Title and address from existing feature properties\n\n    if (strHasLength(selectedFeature.properties.place_name)) {\n      const placeName = selectedFeature.properties.place_name.split(\",\");\n      title = placeName[0];\n      address = placeName.splice(1, placeName.length).join(\",\");\n    } else if (strHasLength(selectedFeature.properties.title) || strHasLength(selectedFeature.properties.address)) {\n      title = selectedFeature.properties.title;\n      address = selectedFeature.properties.address;\n    } else {\n      title = \"Coordinates\";\n      address = selectedFeature.geometry.coordinates;\n    }\n\n    const titleHtml = `<div class=\"${unclusteredLayerId}-popup-title\" style=\"font-weight: ${fontWeight};\">${title}</div>`;\n    const addressHtml = `<div class=\"${unclusteredLayerId}-popup-address\">${address}</div>`;\n    const popupHtmlStyle = `background: ${background}; border: ${borderWidth}px solid ${borderColor}; color: ${fontColor}; border-radius: ${radius}px; padding: ${padding}px; word-wrap: break-word; margin: -10px -10px -15px;`;\n    let popupHtml = `<div class=\"${unclusteredLayerId}-popup\" style=\"${popupHtmlStyle}\">`;\n    if (title) popupHtml += titleHtml;\n    if (address) popupHtml += addressHtml;\n    popupHtml += \"</div>\";\n    return popupHtml;\n  };\n}","map":{"version":3,"sources":["/home/dalienst/node_modules/maplibre-gl-js-amplify/lib/esm/popupRender.js"],"names":["strHasLength","COLOR_BLACK","COLOR_WHITE","POPUP_BORDER_COLOR","getPopupRenderFunction","unclusteredLayerId","popupBackgroundColor","background","popupBorderColor","borderColor","popupBorderWidth","borderWidth","popupFontColor","fontColor","popupPadding","padding","popupBorderRadius","radius","popupTitleFontWeight","fontWeight","selectedFeature","title","address","properties","place_name","placeName","split","splice","length","join","geometry","coordinates","titleHtml","addressHtml","popupHtmlStyle","popupHtml"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,kBAAnC,QAA6D,aAA7D;AACA,OAAO,SAASC,sBAAT,CAAgCC,kBAAhC,QAA+U;AAAA,MAA3R;AAAEC,IAAAA,oBAAoB,EAAEC,UAAU,GAAGL,WAArC;AAAkDM,IAAAA,gBAAgB,EAAEC,WAAW,GAAGN,kBAAlF;AAAsGO,IAAAA,gBAAgB,EAAEC,WAAW,GAAG,CAAtI;AAAyIC,IAAAA,cAAc,EAAEC,SAAS,GAAGZ,WAArK;AAAkLa,IAAAA,YAAY,EAAEC,OAAO,GAAG,EAA1M;AAA8MC,IAAAA,iBAAiB,EAAEC,MAAM,GAAG,CAA1O;AAA6OC,IAAAA,oBAAoB,EAAEC,UAAU,GAAG;AAAhR,GAA2R;AAClV,SAAQC,eAAD,IAAqB;AACxB,QAAIC,KAAJ,EAAWC,OAAX,CADwB,CAExB;;AACA,QAAItB,YAAY,CAACoB,eAAe,CAACG,UAAhB,CAA2BC,UAA5B,CAAhB,EAAyD;AACrD,YAAMC,SAAS,GAAGL,eAAe,CAACG,UAAhB,CAA2BC,UAA3B,CAAsCE,KAAtC,CAA4C,GAA5C,CAAlB;AACAL,MAAAA,KAAK,GAAGI,SAAS,CAAC,CAAD,CAAjB;AACAH,MAAAA,OAAO,GAAGG,SAAS,CAACE,MAAV,CAAiB,CAAjB,EAAoBF,SAAS,CAACG,MAA9B,EAAsCC,IAAtC,CAA2C,GAA3C,CAAV;AACH,KAJD,MAKK,IAAI7B,YAAY,CAACoB,eAAe,CAACG,UAAhB,CAA2BF,KAA5B,CAAZ,IACLrB,YAAY,CAACoB,eAAe,CAACG,UAAhB,CAA2BD,OAA5B,CADX,EACiD;AAClDD,MAAAA,KAAK,GAAGD,eAAe,CAACG,UAAhB,CAA2BF,KAAnC;AACAC,MAAAA,OAAO,GAAGF,eAAe,CAACG,UAAhB,CAA2BD,OAArC;AACH,KAJI,MAKA;AACDD,MAAAA,KAAK,GAAG,aAAR;AACAC,MAAAA,OAAO,GAAGF,eAAe,CAACU,QAAhB,CAAyBC,WAAnC;AACH;;AACD,UAAMC,SAAS,GAAI,eAAc3B,kBAAmB,qCAAoCc,UAAW,MAAKE,KAAM,QAA9G;AACA,UAAMY,WAAW,GAAI,eAAc5B,kBAAmB,mBAAkBiB,OAAQ,QAAhF;AACA,UAAMY,cAAc,GAAI,eAAc3B,UAAW,aAAYI,WAAY,YAAWF,WAAY,YAAWI,SAAU,oBAAmBI,MAAO,gBAAeF,OAAQ,uDAAtK;AACA,QAAIoB,SAAS,GAAI,eAAc9B,kBAAmB,kBAAiB6B,cAAe,IAAlF;AACA,QAAIb,KAAJ,EACIc,SAAS,IAAIH,SAAb;AACJ,QAAIV,OAAJ,EACIa,SAAS,IAAIF,WAAb;AACJE,IAAAA,SAAS,IAAI,QAAb;AACA,WAAOA,SAAP;AACH,GA3BD;AA4BH","sourcesContent":["import { strHasLength } from \"./utils\";\nimport { COLOR_BLACK, COLOR_WHITE, POPUP_BORDER_COLOR } from \"./constants\";\nexport function getPopupRenderFunction(unclusteredLayerId, { popupBackgroundColor: background = COLOR_WHITE, popupBorderColor: borderColor = POPUP_BORDER_COLOR, popupBorderWidth: borderWidth = 2, popupFontColor: fontColor = COLOR_BLACK, popupPadding: padding = 20, popupBorderRadius: radius = 4, popupTitleFontWeight: fontWeight = \"bold\", }) {\n    return (selectedFeature) => {\n        let title, address;\n        // Try to get Title and address from existing feature properties\n        if (strHasLength(selectedFeature.properties.place_name)) {\n            const placeName = selectedFeature.properties.place_name.split(\",\");\n            title = placeName[0];\n            address = placeName.splice(1, placeName.length).join(\",\");\n        }\n        else if (strHasLength(selectedFeature.properties.title) ||\n            strHasLength(selectedFeature.properties.address)) {\n            title = selectedFeature.properties.title;\n            address = selectedFeature.properties.address;\n        }\n        else {\n            title = \"Coordinates\";\n            address = selectedFeature.geometry.coordinates;\n        }\n        const titleHtml = `<div class=\"${unclusteredLayerId}-popup-title\" style=\"font-weight: ${fontWeight};\">${title}</div>`;\n        const addressHtml = `<div class=\"${unclusteredLayerId}-popup-address\">${address}</div>`;\n        const popupHtmlStyle = `background: ${background}; border: ${borderWidth}px solid ${borderColor}; color: ${fontColor}; border-radius: ${radius}px; padding: ${padding}px; word-wrap: break-word; margin: -10px -10px -15px;`;\n        let popupHtml = `<div class=\"${unclusteredLayerId}-popup\" style=\"${popupHtmlStyle}\">`;\n        if (title)\n            popupHtml += titleHtml;\n        if (address)\n            popupHtml += addressHtml;\n        popupHtml += \"</div>\";\n        return popupHtml;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}