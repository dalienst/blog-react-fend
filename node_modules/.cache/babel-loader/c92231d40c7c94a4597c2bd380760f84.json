{"ast":null,"code":"import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n  return 'state' in actorRef;\n}\n\nfunction isDeferredActor(actorRef) {\n  return 'deferred' in actorRef;\n}\n\nfunction defaultGetSnapshot(actorRef) {\n  return 'getSnapshot' in actorRef ? actorRef.getSnapshot() : isActorWithState(actorRef) ? actorRef.state : undefined;\n}\n\nexport function useActor(actorRef, getSnapshot) {\n  if (getSnapshot === void 0) {\n    getSnapshot = defaultGetSnapshot;\n  }\n\n  var actorRefRef = useRef(actorRef);\n  var deferredEventsRef = useRef([]);\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [actorRef]);\n  var boundGetSnapshot = useCallback(function () {\n    return getSnapshot(actorRef);\n  }, [actorRef, getSnapshot]);\n  var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n  var send = useConstant(function () {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var event = args[0];\n\n      if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n        console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n      }\n\n      var currentActorRef = actorRefRef.current; // If the previous actor is a deferred actor,\n      // queue the events so that they can be replayed\n      // on the non-deferred actor.\n\n      if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n        deferredEventsRef.current.push(event);\n      } else {\n        currentActorRef.send(event);\n      }\n    };\n  });\n  useIsomorphicLayoutEffect(function () {\n    actorRefRef.current = actorRef; // Dequeue deferred events from the previous deferred actorRef\n\n    while (deferredEventsRef.current.length > 0) {\n      var deferredEvent = deferredEventsRef.current.shift();\n      actorRef.send(deferredEvent);\n    }\n  }, [actorRef]);\n  return [storeSnapshot, send];\n}","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui-react-core/node_modules/@xstate/react/es/useActor.js"],"names":["useRef","useCallback","useIsomorphicLayoutEffect","useConstant","useSyncExternalStore","isActorWithState","actorRef","isDeferredActor","defaultGetSnapshot","getSnapshot","state","undefined","useActor","actorRefRef","deferredEventsRef","subscribe","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","send","args","_i","arguments","length","event","process","env","NODE_ENV","console","warn","concat","JSON","stringify","currentActorRef","current","deferred","push","deferredEvent","shift"],"mappings":"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","sourcesContent":["import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"]},"metadata":{},"sourceType":"module"}