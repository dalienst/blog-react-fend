{"ast":null,"code":"import { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport React, { useCallback, useMemo } from 'react';\nimport { useSelector } from '@xstate/react';\nimport { getServiceFacade } from '@aws-amplify/ui';\nimport 'react/jsx-runtime';\nimport { AuthenticatorContext } from '../../context/AuthenticatorContext.js';\nimport { USE_AUTHENTICATOR_ERROR } from './constants.js';\nimport { getMachineFields, getTotpSecretCodeCallback, getComparator, defaultComparator } from './utils.js';\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator/headless#useauthenticator-hook)\n */\n\nfunction useAuthenticator(selector) {\n  const context = React.useContext(AuthenticatorContext);\n\n  if (!context) {\n    throw new Error(USE_AUTHENTICATOR_ERROR);\n  }\n\n  const {\n    service\n  } = context;\n  const {\n    send\n  } = service;\n  const xstateSelector = useCallback(state => Object.assign({}, getServiceFacade({\n    send,\n    state\n  })), [send]);\n  const comparator = selector ? getComparator(selector) : defaultComparator;\n  const facade = useSelector(service, xstateSelector, comparator);\n\n  const {\n    route,\n    unverifiedContactMethods,\n    user\n  } = facade,\n        rest = __rest(facade, [\"route\", \"unverifiedContactMethods\", \"user\"]); // do not memoize output. `service.getSnapshot` reference remains stable preventing\n  // `fields` from updating with current form state on value changes\n\n\n  const serviceSnapshot = service.getSnapshot(); // legacy `formFields` values required until form state is removed from state machine\n\n  const fields = useMemo(() => getMachineFields(route, serviceSnapshot, unverifiedContactMethods), [route, serviceSnapshot, unverifiedContactMethods]);\n  return Object.assign(Object.assign({}, rest), {\n    getTotpSecretCode: getTotpSecretCodeCallback(user),\n    route,\n    unverifiedContactMethods,\n    user,\n\n    /** @deprecated For internal use only */\n    fields\n  });\n}\n\nexport { useAuthenticator as default };","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticator/useAuthenticator.js"],"names":["__rest","React","useCallback","useMemo","useSelector","getServiceFacade","AuthenticatorContext","USE_AUTHENTICATOR_ERROR","getMachineFields","getTotpSecretCodeCallback","getComparator","defaultComparator","useAuthenticator","selector","context","useContext","Error","service","send","xstateSelector","state","Object","assign","comparator","facade","route","unverifiedContactMethods","user","rest","serviceSnapshot","getSnapshot","fields","getTotpSecretCode","default"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0CAAvB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAO,mBAAP;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AACA,SAASC,gBAAT,EAA2BC,yBAA3B,EAAsDC,aAAtD,EAAqEC,iBAArE,QAA8F,YAA9F;AAEA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAChC,QAAMC,OAAO,GAAGb,KAAK,CAACc,UAAN,CAAiBT,oBAAjB,CAAhB;;AACA,MAAI,CAACQ,OAAL,EAAc;AACV,UAAM,IAAIE,KAAJ,CAAUT,uBAAV,CAAN;AACH;;AACD,QAAM;AAAEU,IAAAA;AAAF,MAAcH,OAApB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWD,OAAjB;AACA,QAAME,cAAc,GAAGjB,WAAW,CAAEkB,KAAD,IAAYC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,gBAAgB,CAAC;AAAEa,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,CAAlC,CAAb,EAAoE,CAACF,IAAD,CAApE,CAAlC;AACA,QAAMK,UAAU,GAAGV,QAAQ,GAAGH,aAAa,CAACG,QAAD,CAAhB,GAA6BF,iBAAxD;AACA,QAAMa,MAAM,GAAGpB,WAAW,CAACa,OAAD,EAAUE,cAAV,EAA0BI,UAA1B,CAA1B;;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,wBAAT;AAAmCC,IAAAA;AAAnC,MAA4CH,MAAlD;AAAA,QAA0DI,IAAI,GAAG5B,MAAM,CAACwB,MAAD,EAAS,CAAC,OAAD,EAAU,0BAAV,EAAsC,MAAtC,CAAT,CAAvE,CAVgC,CAWhC;AACA;;;AACA,QAAMK,eAAe,GAAGZ,OAAO,CAACa,WAAR,EAAxB,CAbgC,CAchC;;AACA,QAAMC,MAAM,GAAG5B,OAAO,CAAC,MAAMK,gBAAgB,CAACiB,KAAD,EAAQI,eAAR,EAAyBH,wBAAzB,CAAvB,EAA2E,CAACD,KAAD,EAAQI,eAAR,EAAyBH,wBAAzB,CAA3E,CAAtB;AACA,SAAOL,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,IAAlB,CAAd,EAAuC;AAAEI,IAAAA,iBAAiB,EAAEvB,yBAAyB,CAACkB,IAAD,CAA9C;AAAsDF,IAAAA,KAAtD;AAC1CC,IAAAA,wBAD0C;AAE1CC,IAAAA,IAF0C;;AAG1C;AACAI,IAAAA;AAJ0C,GAAvC,CAAP;AAKH;;AAED,SAASnB,gBAAgB,IAAIqB,OAA7B","sourcesContent":["import { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport React, { useCallback, useMemo } from 'react';\nimport { useSelector } from '@xstate/react';\nimport { getServiceFacade } from '@aws-amplify/ui';\nimport 'react/jsx-runtime';\nimport { AuthenticatorContext } from '../../context/AuthenticatorContext.js';\nimport { USE_AUTHENTICATOR_ERROR } from './constants.js';\nimport { getMachineFields, getTotpSecretCodeCallback, getComparator, defaultComparator } from './utils.js';\n\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator/headless#useauthenticator-hook)\n */\nfunction useAuthenticator(selector) {\n    const context = React.useContext(AuthenticatorContext);\n    if (!context) {\n        throw new Error(USE_AUTHENTICATOR_ERROR);\n    }\n    const { service } = context;\n    const { send } = service;\n    const xstateSelector = useCallback((state) => (Object.assign({}, getServiceFacade({ send, state }))), [send]);\n    const comparator = selector ? getComparator(selector) : defaultComparator;\n    const facade = useSelector(service, xstateSelector, comparator);\n    const { route, unverifiedContactMethods, user } = facade, rest = __rest(facade, [\"route\", \"unverifiedContactMethods\", \"user\"]);\n    // do not memoize output. `service.getSnapshot` reference remains stable preventing\n    // `fields` from updating with current form state on value changes\n    const serviceSnapshot = service.getSnapshot();\n    // legacy `formFields` values required until form state is removed from state machine\n    const fields = useMemo(() => getMachineFields(route, serviceSnapshot, unverifiedContactMethods), [route, serviceSnapshot, unverifiedContactMethods]);\n    return Object.assign(Object.assign({}, rest), { getTotpSecretCode: getTotpSecretCodeCallback(user), route,\n        unverifiedContactMethods,\n        user,\n        /** @deprecated For internal use only */\n        fields });\n}\n\nexport { useAuthenticator as default };\n"]},"metadata":{},"sourceType":"module"}