{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\n\nvar StorageCache =\n/** @class */\nfunction () {\n  /**\n   * Initialize the cache\n   * @param config - the configuration of the cache\n   */\n  function StorageCache(config) {\n    this.config = Object.assign({}, config);\n    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n    this.checkConfig();\n  }\n\n  StorageCache.prototype.getModuleName = function () {\n    return 'Cache';\n  };\n\n  StorageCache.prototype.checkConfig = function () {\n    // check configuration\n    if (!isInteger(this.config.capacityInBytes)) {\n      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n\n    if (!isInteger(this.config.itemMaxSize)) {\n      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (!isInteger(this.config.defaultTTL)) {\n      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n      this.config.defaultTTL = defaultConfig.defaultTTL;\n    }\n\n    if (!isInteger(this.config.defaultPriority)) {\n      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = defaultConfig.warningThreshold;\n    } // set 5MB limit\n\n\n    var cacheLimit = 5 * 1024 * 1024;\n\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n  };\n  /**\n   * produce a JSON object with meta-data and data value\n   * @param value - the value of the item\n   * @param options - optional, the specified meta-data\n   *\n   * @return - the item which has the meta-data and the value\n   */\n\n\n  StorageCache.prototype.fillCacheItem = function (key, value, options) {\n    var ret = {\n      key: key,\n      data: value,\n      timestamp: getCurrTime(),\n      visitedTime: getCurrTime(),\n      priority: options.priority,\n      expires: options.expires,\n      type: typeof value,\n      byteSize: 0\n    };\n    ret.byteSize = getByteLength(JSON.stringify(ret)); // for accurate size\n\n    ret.byteSize = getByteLength(JSON.stringify(ret));\n    return ret;\n  };\n  /**\n   * set cache with customized configuration\n   * @param config - customized configuration\n   *\n   * @return - the current configuration\n   */\n\n\n  StorageCache.prototype.configure = function (config) {\n    if (!config) {\n      return this.config;\n    }\n\n    if (config.keyPrefix) {\n      logger.warn(\"Don't try to configure keyPrefix!\");\n    }\n\n    this.config = Object.assign({}, this.config, config, config.Cache);\n    this.checkConfig();\n    return this.config;\n  };\n\n  return StorageCache;\n}();\n\nexport { StorageCache };","map":{"version":3,"mappings":"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","names":["getCurrTime","getByteLength","defaultConfig","isInteger","ConsoleLogger","Logger","logger","config","Object","assign","cacheCurSizeKey","keyPrefix","checkConfig","StorageCache","capacityInBytes","error","itemMaxSize","defaultTTL","defaultPriority","Number","warningThreshold","cacheLimit","key","value","options","ret","data","timestamp","visitedTime","priority","expires","type","byteSize","JSON","stringify","warn","Cache"],"sources":["/home/dalienst/node_modules/@aws-amplify/cache/src/StorageCache.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\r\n\r\nimport { CacheConfig, CacheItem, CacheItemOptions } from './types';\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\n\r\nconst logger = new Logger('StorageCache');\r\n\r\n/**\r\n * Initialization of the cache\r\n *\r\n */\r\nexport class StorageCache {\r\n\tprotected cacheCurSizeKey: string;\r\n\tprotected config: CacheConfig;\r\n\r\n\t/**\r\n\t * Initialize the cache\r\n\t * @param config - the configuration of the cache\r\n\t */\r\n\tconstructor(config: CacheConfig) {\r\n\t\tthis.config = Object.assign({}, config);\r\n\t\tthis.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\r\n\t\tthis.checkConfig();\r\n\t}\r\n\r\n\tpublic getModuleName() {\r\n\t\treturn 'Cache';\r\n\t}\r\n\r\n\tprivate checkConfig(): void {\r\n\t\t// check configuration\r\n\t\tif (!isInteger(this.config.capacityInBytes)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.itemMaxSize)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.defaultTTL)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultTTL = defaultConfig.defaultTTL;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.defaultPriority)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultPriority = defaultConfig.defaultPriority;\r\n\t\t}\r\n\r\n\t\tif (this.config.itemMaxSize > this.config.capacityInBytes) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n\t\t}\r\n\r\n\t\tif (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultPriority = defaultConfig.defaultPriority;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tNumber(this.config.warningThreshold) > 1 ||\r\n\t\t\tNumber(this.config.warningThreshold) < 0\r\n\t\t) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.warningThreshold = defaultConfig.warningThreshold;\r\n\t\t}\r\n\t\t// set 5MB limit\r\n\t\tconst cacheLimit: number = 5 * 1024 * 1024;\r\n\t\tif (this.config.capacityInBytes > cacheLimit) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * produce a JSON object with meta-data and data value\r\n\t * @param value - the value of the item\r\n\t * @param options - optional, the specified meta-data\r\n\t *\r\n\t * @return - the item which has the meta-data and the value\r\n\t */\r\n\tprotected fillCacheItem(\r\n\t\tkey: string,\r\n\t\tvalue: object | number | string | boolean,\r\n\t\toptions: CacheItemOptions\r\n\t): CacheItem {\r\n\t\tconst ret: CacheItem = {\r\n\t\t\tkey,\r\n\t\t\tdata: value,\r\n\t\t\ttimestamp: getCurrTime(),\r\n\t\t\tvisitedTime: getCurrTime(),\r\n\t\t\tpriority: options.priority,\r\n\t\t\texpires: options.expires,\r\n\t\t\ttype: typeof value,\r\n\t\t\tbyteSize: 0,\r\n\t\t};\r\n\r\n\t\tret.byteSize = getByteLength(JSON.stringify(ret));\r\n\r\n\t\t// for accurate size\r\n\t\tret.byteSize = getByteLength(JSON.stringify(ret));\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * set cache with customized configuration\r\n\t * @param config - customized configuration\r\n\t *\r\n\t * @return - the current configuration\r\n\t */\r\n\tpublic configure(config?: CacheConfig): CacheConfig {\r\n\t\tif (!config) {\r\n\t\t\treturn this.config;\r\n\t\t}\r\n\t\tif (config.keyPrefix) {\r\n\t\t\tlogger.warn(`Don't try to configure keyPrefix!`);\r\n\t\t}\r\n\r\n\t\tthis.config = Object.assign({}, this.config, config, config.Cache);\r\n\t\tthis.checkConfig();\r\n\t\treturn this.config;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}