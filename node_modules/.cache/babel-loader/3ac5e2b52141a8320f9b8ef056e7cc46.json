{"ast":null,"code":"/* global document */\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useRef, useContext } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport { MapContext } from './map';\nimport { deepEqual } from '../utils/deep-equal'; // Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\n\nfunction getClassList(className) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n/* eslint-disable complexity,max-statements */\n\n\nfunction Popup(props) {\n  const {\n    map,\n    mapLib\n  } = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({\n    props\n  });\n  thisRef.current.props = props;\n  const popup = useMemo(() => {\n    const options = { ...props\n    };\n    const pp = new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      var _a, _b;\n\n      (_b = (_a = thisRef.current.props).onOpen) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    return pp;\n  }, []);\n  useEffect(() => {\n    const onClose = e => {\n      var _a, _b;\n\n      (_b = (_a = thisRef.current.props).onClose) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    };\n\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    } // @ts-ignore\n\n\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    } // @ts-ignore\n\n\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    } // @ts-ignore\n\n\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      } // @ts-ignore\n\n\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n} // @ts-ignore\n\n\nexport default React.memo(Popup);","map":{"version":3,"mappings":"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","names":["React","createPortal","useEffect","useMemo","useRef","useContext","applyReactStyle","MapContext","deepEqual","getClassList","className","Set","trim","split","Popup","props","map","mapLib","container","document","createElement","thisRef","current","popup","options","pp","setLngLat","longitude","latitude","once","e","onOpen","_b","onClose","on","setDOMContent","addTo","getMap","off","isOpen","remove","getElement","style","getLngLat","lng","lat","offset","setOffset","anchor","maxWidth","setMaxWidth","prevClassList","nextClassList","c","has","removeClassName","addClassName","children","memo"],"sources":["/home/dalienst/node_modules/react-map-gl/src/components/popup.ts"],"sourcesContent":["/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, Anchor, PointLike, MapboxPopup} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /**\n   * A string indicating the part of the popup that should be positioned closest to the coordinate.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`,\n   * and `'bottom-right'`. If unset, the anchor will be dynamically set to ensure the popup falls within the map\n   * container with a preference for `'bottom'`.\n   */\n  anchor?: Anchor;\n  /**\n   * If `true`, a close button will appear in the top right corner of the popup.\n   * @default true\n   */\n  closeButton?: boolean;\n  /**\n   * If `true`, the popup will close when the map is clicked.\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * If `true`, the popup will closed when the map moves.\n   * @default false\n   */\n  closeOnMove?: boolean;\n  /**\n   * If `true`, the popup will try to focus the first focusable element inside the popup.\n   * @default true\n   */\n  focusAfterOpen?: boolean;\n  /**\n   * A pixel offset applied to the popup's location specified as:\n   * - a single number specifying a distance from the popup's location\n   * - a PointLike specifying a constant offset\n   * - an object of Points specifing an offset for each anchor position.\n   */\n  offset?: number | PointLike | Partial<{[anchor in Anchor]: PointLike}>;\n  /** Space-separated CSS class names to add to popup container. */\n  className?: string;\n  /**\n   * A string that sets the CSS property of the popup's maximum width (for example, `'300px'`).\n   * To ensure the popup resizes to fit its content, set this property to `'none'`\n   * @default \"240px\"\n   */\n  maxWidth?: string;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent) => void;\n  onClose?: (e: PopupEvent) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\n/* eslint-disable complexity,max-statements */\nfunction Popup(props: PopupProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const popup: MapboxPopup = useMemo(() => {\n    const options = {...props};\n    const pp = new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent);\n    });\n    return pp;\n  }, []);\n\n  useEffect(() => {\n    const onClose = e => {\n      thisRef.current.props.onClose?.(e as PopupEvent);\n    };\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    // @ts-ignore\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    // @ts-ignore\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    // @ts-ignore\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      // @ts-ignore\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\n// @ts-ignore\nexport default React.memo(Popup);\n"]},"metadata":{},"sourceType":"module"}