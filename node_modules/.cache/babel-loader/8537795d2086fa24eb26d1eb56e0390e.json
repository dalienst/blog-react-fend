{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Notifications } from '@aws-amplify/notifications';\nimport InAppMessagingContext from '../InAppMessagingContext/InAppMessagingContext.js';\nconst {\n  InAppMessaging\n} = Notifications;\n\nfunction InAppMessagingProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    const listener = InAppMessaging.onMessageReceived(message => {\n      setMessage(message);\n    });\n    return listener.remove;\n  }, []);\n  const clearMessage = useCallback(() => {\n    setMessage(null);\n  }, []);\n  const value = useMemo(() => ({\n    clearMessage,\n    displayMessage: setMessage,\n    message\n  }), [clearMessage, message]);\n  return jsx(InAppMessagingContext.Provider, Object.assign({\n    value: value\n  }, {\n    children: children\n  }));\n}\n\nexport { InAppMessagingProvider as default };","map":{"version":3,"sources":["/home/dalienst/node_modules/@aws-amplify/ui-react-core/dist/esm/InAppMessaging/context/InAppMessagingProvider/InAppMessagingProvider.js"],"names":["jsx","useState","useEffect","useCallback","useMemo","Notifications","InAppMessagingContext","InAppMessaging","InAppMessagingProvider","children","message","setMessage","listener","onMessageReceived","remove","clearMessage","value","displayMessage","Provider","Object","assign","default"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,OAA3C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,qBAAP,MAAkC,mDAAlC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAqBF,aAA3B;;AACA,SAASG,sBAAT,OAA+C;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAGL,cAAc,CAACM,iBAAf,CAAkCH,OAAD,IAAa;AAC3DC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KAFgB,CAAjB;AAGA,WAAOE,QAAQ,CAACE,MAAhB;AACH,GALQ,EAKN,EALM,CAAT;AAMA,QAAMC,YAAY,GAAGZ,WAAW,CAAC,MAAM;AACnCQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMK,KAAK,GAAGZ,OAAO,CAAC,OAAO;AACzBW,IAAAA,YADyB;AAEzBE,IAAAA,cAAc,EAAEN,UAFS;AAGzBD,IAAAA;AAHyB,GAAP,CAAD,EAIjB,CAACK,YAAD,EAAeL,OAAf,CAJiB,CAArB;AAKA,SAAQV,GAAG,CAACM,qBAAqB,CAACY,QAAvB,EAAiCC,MAAM,CAACC,MAAP,CAAc;AAAEJ,IAAAA,KAAK,EAAEA;AAAT,GAAd,EAAgC;AAAEP,IAAAA,QAAQ,EAAEA;AAAZ,GAAhC,CAAjC,CAAX;AACH;;AAED,SAASD,sBAAsB,IAAIa,OAAnC","sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Notifications } from '@aws-amplify/notifications';\nimport InAppMessagingContext from '../InAppMessagingContext/InAppMessagingContext.js';\n\nconst { InAppMessaging } = Notifications;\nfunction InAppMessagingProvider({ children, }) {\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        const listener = InAppMessaging.onMessageReceived((message) => {\n            setMessage(message);\n        });\n        return listener.remove;\n    }, []);\n    const clearMessage = useCallback(() => {\n        setMessage(null);\n    }, []);\n    const value = useMemo(() => ({\n        clearMessage,\n        displayMessage: setMessage,\n        message,\n    }), [clearMessage, message]);\n    return (jsx(InAppMessagingContext.Provider, Object.assign({ value: value }, { children: children })));\n}\n\nexport { InAppMessagingProvider as default };\n"]},"metadata":{},"sourceType":"module"}