{"ast":null,"code":"/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\nconst Constants = require(\"./constants\");\n\nmodule.exports = function (parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates; // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX || startCoord[1] < Constants.LAT_RENDERED_MIN || endCoord[1] > Constants.LAT_RENDERED_MAX || endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const ptA = map.project([startCoord[0], startCoord[1]]);\n  const ptB = map.project([endCoord[0], endCoord[1]]);\n  const mid = map.unproject([(ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2]);\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent: parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n};","map":{"version":3,"sources":["/home/dalienst/node_modules/maplibre-gl-draw-circle/lib/utils/create_midpoint.js"],"names":["Constants","require","module","exports","parent","startVertex","endVertex","map","startCoord","geometry","coordinates","endCoord","LAT_RENDERED_MAX","LAT_RENDERED_MIN","ptA","project","ptB","mid","unproject","x","y","type","geojsonTypes","FEATURE","properties","meta","MIDPOINT","lng","lat","coord_path","POINT"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,WAAlB,EAA+BC,SAA/B,EAA0CC,GAA1C,EAA+C;AAC9D,QAAMC,UAAU,GAAGH,WAAW,CAACI,QAAZ,CAAqBC,WAAxC;AACA,QAAMC,QAAQ,GAAGL,SAAS,CAACG,QAAV,CAAmBC,WAApC,CAF8D,CAI9D;AACA;;AACA,MACEF,UAAU,CAAC,CAAD,CAAV,GAAgBR,SAAS,CAACY,gBAA1B,IACAJ,UAAU,CAAC,CAAD,CAAV,GAAgBR,SAAS,CAACa,gBAD1B,IAEAF,QAAQ,CAAC,CAAD,CAAR,GAAcX,SAAS,CAACY,gBAFxB,IAGAD,QAAQ,CAAC,CAAD,CAAR,GAAcX,SAAS,CAACa,gBAJ1B,EAKE;AACA,WAAO,IAAP;AACD;;AAED,QAAMC,GAAG,GAAGP,GAAG,CAACQ,OAAJ,CAAY,CAACP,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,CAAZ,CAAZ;AACA,QAAMQ,GAAG,GAAGT,GAAG,CAACQ,OAAJ,CAAY,CAACJ,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,CAAZ,CAAZ;AACA,QAAMM,GAAG,GAAGV,GAAG,CAACW,SAAJ,CAAc,CAAC,CAACJ,GAAG,CAACK,CAAJ,GAAQH,GAAG,CAACG,CAAb,IAAkB,CAAnB,EAAsB,CAACL,GAAG,CAACM,CAAJ,GAAQJ,GAAG,CAACI,CAAb,IAAkB,CAAxC,CAAd,CAAZ;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAErB,SAAS,CAACsB,YAAV,CAAuBC,OADxB;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAEzB,SAAS,CAACyB,IAAV,CAAeC,QADX;AAEVtB,MAAAA,MAAM,EAAEA,MAFE;AAGVuB,MAAAA,GAAG,EAAEV,GAAG,CAACU,GAHC;AAIVC,MAAAA,GAAG,EAAEX,GAAG,CAACW,GAJC;AAKVC,MAAAA,UAAU,EAAEvB,SAAS,CAACkB,UAAV,CAAqBK;AALvB,KAFP;AASLpB,IAAAA,QAAQ,EAAE;AACRY,MAAAA,IAAI,EAAErB,SAAS,CAACsB,YAAV,CAAuBQ,KADrB;AAERpB,MAAAA,WAAW,EAAE,CAACO,GAAG,CAACU,GAAL,EAAUV,GAAG,CAACW,GAAd;AAFL;AATL,GAAP;AAcD,CAjCD","sourcesContent":["/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst Constants = require(\"./constants\");\n\nmodule.exports = function (parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (\n    startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN\n  ) {\n    return null;\n  }\n\n  const ptA = map.project([startCoord[0], startCoord[1]]);\n  const ptB = map.project([endCoord[0], endCoord[1]]);\n  const mid = map.unproject([(ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2]);\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent: parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path,\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat],\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"script"}